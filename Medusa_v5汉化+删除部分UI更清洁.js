//what's new?

//这个是去除主界面上左上方最大的UI的，还有右下角的快捷按钮
//有什么作用呢?
//:与其他脚本使用不会发生UI冲突
//比如skiddy的左上角菜单
//当然，你觉得哪个好看就是哪个

//ojbk




// Made By PandaHx
//汉化作者:我的丿心语(XinYu404)
//禁止盗改
//QQ群:636967743
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
var Button = android.widget.Button;
var LinearLayout = android.widget.LinearLayout;
var RelativeLayout = android.widget.RelativeLayout;
var PopupWindow = android.widget.PopupWindow;
var ScrollView = android.widget.ScrollView;
var TextView = android.widget.TextView;
var CheckBox = android.widget.CheckBox;
var Switch = android.widget.Switch;
var Toast = android.widget.Toast;
var Runnable = java.lang.Runnable;
var View = android.view.View;
var ColorDrawable = android.graphics.drawable.ColorDrawable;
var Color = android.graphics.Color;
var Gravity = android.view.Gravity;
var view = 0;
var Intent = android.content.Intent;
var Uri = android.net.Uri;

// >Colors<

// >MedusaBackGround<

var medusaBG =
'   '

var bgTG = new android.graphics.drawable.GradientDrawable();
bgTG.setColor(android.graphics.Color.BLACK); //ButtonBGColor
bgTG.setStroke(4, android.graphics.Color.GREEN); //ButtonStroke
bgTG.setCornerRadius(2); //ButtonCornerRadius
bgTG.setAlpha(200);

var bgL = new android.graphics.drawable.GradientDrawable();
bgL .setColor(android.graphics.Color.TRANSPARENT); //ButtonBGColor
bgL.setStroke(4, android.graphics.Color.GREEN); //ButtonStroke
bgL.setCornerRadius(2); //ButtonCornerRadius

var bgKB = new android.graphics.drawable.GradientDrawable();
bgKB.setColor(android.graphics.Color.BLACK); //ButtonBGColor
bgKB.setStroke(4, android.graphics.Color.GREEN); //ButtonStroke
bgKB.setCornerRadius(2); //ButtonCornerRadius
bgKB.setAlpha(200);

var bg = new android.graphics.drawable.GradientDrawable();
bg.setColor(android.graphics.Color.TRANSPARENT); //ButtonBGColor//ButtonStroke
bg.setCornerRadius(2); //ButtonCornerRadius

var bgon = new android.graphics.drawable.GradientDrawable();
bgon.setColor(android.graphics.Color.GREEN); //ButtonBGColor
bgon.setAlpha(200);
bgon.setCornerRadius(2); //ButtonCornerRadius

var bgoff = new android.graphics.drawable.GradientDrawable();
bgoff.setColor(android.graphics.Color.TRANSPARENT); //ButtonBGColor
 //ButtonStroke
bgoff.setCornerRadius(2); //ButtonCornerRadius

var bg1 = new android.graphics.drawable.GradientDrawable();
bg1.setColor(android.graphics.Color.BLACK); //ButtonBGColor
bg1.setStroke(4, android.graphics.Color.GREEN); //ButtonStroke
bg1.setCornerRadius(2); //ButtonCornerRadius
bg1.setAlpha(200);

var bg2 = new android.graphics.drawable.GradientDrawable();
bg2.setColor(android.graphics.Color.BLACK); //ButtonBGColor
bg2.setStroke(4, android.graphics.Color.GREEN); //ButtonStroke
bg2.setCornerRadius(2); //ButtonCornerRadius
bg2.setAlpha(200);

var xbg = new android.graphics.drawable.GradientDrawable();
xbg.setColor(android.graphics.Color.BLACK); //XButtonBGColor
xbg.setStroke(4, android.graphics.Color.GREEN); //XButtonStroke
xbg.setCornerRadius(2); //XButtonCornerRadius
xbg.setAlpha(200);

var btbg = new android.graphics.drawable.GradientDrawable();
btbg.setColor(Color.GREEN);
btbg.setAlpha(150);

var btbg2 = new android.graphics.drawable.GradientDrawable();
btbg2.setColor(Color.BLACK);
btbg2.setAlpha(150);


//>RainBow Shit<

var rainbow1 = false;
var rainbow = 0;

var tbg = new android.graphics.drawable.GradientDrawable();
tbg.setColor(android.graphics.Color.argb(0,0,0,0));//ButtonBGColor
tbg.setStroke(2,android.graphics.Color.TRANSPARENT); //ButtonStroke
tbg.setCornerRadius(0); //ButtonCornerRadius

// >Colors<

//  > MineCraft Menu <

function newLevel()
{
clientMessage("§aMedusaHack§eBy PandaHx;汉化:XinYu404");
clientMessage( ChatColor.BLUE + "SYSTEM:Welcome "+ ChatColor.GREEN + Player.getName(Player.getEntity()) + ChatColor.YELLOW + " Your Using Medusa");
ModPE.showTipMessage('§aHACKING IS FUN FUN!!')
}
ModPE.langEdit("menu.copyright", ChatColor.GREEN + "Medusa" + ChatColor.BLACK + "Hack: " + ChatColor.WHITE + " " + "YoUTube" + " PandaDroid");

function newLevel()
{
ModPE.showTipMessage('§aMade By: Ya Boi Panda')
ModPE.showTipMessage('§aHAVE FUN!!')
}
ModPE.langEdit("menu.copyright"," §e脚本:Medusa v5汉化:XinYu404");

// > MineCraft Menu <


// >Variables<

var mainbt = btbg;
var mainbt2 = btbg2;

// > MOVING Variables <

var dx = 0;
var dy = 0;
var dx2 = 0;
var dy2 = 0;
var mPosX2 = 0;
var mPosY2 = 0;

var dx232 = 0;
var dy232 = 0;
var mPosX232 = 285 + 285;
var mPosY232 = 0;

var dx23 = 0;
var dy23 = 0;
var mPosX23 = 285;
var mPosY23 = 0;

var dxf = 0;
var dyf = 0;
var mPosXf = 0;
var mPosYf = 0;

var dxj = 0;
var dyj = 0;
var mPosXj = 0;
var mPosYj = 0;
var moving = false;

// > MOVING  Variables <

//>TICK/TIMER VARIABLES<

var tick = 0;

var speedtick = 0;

var sethome;

var percent = 0;

var view = 0;

var lhtick = 0;

var cgtimer = 12;

//>TICK/TIMER VARIABLES<

var esp = false;

var gmSwitchs
var gmSwitched = false;

var daynight1
var daynight3 = false;

var gmSwitchs0
var gmSwitched3 = false;

var gmSwitchs1
var gmSwitchedd = false;

var gmSwitchs2
var gmSwitcheddd = false;

var gmSwitchs3
var gmSwitchedddd = false;

var gmSwitchs4
var gmSwitcheddddd = false;

var gmSwitchs5
var gmSwitchedddddd = false;

var gmSwitchs5
var gmSwitchedd2 = false;

var gmSwitchs6
var gmSwitchedd3 = false;

var gmSwitchs7
var gmSwitchedd4 = false;

var gmSwitchs8
var gmSwitchedd5 = false;

var gmSwitchs9
var gmSwitchedd6 = false;

var gmSwitchs10
var gmSwitchedd7 = false;

var gmSwitchs11
var gmSwitchedd8 = false;

var gmSwitchs12
var gmSwitchedd9 = false;

var gmSwitchs13
var gmSwitchedd10 = false;

var gmSwitchs14
var gmSwitchedd11 = false;

var aim;
var aimbot = false;
var aimed = false;

var vtped = false;
var vtp;
var vport = false;

var cspeeds
var cspeedss = false;
var cspeeded = false; 

var elevators = false;
var elevatored = false;

var elevators4
var elevatoredddd = false;

var ndglides
var ndglidess = false;
var ndglideed = false;

var taptowers
var taptowerss = false;
var taptowered = false;

var taptps
var taptpss = false;
var taptped = false;

var toggled = false;

var antikbs
var antikbss = false;
var antikbed = false;

var spams
var spamss = false;
var spammed = false;

var livecords
var livecordss = false;
var livecored = false;

var bhop = false;
var bhopl = false;
var bhoped = false;

var bhop2 = false;
var bhopll = false;
var bhoped2 = false;

var steps
var stepss = false;
var steped = false;

var farbots
var farbotss = false;
var farboted = false;

var hitboxs
var hitboxss = false;
var hitboxed = false;

var quickescapes
var quickescapess = false;
var quickescaped = false;

var jsed = false;
var js;
var jesus = false;

var msped = false;
var msp;
var motion = false;

var js 
var js1 = false;
var js2 = false;

var sw 
var sw1 = false;
var sw2 = false;

var mh
var mh1 = false;
var mh2 = false;

var sc
var sc1 = false;
var sc2 = false;

var nf
var nf1 = false;
var nf2 = false;

var fb
var fb1 = false;
var fb2 = false;

var glides
var glidess = false;
var glideed = false;

var pg
var pg1 = false;

var sm
var sm1 = false;

var sf
var sf1 = false;

var ci
var ci1 = false;

var fp
var fp1 = false;

var lg
var lg1 = false;

var ahged = false;
var ahg;
var ahunger = false;

var reged = false;
var reg;
var regen = false;

var bf2 = false;
var bf1 = false;
var bouncedelay = 9;
var bouncevel = 0.33;
var bouncespeed = 1.08;

var time = 2.0;

var lg 
var lg1 = false;
var lg2 = false;

var tb
var tb1 = false;
var tb2 = false;

var pe 
var pe1 = false;
var pe2 = false;

var yp
var yp1 = false;
var yp2 = false;

var ba
var ba1 = false;
var ba2 = false;

var airjumps
var airjumped = false;

var at
var at1 = false;
var at2 = false;

var aw
var aw1 = false;
var aw2 = false;

var sb2 = false;
var sb1 = false;
var bouncedelay = 9;
var bouncevel = 0.40;
var bouncespeed = 1.08;

var tima = 3.0;

var ls
var ls1 = false;
var ls2 = false;

var gr
var gr1 = false;
var gr2 = false;

var csb
var csb1 = false;
var csb2 = false;

var btp
var btp1 = false;
var btp2 = false;

var bz
var bz1 = false;
var bz2 = false;

var bw
var bw1 = false;
var bw2 = false;

var dv
var dv1 = false;
var dv2 = false;

var hj
var hj1 = false;
var hj2 = false;

var forcedestroys
var forcedestroyss = false;
var forcedestroyed = false;

var ch
var ch1 = false;
var ch2 = false;

var cs
var cs1 = false;
var cs2 = false;

var ab
var ab1 = false;
var ab2 = false;

var jp
var jp1 = false;
var jp2 = false;

var airjumpss
var airjumpedd = false;

var airjumpsss
var airjumpeddd = false;

var airjumpssss
var airjumpedddd = false;


var he
var he1 = false;
var he2 = false;

var dj
var dj1 = false;
var dj2 = false;

var lh
var lh1 = false;
var lh2 = false;

var bj
var bj1 = false;
var bj2 = false;

var ljj
var ljj1 = false;
var ljj2 = false;

var ir
var ir1 = false;
var ir2 = false;
var ir3 = null;

var lh
var lh1 = false;
var lh2 = false;
var can = 1;
var canGetHP = 1;
var HP;
var gravity = -0.07840000092983246;

var fa
var fa1 = false;
var fa2 = false;

var blj
var blj1 = false;
var blj2 = false;
var sacounter = null;

var ljc
var ljc1 = false;
var ljc2 = false;
var sboost = 0.9;
var jboost = 0.8
var fboost = 0.84;
var normalspeed = 1.00;

var tnt
var tnt1 = false;
var tnt2 = false;

var ar
var ar1 = false;
var ar2 = false;

var nt
var nt1 = false;
var nt2 = false;

var nw
var nw1 = false;
var nw2 = false;

var sp
var sp1 = false;
var sp2 = false;

var rtp
var rtp1 = false;
var rtp2 = false;

var mdglides
var mdglidess = false;
var mdglideed = false;

var gdglides
var gdglidess = false;
var gdglideed = false;

var ta
var ta1 = false;
var ta2 = false;
var ta3 = null;

var as
var as1 = false;
var as2 = false;

var sa
var sa1 = false;
var sa2 = false;

var saa
var saa1 = false;
var saa2 = false;

// > GUI Variables <

var Gui
var Gui1 = false;

var Gui
var Gui2 = false;

var Gui
var Gui3 = false;

var Gui
var Gui4 = false;

var Gui
var Gui9 = false;

// > GUI Variables <

var css
var css1 = false;
var css2 = false;

var fw
var fw1 = false;
var fw2 = false;

var bb
var bb1 = false;
var bb2 = false;

var aas
var aas1 = false;
var aas2 = false;

var az
var az1 = false;
var az2 = false;
var time = 0;

var ea
var ea1 = false;
var ea2 = false;
var tCounter = 0;


// >  GUI Variables <

var Gui
var Gui5 = false;

var Gui
var Gui6 = false;

var Gui
var Gui7 = false;

var GuiG
var GuiG = false;

// > GUI Variables <

var eaet = false;
var uspe = 2;

var stealths
var stealthss = false;
var stealthed = false;

var ddj
var ddj1 = false;
var ddj2 = false;

var ftp
var ftp1 = false;
var ftp2 = false;
var ftp3 = null;

var nbb
var nbb1 = false;
var nbb2 = false;

// > Variables <

var fl
var fl1 = false;
var fl2 = false;
var ladderspeed = 1;

var bst
var bst1 = false;
var bst2 = false;

var ff
var ff1 = false;
var ff2 = false;

var fv
var fv1 = false;
var fv2 = false;
var vinespeed = 1;

var fi
var fi1 = false;
var fi2 = false;

var cm
var cm1 = false;
var cm2 = false;
var tptick = 0;

var nw
var nw1 = false;
var nw2 = false;

// > Variables <

var asb
var asb1 = false;
var asb2 = false;

var da
var da1 = false;
var da2 = false;

var bgl
var bgl1 = false;
var bgl2 = false;
var mftick = 0;

var ninja
var ninja1 = false;
var ninja2 = false;

var textview

var pvp
var pvp1 = false;
var pvp2 = false;

var aimbot1
var ab1 = false;
var ab2 = false;

// > Variables <

var aimbot2 = false;
var abb1 = false;
var abb2 = false;

// > Variables <

var aimbot3 = false;
var abbb1 = false;
var abbb2 = false;

// > Variables <

var aimbot4 = false;
var abbbb1 = false;
var abbbb2 = false;

// > Variables <

var ap
var ap1 = false;
var ap2 = false;
var autohealth = 5;

// > Variables <

var info = false;

var info = false;

// > Variables <

var player1 =  Player.getName(Player.getEntity())

// > Variables <

var playerH = Entity.getHealth(getPlayerEnt())

// > Variables <

var aga
var aga1 = false;
var aga2 = false;
var goldenappletime= 6;

var cg
var cg1 = false;
var cg2 = false;

// > Killaura In Beta <

var pc
var pc1 = false;
var pc2 = false;

// >Variables<

// >Your Client Info<

var GUI;

var GUIarray;

var menu;

var VERSION = " [v3]";

var NAME = "Medusa";

var DEVELOPERS = "Ya boi Panda";

// >Your Client Info<

// >Utlis<

var defaultDestroyTime = [
null, 1.5, 0.6, 0.5, 2, 2, 0, -1, null, null, null, null, 0.5, 0.6, 3, 3, 3, 2, 
0.2, 0.6, 0.3, 3, 3, null, 0.8, null, 0.2, 0.7, null, null, 4, 0, 0, null, null, 
0.8, null, 0, 0, 0, 0, 3, 5, 2, 2, 2, 0, 1.5, 2, 50, 0, 0, null, 2, 2.5, null, 
3, 5, 2.5, 0, 0.6, 3.5, 3.5, 1, 3, 0.4, 0.7, 2, 1, null, null, 5, null, 3, 3, 
null, null, null, 0.1, 0.5, 0.2, 0.4, 0.6, 0, null, 2, 1, 0.4, 0.3, null, 1, 0.5, 
null, null, -1, 3, null, 1.5, null, null, 5, 0.3, 1, 0, 0, null, 2, 2, 1.5, null, 
null, 2, null, 2, null, null, null, null, null, null, null, null, null, null, null, 
null, null, 0.8, null, null, null, null, null, 2, 2, 2, null, null, 2, null, 0, 0, 
null, null, null, null, null, null, null, null, null, null, null, null, 0.8, 0.8, 
2, 2, null, null, null, null, null, null, null, null, null, null, null, 0.5, 0.1, 
5, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null,
null, null, null, null, null, null, null, null, null, null, null, null, null, null,
null, null, null, null, null, null, null, null, null, null, null, null, null, null,
null, null, null, null, null, null, null, null, null, null, null, null, null, null,
null, 0, 3.5, 50, 5, 0.6, 0.6, 5, null, null, null, null, 0
];

var playerDir = [0, 0, 0];
var DEG_TO_RAD = Math.PI / 180;
var playerFlySpeed = 50;
var falling = 0;
var next = 0;
var px, py, pz, lx, ly, lz, vel, saver;
var cd = 0;
var s = 0;
var Xdiff;
var Zdiff;
var Xpos;
var Zpos;
var can = 1;
var canGetHP = 1;
var HP;
var gravity = -0.07840000092983246;
var Entities = [];
var counter = 0;

var Utils = {
	        File: { 		dragopDir: android.os.Environment.getExternalStorageDirectory() + "/DragOP/", 		getTextFromFile: function (file) { 			let readed = (new java.io.BufferedReader(new java.io.FileReader(file))); 			let data = new java.lang.StringBuilder(); 			let string; 			while((string = readed.readLine()) != null) 				data.append(string + "\n"); 			return data.toString(); 		}, 		saveTextToFile: function (file, text) { 			if(!file.exists()) file.createNewFile(); 			let bytes = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, text.length()); 			for(let i = 0; i < text.length(); i++) bytes[i] = text.charCodeAt(i); 			let stream = new java.io.FileOutputStream(file); 			try { 				stream.write(bytes); 			} finally { 				stream.close(); 			} 		} 	},		Render: {
			getFloatBuffer: function (fArray) {
				let bBuffer = java.nio.ByteBuffer.allocateDirect(fArray.length * 4);
				bBuffer.order(java.nio.ByteOrder.nativeOrder());

				let fBuffer = bBuffer.asFloatBuffer();
				fBuffer.put(fArray);
				fBuffer.position(0);
				return fBuffer;
			},
			getShortBuffer: function (sArray) {
				let bBuffer = java.nio.ByteBuffer.allocateDirect(sArray.length * 2);
				bBuffer.order(java.nio.ByteOrder.nativeOrder());

				let sBuffer = bBuffer.asShortBuffer();
				sBuffer.put(sArray);
				sBuffer.position(0);
				return sBuffer;
			},
			renderer: null,
			glSurface: null,
			fov: 90,
			
			color: android.graphics.Color.rgb(108, 226, 93),
			
			initted: false,
			init: function () {
				if(Utils.Render.initted)
					return;
				let options = Utils.File.getTextFromFile(new java.io.File(android.os.Environment.getExternalStorageDirectory() + "/games/com.mojang/minecraftpe/", "options.txt")); 


				options = options.split("\n");
				options.forEach(function (entry) {
					let suboption = entry.split(":");
					if(suboption[0] == "gfx_field_of_view") {
						Utils.Render.fov = suboption[1];


					}
				});
				this.renderer = new android.opengl.GLSurfaceView.Renderer({
					onSurfaceCreated: function (gl, config) {
						let GL10 = javax.microedition.khronos.opengles.GL10;
						gl.glClearColor(0, 0, 0, 0);
						gl.glShadeModel(GL10.GL_SMOOTH);
						gl.glClearDepthf(1.0);
						gl.glDisable(GL10.GL_DITHER);
						gl.glEnable(GL10.GL_DEPTH_TEST);
						gl.glDepthFunc(GL10.GL_LEQUAL);
						gl.glHint(GL10.GL_PERSPECTIVE_CORRECTION_HINT, GL10.GL_NICEST);
					},
					onSurfaceChanged: function (gl, width, height) {
						let GL10 = javax.microedition.khronos.opengles.GL10;
						gl.glMatrixMode(GL10.GL_PROJECTION);
						gl.glLoadIdentity();
						android.opengl.GLU.gluPerspective(gl, Utils.Render.fov, width / height, 0.1, 100);
						gl.glMatrixMode(GL10.GL_MODELVIEW);
						gl.glLoadIdentity();
					},
					onDrawFrame: function (gl) {
						
						let GL10 = javax.microedition.khronos.opengles.GL10;
						gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
						gl.glLoadIdentity();
						
						if(esp == true && getPlayerEnt() != -1) {
							try {
								
								gl.glDisable(GL10.GL_LIGHTING);
								let yaw = getYaw() % 360;
								let pitch = getPitch() % 360;
								let eyeX = getPlayerX();
								let eyeY = getPlayerY() + 1;
								let eyeZ = getPlayerZ();

								let dCenterX = Math.sin(yaw / 180 * Math.PI);
								let dCenterZ = Math.cos(yaw / 180 * Math.PI);
								let dCenterY = Math.sqrt(dCenterX * dCenterX + dCenterZ * dCenterZ) * Math.tan((pitch - 180) / 180 * Math.PI);
								
								var px = getPlayerX();
		                        var py = getPlayerY();
		                        var pz = getPlayerZ();

								let centerX = eyeX - dCenterX;
								let centerZ = eyeZ + dCenterZ;
								let centerY = eyeY - dCenterY;

								android.opengl.GLU.gluLookAt(gl, eyeX, eyeY, eyeZ, centerX, centerY, centerZ, 0, 1.0, 0);
								
								//Hardcoding the esp
								//Skidders, dont do that
								
								let mobs = Entity.getAll();
								let players = Server.getAllPlayers();

								//clientMessage(mobs.length);
								mobs.forEach(function (entry) {

									if(entry != getPlayerEnt() && Entity.getEntityTypeId(entry) == EntityType.PLAYER) {
										Utils.Render.drawBox(gl, Entity.getX(entry) - 0.5, Entity.getY(entry) - 0.5, Entity.getZ(entry) - 0.50, 1, 2, 1);
										Utils.Render.drawLine(gl, px,py+0.8, pz, Entity.getX(entry), Entity.getY(entry)+1, Entity.getZ(entry));

									}
								});
								players.forEach(function (entry) {
									if(entry != getPlayerEnt() && Entity.getEntityTypeId(entry) == EntityType.PLAYER) {
										Utils.Render.drawBox(gl, Entity.getX(entry) - 0.5, Entity.getY(entry) - 0.5, Entity.getZ(entry) - 0.5, 1, 2, 1);
                                    Utils.Render.drawLine(gl, px,py+0.8, pz, Entity.getX(entry), Entity.getY(entry)+1, Entity.getZ(entry));
									}
								});

								
							} catch(e) {
								clientMessage("RenderProblem: " + e);
							}

						} else {
							
						}
					}
				});
				ctx.runOnUiThread(new java.lang.Runnable({
					run: function () {
						Utils.Render.glSurface = new android.opengl.GLSurfaceView(ctx);
						Utils.Render.glSurface.setZOrderOnTop(true);


						Utils.Render.glSurface.setEGLConfigChooser(8, 8, 8, 8, 16, 0);
						Utils.Render.glSurface.getHolder().setFormat(android.graphics.PixelFormat.TRANSLUCENT);
						Utils.Render.glSurface.setRenderer(Utils.Render.renderer);
						

						ctx.getWindow().getDecorView().addView(Utils.Render.glSurface);

						Utils.Render.initted = true;
					}
				}));

			},
			drawBox: function (gl, x, y, z, xsize, ysize, zsize) {
				
				let GL10 = javax.microedition.khronos.opengles.GL10;
				let size = new Array(xsize, ysize, zsize);
				let vertices = [
					0, 0, 0,
					size[0], 0, 0,
					0, 0, size[2],
					size[0], 0, size[2],

					0, size[1], 0,
					size[0], size[1], 0,
					0, size[1], size[2],
					size[0], size[1], size[2]
				];
				let vertexBuffer = Utils.Render.getFloatBuffer(vertices);
				let lineIndices = [
					0, 1,
					0, 2,
					0, 4,

					3, 1,
					3, 2,
					3, 7,

					5, 4,
					5, 7,
					5, 1,

					6, 4,
					6, 7,
					6, 2
				];
				let polyIndices = [
					0, 1, 4,
					1, 4, 5,

					2, 3, 6,
					7, 6, 3,

					1, 3, 7,
					7, 1, 5,

					0, 2, 6,
					6, 0, 4,

					0, 1, 2,
					3, 1, 2,

					4, 5, 6,
					7, 5, 6
				];
				let lineBuffer = Utils.Render.getShortBuffer(lineIndices);
				let polyBuffer = Utils.Render.getShortBuffer(polyIndices);
				gl.glTranslatef(x, y, z);
				gl.glFrontFace(GL10.GL_CCW);
				gl.glEnable(GL10.GL_BLEND);
				//gl.glEnable(GL10.GL_LINE_SMOOTH);
				gl.glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE_MINUS_SRC_ALPHA);
				gl.glLineWidth(7);
				gl.glColor4f(android.graphics.Color.green(Utils.Render.color) / 255,android.graphics.Color.green(Utils.Render.color) / 255, android.graphics.Color.red(Utils.Render.color) / 255, 0.7);
				gl.glEnableClientState(GL10.GL_VERTEX_ARRAY);
				gl.glVertexPointer(3, GL10.GL_FLOAT, 0, vertexBuffer);
				
				gl.glColor4f(android.graphics.Color.green(Utils.Render.color) / 255, android.graphics.Color.green(Utils.Render.color) / 255, android.graphics.Color.red(Utils.Render.color) / 255, 0.2);
				gl.glDrawElements(GL10.GL_TRIANGLES, polyIndices.length, GL10.GL_UNSIGNED_SHORT, polyBuffer);
				gl.glDisable(GL10.GL_LINE_SMOOTH);
				gl.glTranslatef(-x, -y, -z);
			},
			drawLine: function (gl, x, y, z, x2, y2, z2) {
				
				let GL10 = javax.microedition.khronos.opengles.GL10;
				let size = new Array(x2, y2, z2);
				let vertices = [
					0, 0, 0,
					x2 - x, y2 - y, z2 - z
				];
				let vertexBuffer = Utils.Render.getFloatBuffer(vertices);
				let indices = [
					0, 1
				];
				let indexBuffer = Utils.Render.getShortBuffer(indices);
				gl.glTranslatef(x, y, z);
				gl.glEnable(GL10.GL_BLEND);
				gl.glDepthMask(false);
				//gl.glEnable(GL10.GL_LINE_SMOOTH);
				gl.glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE_MINUS_SRC_ALPHA);
				gl.glLineWidth(4);
				gl.glColor4f(android.graphics.Color.red(Utils.Render.color) / 255,android.graphics.Color.green(Utils.Render.color) / 255, android.graphics.Color.blue(Utils.Render.color) /255, 0.7);
				gl.glEnableClientState(GL10.GL_VERTEX_ARRAY);
				gl.glVertexPointer(3, GL10.GL_FLOAT, 0, vertexBuffer);
				gl.glDrawElements(GL10.GL_LINES, indices.length, GL10.GL_UNSIGNED_SHORT, indexBuffer);
				gl.glTranslatef(-x, -y, -z);
				gl.glDepthMask(true);
				gl.glDisable(GL10.GL_LINE_SMOOTH);
			}
		},
        Block: {
		isLiquid: function(id) {
			if (id >= 8 && id <= 11) return true;
			return false;
			},
		isLadder: function(id) {
			if (id = 65) return true;
			return false;
		},
		isIce: function(id) {
		if (id = 79 && id = 174) return true;
		return false;
		},
		isWeb: function(id) {
			if (id = 30) return true;
			return false;
		}
	},  
	
	// This Shit Im Working On
onRender: function (gl) {
		if(!this.state)
			return
		var all = Utils.Entity.getAll();
		var players = Server.getAllPlayers();
		var px = getPlayerX();
		var py = getPlayerY();
		var pz = getPlayerZ();
		all.forEach(function(entry){
			var x = Entity.getX(entry) - px;
			var y = Entity.getY(entry) - py;
			var z = Entity.getZ(entry) - pz;

			var dist = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2) + Math.pow(z, 2));
			
			if(dist <= 200 && dist > 0.1)
				Utils.Render.drawLine(gl, px,py+0.8, pz, Entity.getX(entry), Entity.getY(entry)+1, Entity.getZ(entry));
		});
		players.forEach(function(entry){
			var x = Entity.getX(entry) - px;
			var y = Entity.getY(entry) - py;
			var z = Entity.getZ(entry) - pz;

			var dist = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2) + Math.pow(z, 2));
			
			if(dist <= 200 && dist > 0.1)
				Utils.Render.drawLine(gl, px,py+0.8, pz, Entity.getX(entry), Entity.getY(entry)+1, Entity.getZ(entry));
		});
	},
            Velocity: {
			calculateSpeed: function() {
				return Math.sqrt(Math.pow(Entity.getVelX(getPlayerEnt()), 2) + Math.pow(Entity.getVelZ(getPlayerEnt()), 2));
				}
			},
            Player: {
            isFall: function() {
		var velo = -0.07840000092983246;
		if(!Utils.Player.onGround() && Entity.getVelY(Player.getEntity()) < velo) return true;
		return false;
},
isAutoEagle: function(){
			if(getTile(getPlayerX()+0.0001, getPlayerY()-2, getPlayerZ()+0.0001) == 0 ||
       getTile(getPlayerX()-0.0001, getPlayerY()-2, getPlayerZ()-0.0001) == 0 ||
       getTile(getPlayerX()+0.0001, getPlayerY()-2, getPlayerZ()-0.0001) == 0 ||
       getTile(getPlayerX()-0.0001, getPlayerY()-2, getPlayerZ()+0.0001) == 0)return true;
			return false;
		},
                isInWater: function() {
			if(Utils.Block.isLiquid(getTile(Entity.getX(getPlayerEnt()), Entity.getY(getPlayerEnt()) - 1.65, Entity.getZ(getPlayerEnt())))) {
            return true;
            } else {
			return false;
			   }
		    },
		isInIce: function() {
			if(Utils.Block.isIce(getTile(Entity.getX(getPlayerEnt()), Entity.getY(getPlayerEnt()) - 0.1, Entity.getZ(getPlayerEnt())))) {
            return true;
            } else {
			return false;
			   }
		    },
		isOnWeb: function(){
		if(Utils.Block.isWeb(getTile(Entity.getX(getPlayerEnt()), Entity.getY(getPlayerEnt()) - 0.1, Entity.getZ(getPlayerEnt())))) {
            return true;
            } else {
			return false;
			   }
		    },
isOnLadder: function(){
		if(Utils.Block.isLadder(getTile(getPlayerX(), getPlayerY() + 0.1, getPlayerZ())))return true;
		return false;
		},
            onGround: function() {
			var y = getPlayerY();
			while (y > 1) y -= 1;

			if (Math.round(y * 100) == 62 && getTile(getPlayerX(), getPlayerY() - 1.65, getPlayerZ()) != 0 && !Utils.Block.isLiquid(getTile(getPlayerX(), getPlayerY() - 1.65, getPlayerZ()))) return true;
			if (Math.round(y * 100) == 12 && getTile(getPlayerX(), getPlayerY() - 1.65, getPlayerZ()) != 0 && !Utils.Block.isLiquid(getTile(getPlayerX(), getPlayerY() - 1.65, getPlayerZ()))) return true;
			return false;
		},
		overGround: function() {
			var y = getPlayerY();
			while (y > 2) y -= 2;

			if (Math.round(y * 100) == 62 && getTile(getPlayerX(), getPlayerY() - 2.15, getPlayerZ()) != 0 && !Utils.Block.isLiquid(getTile(getPlayerX(), getPlayerY() - 2.15, getPlayerZ()))) return true;
			if (Math.round(y * 100) == 12 && getTile(getPlayerX(), getPlayerY() - 2.15, getPlayerZ()) != 0 && !Utils.Block.isLiquid(getTile(getPlayerX(), getPlayerY() - 2.15, getPlayerZ()))) return true;
			return false;
		},
		isCollidedHorizontally: function() {
			var x = getPlayerX();
			var z = getPlayerZ();
			var blockX = Math.round(x - 0.5);
			var blockZ = Math.round(z - 0.5);
			while (x < 1) x += 1;
			while (z < 1) z += 1;
			while (x > 1) x -= 1;
			while (z > 1) z -= 1;

			if(Math.round(x * 100) == 31) x -= 0.01;
			if(Math.round(z * 100) == 31) z -= 0.01;
			if(Math.round(x * 100) == 69) x += 0.01;
			if(Math.round(z * 100) == 69) z += 0.01;
			if(Math.round(x * 100) == 30) blockX--;
			if(Math.round(z * 100) == 30) blockZ--;
			if(Math.round(x * 100) == 70) blockX++;
			if(Math.round(z * 100) == 70) blockZ++;
			//clientMessage(blockX+";"+blockZ);
			if(getTile(blockX, Entity.getY(getPlayerEnt()), blockZ) == 0 && getTile(blockX, Entity.getY(getPlayerEnt()) - 1, blockZ) == 0) return false;

			if(Block.getDestroyTime(getTile(blockX, Entity.getY(getPlayerEnt()) - 1, blockZ)) <= 0.1 && Block.getDestroyTime(getTile(blockX, Entity.getY(getPlayerEnt()), blockZ)) <= 0.1) return false;

			if (Math.round(x * 100) == 30 || Math.round(x * 100) == 70) return true;
			if (Math.round(z * 100) == 30 || Math.round(z * 100) == 70) return true;
			return false;
		}
	},
	Vel: {
		lastX: 0,
		lastY: 0,
		lastZ: 0,
		calculateSpeed: function() {
			return Math.sqrt(Math.pow(Entity.getVelX(getPlayerEnt()), 2) + Math.pow(Entity.getVelZ(getPlayerEnt()), 2));
		}
	}
};


function dip2px(dips){
	return Math.ceil(dips * ctx.getResources().getDisplayMetrics().density);
}

// >Utlis<

// >Codes<

function toDirectionalVector(vector, yaw, pitch) { //some parts of this function are made by @zhuowei
    vector[0] = Math.cos(yaw) * Math.cos(pitch);
    vector[1] = Math.sin(pitch);
    vector[2] = Math.sin(yaw) * Math.cos(pitch);
}
function attackHook(att, vic) {
		   if(att == Player.getEntity() && vport && Entity.getHealth(vic) > 0) {
           setPosition(getPlayerEnt(), Entity.getX(vic),Entity.getY(vic) + 2,Entity.getZ(vic));
		}
		if(att == Player.getEntity() && ninja1 && Entity.getHealth(vic) > 0) {
           setPosition(getPlayerEnt(), Entity.getX(vic),Entity.getY(vic) + 3,Entity.getZ(vic));
		}
if(att == Player.getEntity() && fa1) {
Entity.setCollisionSize(vic, 0, 0);
		}
if(att == Player.getEntity() && cs1 && Utils.Player.onGround()) {
	    setVelY(getPlayerEnt(), 0.4);
	    }
if(att == Player.getEntity() && he1 && Entity.getHealth(vic) > 0) {
      var ent = getNearestEntity(8);
Entity.setCollisionSize(ent, 7, 5);
      }
		  if(att == Player.getEntity() && bw1 && Entity.getHealth(vic) > 0) {
		    setPosition(getPlayerEnt(), Entity.getX(vic)- 15,Entity.getY(vic)+ 1,Entity.getZ(vic));
		    }
  if(att == Player.getEntity() && aas1 && Entity.getHealth(vic) > 0) {          
							var ent = Player.getPointedEntity();
							var ent = getNearestEntity(8)
							if(ent != null) crosshairAimAt(ent);
				            }
	  if(att == Player.getEntity() && rtp1 && Entity.getHealth(vic) > 0) {
		    var hit = getYaw() + 90;
        var hitY = getPitch() - 180;
        x = Math.cos(hit * (Math.PI / 180));
        y = Math.sin(hitY * (Math.PI / 180));
        z = Math.sin(hit * (Math.PI / 180));
        setVelX(Player.getEntity(), x * -2);
        setVelY(Player.getEntity(), y * -2);
        setVelZ(Player.getEntity(), z * -2);
		    }
 if(att == Player.getEntity() && blj1 && Entity.getHealth(vic) > 0) {
var hit = getYaw() + 90;
      var hitY = getPitch() - 180;
      x = Math.cos(hit * (Math.PI / 180));
      y = Math.sin(hitY * (Math.PI / 180));
      z = Math.sin(hit * (Math.PI / 180));
      setVelX(Player.getEntity(), x * 1);
      setVelZ(Player.getEntity(), z * 1);
}
if(att == Player.getEntity() && bst1 && Entity.getHealth(vic) > 0) {
var hit = getYaw() + 45;
      var hitY = getPitch() - 180;
      x = Math.cos(hit * (Math.PI / 180));
      y = Math.sin(hitY * (Math.PI / 180));
      z = Math.sin(hit * (Math.PI / 180));
      setVelY(Player.getEntity(), y * 0.7);
      setVelX(Player.getEntity(), x * 0.6);
      setVelZ(Player.getEntity(), z * 0.6);
      }
 if(att == Player.getEntity() && sethome == 1 && pc1 && Entity.getHealth(vic) > 0) {
//Function4
           var player = Player.getEntity();
           setPosition(player, homeX, homeY, homeZ);          
}
}
      function getNearestEntity(maxrange) {
			var mobs = Entity.getAll();
			var players = Server.getAllPlayers();
			var small = maxrange;
			var ent = null;
			for (var i = 0; i < mobs.length; i++) {
				var x = Entity.getX(mobs[i]) - getPlayerX();
				var y = Entity.getY(mobs[i]) - getPlayerY();
				var z = Entity.getZ(mobs[i]) - getPlayerZ();
				var dist = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2) + Math.pow(z, 2));
				if (dist < small && dist > 0 && Entity.getEntityTypeId(mobs[i]) <= 63 && Entity.getHealth(mobs[i]) >= 1) {
					small = dist;
					ent = mobs[i];
				}
			}
			for (var i = 0; i < players.length; i++) {
				var x = Entity.getX(players[i]) - getPlayerX();
				var y = Entity.getY(players[i]) - getPlayerY();
				var z = Entity.getZ(players[i]) - getPlayerZ();
				var dist = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2) + Math.pow(z, 2));
				if (dist < small && dist > 0 && Entity.getHealth(players[i]) >= 1) {
					small = dist;
					ent = players[i];
				}
			}
			return ent;
		}

function crosshairAimAt(ent, pos) {
							if(ent != null) {
				var x = Entity.getX(ent) - getPlayerX();
				var y = Entity.getY(ent) - getPlayerY();
				var z = Entity.getZ(ent) - getPlayerZ();
				if(pos != null && pos instanceof Array) {

					x = Entity.getX(ent) - pos[0];
					y = Entity.getY(ent) - pos[1];
					z = Entity.getZ(ent) - pos[2];
				}
				if(Entity.getEntityTypeId(ent) != 63)
					y += 0.5;
				var a = 0.5 + Entity.getX(ent);
				var b = Entity.getY(ent);
				var c = 0.5 + Entity.getZ(ent);
				var len = Math.sqrt(x * x + y * y + z * z);
				var y = y / len;
				var pitch = Math.asin(y);
				pitch = pitch * 180.0 / Math.PI;
				pitch = -pitch;
				var yaw = -Math.atan2(a - (Player.getX() + 0.5), c - (Player.getZ() + 0.5)) * (180 / Math.PI);
				if(pitch < 89 && pitch > -89) {
					Entity.setRot(Player.getEntity(), yaw, pitch);
				}
			}
  }
  
function nearArrow(range) {
			var entities = Entity.getAll();
			var small = range;
			var ent = null;
			for (var i = 0; i < entities.length; i++) {
				var x = Entity.getX(entities[i]) - getPlayerX();
				var y = Entity.getY(entities[i]) - getPlayerY();
				var z = Entity.getZ(entities[i]) - getPlayerZ();
				var dist = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2) + Math.pow(z, 2));
				
				if(dist < small && dist > 0) {
					small = dist;
					ent = entities[i];
				   } 
	      }
	return ent; 
}

    function modTick() {
						if(aimbot) {
							var ent = getNearestEntity(7)
							if(ent != null) crosshairAimAt(ent);

}

var px = Player.getX();
var py = Player.getY();
var pz = Player.getZ();
var x = Player.getX();
var y = Player.getY();
var z = Player.getZ();

if (at1) {
setTile(getPlayerX(), getPlayerY()-1, getPlayerZ(), 50);
}   
if (gr1) {
setTile(getPlayerX(), getPlayerY()-3, getPlayerZ(), 51);
}   
if(hitboxed) {
var ent = getNearestEntity(8);
Entity.setCollisionSize(ent, 8, 7);
}
if(jesus){
if(Utils.Player.isInWater())
setVelY(getPlayerEnt(), 0.25);
if(Utils.Player.isInWater())
setVelX(getPlayerEnt(), Entity.getVelX(getPlayerEnt())*0.6);
if(Utils.Player.isInWater())
setVelZ(getPlayerEnt(), Entity.getVelZ(getPlayerEnt())*0.6);
   }
if(fi1){
if(Utils.Player.isInIce())
setVelX(getPlayerEnt(), Entity.getVelX(getPlayerEnt())*1);
if(Utils.Player.isInIce())
setVelZ(getPlayerEnt(), Entity.getVelZ(getPlayerEnt())*1);
}
if(bj1){
if(Utils.Player.isInWater())
setVelY(getPlayerEnt(), 0.0);
       }
if(motion){
speedtick++;
	
	if(speedtick == 100) {   
    var playerDir = [0, 0, 0]; 
toDirectionalVector(playerDir, (getYaw() + 90) * Math.PI / 180, getPitch() * Math.PI / 180 * -1);
 setVelX(getPlayerEnt(), 1.2* playerDir[0]);
setVelZ(getPlayerEnt(), 1.2* playerDir[2]);
    speedtick = 0;
  }
  }
if(sw1){
Entity.setSneaking(getPlayerEnt(), true);
  }
if(mh1){
if(Utils.Player.onGround())
setVelY(getPlayerEnt(), 0.2);
if(Utils.Player.onGround())
setVelX(getPlayerEnt(), Entity.getVelX(getPlayerEnt())*1.4);
if(Utils.Player.onGround())
setVelZ(getPlayerEnt(), Entity.getVelZ(getPlayerEnt())*1.4);
}
if(gdglidess){
setVelY(getPlayerEnt(), -0.15);
setVelX(getPlayerEnt(), Entity.getVelX(getPlayerEnt())*1.06);
setVelZ(getPlayerEnt(), Entity.getVelZ(getPlayerEnt())*1.06);
}
if (mdglidess) {
setVelY(getPlayerEnt(), -0.001);
}
if(sc1) {
if(!Player.getCarriedItem()==0) {
Level.setTile(getPlayerX(), getPlayerY()-2, getPlayerZ(), Player.getCarriedItem(), 50);
setVelX(getPlayerEnt(), Entity.getVelX(getPlayerEnt())*0.55);
setVelZ(getPlayerEnt(), Entity.getVelZ(getPlayerEnt())*0.55);
}
}
if(nf1){
if(Utils.Player.isFall()) {
setVelY(getPlayerEnt(), -200);
}
}
     if (glidess) {
     if(Utils.Player.isFall()) {
     setPosition(getPlayerEnt(), px, py +0.19, pz);
     setVelY(getPlayerEnt(), -0.3);
     }
}
if(ahunger){
Player.setHunger(20);
   }
if(regen){
Player.setHealth(20);
   }
if(lg1){
setVelX(getPlayerEnt(), Entity.getVelX(getPlayerEnt())*1.09);
setVelZ(getPlayerEnt(), Entity.getVelZ(getPlayerEnt())*1.09);
   }
if(bf1){
setVelX(getPlayerEnt(), Entity.getVelX(getPlayerEnt())*1.08);
setVelZ(getPlayerEnt(), Entity.getVelZ(getPlayerEnt())*1.08); 
if(time !== 0) {
time--;
}
if(time == 0) {
time = 9;
setVelY(getPlayerEnt(),  0.33);
 }
}
if(pe1) {
var ent = getNearestEntity(8)
var hit = getYaw() + 90; var hitY = getPitch() - 180;

x = Math.cos(hit * (Math.PI / 180));  y = Math.sin(hitY * (Math.PI / 180));  z = Math.sin(hit * (Math.PI / 180));

setVelX(Player.getEntity(), x * -2);
setVelY(Player.getEntity(), y * -2);
setVelZ(Player.getEntity(), z * -2);
}
if (csb1) {
setVelY( getPlayerEnt(), 0.0)
var playerDir = [0, 0, 0]; 
toDirectionalVector(playerDir, (getYaw() + 90) * Math.PI / 180, getPitch() * Math.PI / 180 * -1);
 setVelY( getPlayerEnt(), 0.0) 
setVelX(getPlayerEnt(), 0.5 * playerDir[0]);
setVelZ(getPlayerEnt(), 0.5 * playerDir[2]);
}   
if(bz1)
{
if(getCarriedItem()==261)
{
ModPE.setFov(25)
}else{
ModPE.resetFov();
}
}
if(dv1)
{
Level.destroyBlock(Player.getPointedBlockX(),Player.getPointedBlockY(),Player.getPointedBlockZ())
}
if(ab1){
setVelY( getPlayerEnt(), 0.4)
setTile(getPlayerX(), getPlayerY()-1, getPlayerZ(), 4);
}
if(dj1){
if(Utils.Player.isFall()) {
setVelY(getPlayerEnt(), 1);
}
}
if(ljj1){
if(Utils.Player.isAutoEagle()) {
Entity.setSneaking(getPlayerEnt(), true);
}
}
  	if(ar1) {
Player.setArmorSlot(0, 310, 0);
Player.setArmorSlot(1, 311, 0);
Player.setArmorSlot(2, 312, 0);
Player.setArmorSlot(3, 313, 0);
        }  
 	if(nt1) {
    	var ent = getNearestEntity(30);
    	ModPE.showTipMessage( ChatColor.WHITE + "Player Detected: "+ ChatColor.RED + Player.getName(ent) + ChatColor.RED + "");
        }
if (as1) {
          var slotId = 0;
          var getInvSword = Player.getInventorySlot(slotId);
          if (getInvSword == 276 || getInvSword == 268 || getInvSword == 283 || getInvSword == 267 || getInvSword == 272) {
          var invSword = slotId;
          } else {
          slotId++;
          }
          if (slotId = 27) {
          slotId = 0;
          }
        var ent = getNearestEntity(8);
                   Player.setSelectedSlotId(invSword);
   }
 if (saa1) {
	var ent = getNearestEntity(8);
		if(ent != null && Player.getName(ent) != "" && Player.getName(ent) != " " && Player.getName(ent)) {
		var hit = getYaw() + 45;
      var hitY = getPitch() - 180;
      x = Math.cos(hit * (Math.PI / 180));
      y = Math.sin(hitY * (Math.PI / 180));
      z = Math.sin(hit * (Math.PI / 180));
      setVelX(Player.getEntity(), x * 0.6);
      setVelZ(Player.getEntity(), z * 0.6);
	}
}
    if(css1) {
    	if(Player.getPointedBlockId() == 54) {
    	Level.destroyBlock(Player.getPointedBlockX(), Player.getPointedBlockY(), Player.getPointedBlockZ(), true);
        }
    }
if(bb1) {
    	if(Player.getPointedBlockId() == 26) {
    	Level.destroyBlock(Player.getPointedBlockX(), Player.getPointedBlockY(), Player.getPointedBlockZ(), true);
        }
    }
if(ea1) {
var ent = getNearestEntity(8);
    	if(ent != null && Player.getName(ent) != "" && Player.getName(ent) != " " && Player.getName(ent)) {
		var hit = getYaw() + 90;
        var hitY = getPitch() - 180;
        x = Math.cos(hit * (Math.PI / 180));
        y = Math.sin(hitY * (Math.PI / 180));
        z = Math.sin(hit * (Math.PI / 180));
        setVelX(Player.getEntity(), x * -2);
        setVelY(Player.getEntity(), y * -2);
        setVelZ(Player.getEntity(), z * -2);
        }
}
if(nbb1){
if(Utils.Player.onGround()){
         setVelY(getPlayerEnt(), 0.3)
		setVelY(getPlayerEnt(), 0.0);
		}
}
if(fl1) {
if(getTile(getPlayerX(), getPlayerY() +1, getPlayerZ()) == 65){
setVelY(getPlayerEnt(), ladderspeed);
Entity.setPosition(getPlayerEnt(),Player.getX(),Player.getY()+ ladderspeed,Player.getZ());
}
}
if(fv1) {
if(getTile(getPlayerX(), getPlayerY() +1, getPlayerZ()) == 106){
setVelY(getPlayerEnt(), vinespeed);
Entity.setPosition(getPlayerEnt(),Player.getX(),Player.getY()+ vinespeed,Player.getZ());
}
}
if(nw1){
if(Player.getPointedBlockId() == 30) {
var hit = getYaw() + 90;
      var hitY = getPitch() - 180;
      x = Math.cos(hit * (Math.PI / 180));
      y = Math.sin(hitY * (Math.PI / 180));
      z = Math.sin(hit * (Math.PI / 180));
      setVelX(Player.getEntity(), x * 0.6);
      setVelZ(Player.getEntity(), z * 0.6);
    }
 }
if(bgl1 && !Utils.Player.onGround()) {
          mftick++;
	if(Entity.getVelY(getPlayerEnt()) < 1) {
	setVelY(getPlayerEnt(), -0.060)
	if(mftick == 156) {   
    setPosition(getPlayerEnt(), getPlayerX(), getPlayerY()+3.40, getPlayerZ());
    mftick = 0;
           }
       }
   }
if (pvp1) {
	var player = getPlayerEnt();
		        var yaw = Math.floor(Entity.getYaw(player));
		        var pitch = Math.floor(Entity.getPitch(player));
		        if(pitch <=2) {
			     Entity.setRot(player, yaw, 1)
	}
	}

                        if(farbotss) {
							var ent = getNearestEntity(500)
							if(ent != null) crosshairAimAt(ent);

}
 if(ir1) {
    ir3 = getNearestEntity(15);
    	if(ir3 != null && Entity.getEntityTypeId(ir3) == EntityType.PLAYER) {
           setPosition(getPlayerEnt(), Entity.getX(ir3), Entity.getY(ir3)+ 2, Entity.getZ(ir3));    	   
    	}
   }
if(ftp1) {
    ftp3 = getNearestEntity(10);
    	if(ftp3 != null && Entity.getEntityTypeId(ftp3) == EntityType.PLAYER) {
           setPosition(getPlayerEnt(), Entity.getX(ftp3)- 5, Entity.getY(ftp3)+ 1, Entity.getZ(ftp3));    	   
    	}
   }
           if(az1){
					var playerDir = [0, 0, 0];
					toDirectionalVector(playerDir, (getYaw() + 90) * Math.PI / 180, getPitch() * Math.PI / 180 * -1);
					setVelX(getPlayerEnt(), playerDir[0]);
					setVelY(getPlayerEnt(), 0.45);
					setVelZ(getPlayerEnt(), playerDir[2]);
setVelY(getPlayerEnt(),  -0.4);
if(time !== 0) {
time--;
}
if(time == 0) {
time = 3;
					setVelX(getPlayerEnt(), 0);
					setVelZ(getPlayerEnt(), 0);
setVelY(getPlayerEnt(),  0.3);
 }
}
if (stepss && Utils.Player.isCollidedHorizontally()) {
	    Entity.setPositionRelative(getPlayerEnt(), 0, 1.6, 0);
		}
if (sp1 && Utils.Player.isCollidedHorizontally()) {
	    setVelY( getPlayerEnt(), 0.4)
		}
	if(bhopll){
if(Utils.Player.onGround()){
ModPE.setGameSpeed(40)
setVelY( getPlayerEnt(), 0.4)
 } 
 }
if(yp1){
if(Utils.Player.onGround())
setVelY(getPlayerEnt(), 0.09);
if(Utils.Player.onGround())
setVelX(getPlayerEnt(), Entity.getVelX(getPlayerEnt())*1.4);
if(Utils.Player.onGround())
setVelZ(getPlayerEnt(), Entity.getVelZ(getPlayerEnt())*1.4);
 }
if (btp1) {
if(Utils.Player.onGround())
setVelY(getPlayerEnt(), 0.4);
if(Utils.Player.onGround())
setVelX(getPlayerEnt(), Entity.getVelX(getPlayerEnt())*4.8);
if(Utils.Player.onGround())
setVelZ(getPlayerEnt(), Entity.getVelZ(getPlayerEnt())*4.8);
}
	if(bhopl){
if(Utils.Player.onGround())
setVelY(getPlayerEnt(), 0.4);
if(Utils.Player.onGround())
setVelX(getPlayerEnt(), Entity.getVelX(getPlayerEnt())*1.4);
if(Utils.Player.onGround())
setVelZ(getPlayerEnt(), Entity.getVelZ(getPlayerEnt())*1.4);
 }
if(spamss) {
ModPE.showTipMessage("\n" + "§a你的血量: §4" + Entity.getHealth(getPlayerEnt()));
}
if(quickescaped) {
var yaw = Entity.getYaw(getPlayerEnt());
setVelX(getPlayerEnt(), -0.49 * Math.sin(yaw / 180 * Math.PI));
setVelZ(getPlayerEnt(), 0.49 * Math.cos(yaw / 180 * Math.PI));
}
if (ddj1) {
if(Utils.Player.overGround())
setVelY(getPlayerEnt(), 0.4);
}

if(livecored) {
ModPE.showTipMessage("Â§a> 你的坐标是:\nx: " + Math.floor(Player.getX()) + " y: " + Math.floor(Player.getY() - 1) + " z: " + Math.floor(Player.getZ()));
}
    if(tnt1) {
    setVelY(getPlayerEnt(), 0.4);
    }
 if(antikbss) {
//credits to VeroXCode
this.tick = 0;
        if (this.health > Entity.getHealth(getPlayerEnt()))
        {
            this.tick = 50;
            setVelX(getPlayerEnt(), Entity.getVelX(getPlayerEnt()) / 100 * percent);
            setVelY(getPlayerEnt(), Entity.getVelY(getPlayerEnt()) / 100 * percent);
            setVelZ(getPlayerEnt(), Entity.getVelZ(getPlayerEnt()) / 100 * percent);
        }
        if (this.tick == 0)
        {
            Entity.setImmobile(getPlayerEnt(), false);
        }
        this.health = Entity.getHealth(getPlayerEnt());
        if (this.tick != 0)
        {
            tick--;
        }
}
   if (ndglidess) {
		setVelY(getPlayerEnt(), 0.00000001);
		}
if(ap1 == true) {
	if (Entity.getHealth(getPlayerEnt()) <= autohealth) {
            for (i = 0; i <= 8; i++) {
                if (Player.getInventorySlot(i) == 373) {
                    Player.setSelectedSlotId(i);
                    break;
                }
            }
        }
    }
 if(ap1 == true) {
if (Entity.getHealth(getPlayerEnt()) <= autohealth) {
 	var ent = BlockFace.DOWN;
var x = Entity.getX(ent) - getPlayerX();
var y = Entity.getY(ent) - getPlayerY();
var z = Entity.getZ(ent) - getPlayerZ();
var norm = Math.sqrt(x * x + y * y + z * z);
y = y / norm;
var yaw = Math.atan2(x,z) * (180/Math.PI);
yaw = -yaw;
var pitch = Math.asin(y) * (180/Math.PI);
pitch = -pitch
setRot(getPlayerEnt(), yaw, pitch);
     if(Utils.Player.onGround()){
      setVelY(getPlayerEnt(), 0.32);
  }
  }}
if(aga1 == true) {
	if (Entity.getHealth(getPlayerEnt()) <= goldenappletime) {
            for (i = 0; i <= 8; i++) {
                if (Player.getInventorySlot(i) == 322) {
                    Player.setSelectedSlotId(i);
                    break;
                }
            }
        }
    }
 if(aga1 == true) {
if (Entity.getHealth(getPlayerEnt()) <= goldenappletime) {
 	var ent = BlockFace.DOWN;
var x = Entity.getX(ent) - getPlayerX();
var y = Entity.getY(ent) - getPlayerY();
var z = Entity.getZ(ent) - getPlayerZ();
var norm = Math.sqrt(x * x + y * y + z * z);
y = y / norm;
var yaw = Math.atan2(x,z) * (180/Math.PI);
yaw = -yaw;
var pitch = Math.asin(y) * (180/Math.PI);
pitch = -pitch
setRot(getPlayerEnt(), yaw, pitch);
     if(Utils.Player.onGround()){
      setVelY(getPlayerEnt(), 0.32);
  }
  }}
if(ljc1) {
	setVelX(getPlayerEnt(),Entity.getVelX(getPlayerEnt())*sboost);
	setVelY(getPlayerEnt(),Entity.getVelY(getPlayerEnt())*jboost);
	setVelZ(getPlayerEnt(),Entity.getVelZ(getPlayerEnt())*sboost);
		if(Utils.Player.isFall())
		setVelY(getPlayerEnt(),Entity.getVelY(getPlayerEnt())*fboost);
}
if (lh1) {
       
       if(Entity.getVelY(getPlayerEnt())< -0.1) {
		var playerDir = [0, 0, 0];
					toDirectionalVector(playerDir, (getYaw() + 90) * Math.PI / 180, getPitch() * Math.PI / 180 * -1);
                    setVelX(getPlayerEnt(), 4 * playerDir[0]);
                    setVelZ(getPlayerEnt(), 4 * playerDir[2]);
		}
		if(Entity.getVelY(getPlayerEnt())< 0.35 && Entity.getVelY(getPlayerEnt())> 0.2 && can==1 && canGetHP==1) {
			setVelY(getPlayerEnt(), 0.6);
			can = 2;
			HP = Entity.getHealth(getPlayerEnt());
			canGetHP = 0;
		}
		if(Entity.getVelY(getPlayerEnt())>gravity && can==2) {
			Player.setHealth(HP);
			canGetHP = 1;
			can = 0;
		}
		if(Entity.getVelY(getPlayerEnt())==gravity && can==0) {
			Player.setHealth(HP);
			canGetHP = 1;
			can = 1;
		}
   }
if (aw1) {
		var playerDir = [0, 0, 0];
        toDirectionalVector(playerDir, (getYaw() + 90) * Math.PI / 180, getPitch() * Math.PI / 180 * -1);
        setVelX(getPlayerEnt(), 0.4 * playerDir[0]);
        setVelZ(getPlayerEnt(), 0.4 * playerDir[2]);
	}
    	if (jp1) {
    var hit = getYaw() + 90;
      var hitY = getPitch() - 180;
      x = Math.cos(hit * (Math.PI / 180));
      y = Math.sin(hitY * (Math.PI / 180));
      z = Math.sin(hit * (Math.PI / 180));
      setVelX(Player.getEntity(), x * 1);
      setVelY(Player.getEntity(), y * 1);
      setVelZ(Player.getEntity(), z * 1);
}
	if (cspeedss) {
     //CrouchSpeed code from NNeBBuRR (VC Team)
    if(Entity.isSneaking(Player.getEntity()) == true){
				setVelY(getPlayerEnt(), -100.0);
                setVelX(getPlayerEnt(), Entity.getVelX(getPlayerEnt())*1.7);
                setVelZ(getPlayerEnt(), Entity.getVelZ(getPlayerEnt())*1.7);
          }
}}

    function useItem(x, y, z, itemid, blockid, side, itemDamage, blockDamage) {
	if (taptowerss) {
		setVelY(getPlayerEnt(), 0.4);
	   }
    if (ljj1) {
	    setVelY(getPlayerEnt(), 0.100);
	  }
	if (sa1) {
	explode(getPlayerX(),getPlayerY(),getPlayerZ(),2);
}
    if (ls1) {
	    var yaw = Entity.getYaw(getPlayerEnt());
setVelX(getPlayerEnt(), -0.49 * Math.sin(yaw / 180 * Math.PI));
setVelZ(getPlayerEnt(), 0.49 * Math.cos(yaw / 180 * Math.PI));
	  }
if (tb1) {
      var hit = getYaw() + 90;
      var hitY = getPitch() - 180;
      x = Math.cos(hit * (Math.PI / 180));
      y = Math.sin(hitY * (Math.PI / 180));
      z = Math.sin(hit * (Math.PI / 180));
      setVelX(Player.getEntity(), x * 1);
      setVelY(Player.getEntity(), y * 1);
      setVelZ(Player.getEntity(), z * 1);
	  }
if(taptpss && getTile(x, y + 1, z) == 0 && getTile(x, y + 2, z) == 0) {
			Entity.setPosition(Player.getEntity(), x + 0.5, y + 2.63 , z + 0.5);
		}
if(ch1 && Player.getCarriedItem() == 0) {
		Level.setTile(x, y, z, 0, 0);
		Level.setTile(x, y-1, z, 0, 0);
	   }
if(ta1) {
    ta3 = getNearestEntity(8);
    	if(ta3 != null && Entity.getEntityTypeId(ta3) == EntityType.PLAYER) {
           setPosition(j(), Entity.getX(ta3), Entity.getY(ta3)+ 1, Entity.getZ(ta3));    	   
    	}
   }	
if(fb1){
if(side == BlockFace.NORTH) {
			Entity.setPositionRelative(getPlayerEnt(), 0, 0, -1);
			} else if(side == BlockFace.SOUTH) {
		    Entity.setPositionRelative(getPlayerEnt(), 0, 0, 1);
			} else if(side == BlockFace.WEST) {
		    Entity.setPositionRelative(getPlayerEnt(), -1, 0, 0);
			} else if(side == BlockFace.EAST) {
			Entity.setPositionRelative(getPlayerEnt(), 1, 0, 0);
			} else if(side == BlockFace.UP) {
			Entity.setPositionRelative(getPlayerEnt(), 0, 1, 0);
}
}
if(pc1) {
	
//Function1
	
homeX = Player.getX();
              homeY = Player.getY()+1;
              homeZ = Player.getZ();
              sethome = 1;
              
	//Function2
	
	   vic = getNearestEntity(1000);
    	if(vic != null && Entity.getEntityTypeId(vic) == EntityType.PLAYER) {
           setPosition(getPlayerEnt(), Entity.getX(vic),Entity.getY(vic)+ 1,Entity.getZ(vic));
           
     //Function3
           
Entity.setCollisionSize(vic, 8, 8);

}}
}
	
function rptask() {
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function () {
            new android.os.Handler().postDelayed(new java.lang.Runnable({
                run: function () {
if (ab1 ) {
var ent = getNearestEntity(8)
if(ent != null) crosshairAimAt(ent);
}
if (abb1 ) {
var ent = getNearestEntity(9)
if(ent != null) crosshairAimAt(ent);
}
if (abbb1 ) {
var ent = getNearestEntity(10)
if(ent != null) crosshairAimAt(ent);
}
if (abbbb1 ) {
var ent = getNearestEntity(12)
if(ent != null) crosshairAimAt(ent);
}
if(hj1) {
   	var ent = getNearestEntity(15);
 if(ent != null) crosshairAimAt(ent);
var yaw = Entity.getYaw(getPlayerEnt());
setVelX(getPlayerEnt(), -0.49 * Math.sin(yaw / 180 * Math.PI));
setVelZ(getPlayerEnt(), 0.49 * Math.cos(yaw / 180 * Math.PI));
}

                  nx = getPlayerX();
                    ny = getPlayerY();
                    nz = getPlayerZ();
                    eval(rptask())
                }
            }), 900 / 70)
        }
    }))
}
rptask(); 


// >Codes<

// >Buttons<

function showElevatorBtn() {
	
ctx.runOnUiThread(new Runnable({ run: function(){
	try{
		var layout = new LinearLayout(ctx);
		layout.setOrientation(1);
		var elevatorUpBtn = new Button(ctx);
			elevatorUpBtn.setText("上");
            elevatorUpBtn.setTextColor(Color.GREEN);
			elevatorUpBtn.setBackground(bg2);
			elevatorUpBtn.setBackground(bg2);
            elevatorUpBtn.setPadding(10,10,10,10);
			elevatorUpBtn.getBackground().setAlpha(150);
			elevatorUpBtn.setOnClickListener(new View.OnClickListener({
				onClick: function(viewarg){
					Entity.setPositionRelative(getPlayerEnt(), 0, +2.53, 0);
				}
			}));
			layout.addView(elevatorUpBtn);

            var elevatorDownBtn = new Button(ctx);
			elevatorDownBtn.setText("下");
            elevatorDownBtn.setTextColor(Color.GREEN);
			elevatorDownBtn.setBackground(bg2);
            elevatorDownBtn.setPadding(10,10,10,10);
			elevatorDownBtn.getBackground().setAlpha(150);
			elevatorDownBtn.setOnClickListener(new View.OnClickListener({
				onClick: function(viewarg){
					Entity.setPosition(getPlayerEnt(), getPlayerX(), getPlayerY()-1.01, getPlayerZ());
				}
			}));
			layout.addView(elevatorDownBtn);
		
		GUIe = new PopupWindow(layout, RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT);
		GUIe.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
		GUIe.showAtLocation(ctx.getWindow().getDecorView(), Gravity.RIGHT | Gravity.CENTER, 0, 0);
		}catch(err){
			Toast.makeText(ctx, "An error occured: " + err, 1).show();
		}
	}}));
}
function showInfoBtn() {
	
ctx.runOnUiThread(new Runnable({ run: function(){
	try{
		var layout = new LinearLayout(ctx);
		layout.setOrientation(1);
		var InfoBtn = new TextView(ctx);
			InfoBtn.setText("Client : Medusa");
			InfoBtn.setTextColor(Color.GREEN);
			InfoBtn.setBackground(bg2);
			InfoBtn.setOnClickListener(new View.OnClickListener({
				onClick: function(viewarg){
					
				     }
				}));		
			layout.addView(InfoBtn);
		
var InfoBtn = new TextView(ctx);
			InfoBtn.setText("Creator : PandaHax");
			InfoBtn.setTextColor(Color.GREEN);
			InfoBtn.setOnClickListener(new View.OnClickListener({
				onClick: function(viewarg){
					
				     }
				}));		
			layout.addView(InfoBtn);
var InfoBtn = new TextView(ctx);
			InfoBtn.setText("Translator : XinYu404");
			InfoBtn.setTextColor(Color.GREEN);
			InfoBtn.setOnClickListener(new View.OnClickListener({
				onClick: function(viewarg){
					
				     }
				}));		
			layout.addView(InfoBtn);
			
var InfoBtn = new TextView(ctx);
			InfoBtn.setText(" PlayerName : "+player1+" ");
			InfoBtn.setTextColor(Color.WHITE);
			InfoBtn.setOnClickListener(new View.OnClickListener({
				onClick: function(viewarg){
					
				     }
				}));		
			layout.addView(InfoBtn);
			
var InfoBtn = new TextView(ctx);
			InfoBtn.setText(" PlayerHealth : "+playerH+" ");
			InfoBtn.setTextColor(Color.WHITE);
			InfoBtn.setOnClickListener(new View.OnClickListener({
				onClick: function(viewarg){
					
				     }
				}));		
			layout.addView(InfoBtn);
		
		GUII= new PopupWindow(layout, RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT);
		GUII.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
		GUII.showAtLocation(ctx.getWindow().getDecorView(), Gravity.RIGHT | Gravity.CENTER, 0, 0);
		}catch(err){
			Toast.makeText(ctx, "An error occured: " + err, 1).show();
		}
	}}));
}

function showJumpBtn() {
	
ctx.runOnUiThread(new Runnable({ run: function(){
	try{
		var layout = new LinearLayout(ctx);
		layout.setOrientation(1);
	    
	
		var jumpBtn = new Button(ctx);
			jumpBtn.setText("J");
			jumpBtn.setTextColor(Color.GREEN);
			jumpBtn.setBackground(bg2);
			jumpBtn.getBackground().setAlpha(100);
			jumpBtn.setOnClickListener(new View.OnClickListener({
				onClick: function(viewarg){
					setVelY(getPlayerEnt(), 0.4);
				     }
				}));		
			layout.addView(jumpBtn,80,80);
		
		GUIj = new PopupWindow(layout, RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT);
		GUIj.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
		GUIj.showAtLocation(ctx.getWindow().getDecorView(), Gravity.RIGHT | Gravity.BOTTOM, 80, 70);
		}catch(err){
			Toast.makeText(ctx, "An error occured: " + err, 1).show();
		}
	}}));
}

// >KyeBind Layout<（已删除）

// >Buttons<

// > ChangeLog <

var tos;
function showChangeLog() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var tosLayout = new android.widget.LinearLayout(ctx);
            var tosScroll = new android.widget.ScrollView(ctx);
            var tosLayout1 = new android.widget.LinearLayout(ctx);
            tosLayout.setOrientation(1);
            tosLayout1.setOrientation(1);
            tosScroll.addView(tosLayout);
            tosLayout1.addView(tosScroll);
            tosLayout.setBackground(bg);

		    var tosInfo = new Button(ctx);
		    tosInfo.setTextSize(15);
			tosInfo.setText("新增内容（向下滑动退出）");
			tosInfo.setTextColor(android.graphics.Color.WHITE);
			tosInfo.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
			tosInfo.getBackground().setAlpha(150);
			tosInfo.setGravity(Gravity.CENTER);
			tosLayout.addView(tosInfo);
			
		    var tosInfo = new Button(ctx);
		    tosInfo.setTextSize(15);
			tosInfo.setText("新Gui");
			tosInfo.setTextColor(android.graphics.Color.WHITE);
			tosInfo.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
			tosInfo.getBackground().setAlpha(150);
			tosInfo.setGravity(Gravity.CENTER);
			tosLayout.addView(tosInfo);
			
		var tosInfo = new TextView(ctx);
		    tosInfo.setTextSize(15);
			tosInfo.setText("GlideLayout");
			tosInfo.setTextColor(android.graphics.Color.WHITE);
			tosInfo.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
			tosInfo.getBackground().setAlpha(150);
			tosInfo.setGravity(Gravity.CENTER);
			tosLayout.addView(tosInfo);
			
		   var tosInfo = new TextView(ctx);
		    tosInfo.setTextSize(15);
			tosInfo.setText("-KillAura");
			tosInfo.setTextColor(android.graphics.Color.WHITE);
			tosInfo.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
			tosInfo.getBackground().setAlpha(150);
			tosInfo.setGravity(Gravity.CENTER);
			tosLayout.addView(tosInfo);

           var tosInfo = new TextView(ctx);
		    tosInfo.setTextSize(15);
			tosInfo.setText("-ArrayList");
			tosInfo.setTextColor(android.graphics.Color.WHITE);
			tosInfo.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
			tosInfo.getBackground().setAlpha(150);
			tosInfo.setGravity(Gravity.CENTER);
			tosLayout.addView(tosInfo);
			
			var tosInfo = new TextView(ctx);
		    tosInfo.setTextSize(15);
			tosInfo.setText("-AutoPotion");
			tosInfo.setTextColor(android.graphics.Color.WHITE);
			tosInfo.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
			tosInfo.getBackground().setAlpha(150);
			tosInfo.setGravity(Gravity.CENTER);
			tosLayout.addView(tosInfo);
			
			var tosInfo = new TextView(ctx);
		    tosInfo.setTextSize(15);
			tosInfo.setText("-Info");
			tosInfo.setTextColor(android.graphics.Color.WHITE);
			tosInfo.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
			tosInfo.getBackground().setAlpha(150);
			tosInfo.setGravity(Gravity.CENTER);
			tosLayout.addView(tosInfo);
			
			var tosInfo = new TextView(ctx);
		    tosInfo.setTextSize(15);
			tosInfo.setText("-AutoGap");
			tosInfo.setTextColor(android.graphics.Color.WHITE);
			tosInfo.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
			tosInfo.getBackground().setAlpha(150);
			tosInfo.setGravity(Gravity.CENTER);
			tosLayout.addView(tosInfo);
			
		var yesBtn = new android.widget.Button(ctx);
            yesBtn.setText("退出");
            yesBtn.setTextColor(android.graphics.Color.RED);   
			yesBtn.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
            yesBtn.getBackground().setAlpha(150);
            yesBtn.setTextSize(15);
            yesBtn.setGravity(android.view.Gravity.CENTER);
            yesBtn.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(viewarg){
                    tos.dismiss();
              }
            }));
            tosLayout.addView(yesBtn);

tos = new PopupWindow(tosLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight()/2);
	        tos.setAnimationStyle(android.R.style.Animation_InputMethod);
            tos.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
            tos.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.CENTER | android.view.Gravity.CENTER, 0, 0);
        } catch(error) {
            print("An error occured: " + error);
        }
    }}));
}
showChangeLog();	

// > ChangeLog <

// > ArrayList <

function  hudMenu(){
	ctx.runOnUiThread(new Runnable({ run: function(){
		try{
layout6 = new LinearLayout(ctx);
layout6.setOrientation(1);
bg6 = new android.graphics.drawable.GradientDrawable();
bg6.setColor(android.graphics.Color.argb(0, 20, 20, 20));
bg6.setCornerRadius(dip2px(3));

name1 = new TextView(ctx);
					name1.setTextColor(android.graphics.Color.GREEN);
		       name1.setBackground(bg6);
					name1.setText("");
					
					//put name2 in to the next hack thats under aimbot
					name2 = new TextView(ctx);
					name2.setTextColor(android.graphics.Color.GREEN);
		       name2.setBackground(bg6);
					name2.setText("");
					
					name3 = new TextView(ctx);
					name3.setTextColor(android.graphics.Color.GREEN);
		       name3.setBackground(bg6);
					name3.setText("");
					
					name4 = new TextView(ctx);
					name4.setTextColor(android.graphics.Color.GREEN);
		       name4.setBackground(bg6);
					name4.setText("");
					
					name5 = new TextView(ctx);
					name5.setTextColor(android.graphics.Color.GREEN);
		       name5.setBackground(bg6);
					name5.setText("");
					
					name6 = new TextView(ctx);
					name6.setTextColor(android.graphics.Color.GREEN);
		       name6.setBackground(bg6);
					name6.setText("");
					
					name7 = new TextView(ctx);
					name7.setTextColor(android.graphics.Color.GREEN);
		       name7.setBackground(bg6);
					name7.setText("");
					
					name8 = new TextView(ctx);
					name8.setTextColor(android.graphics.Color.GREEN);
		       name8.setBackground(bg6);
					name8.setText("");
					
					name9 = new TextView(ctx);
					name9.setTextColor(android.graphics.Color.GREEN);
		       name9.setBackground(bg6);
					name9.setText("");
					
					name10 = new TextView(ctx);
					name10.setTextColor(android.graphics.Color.GREEN);
		       name10.setBackground(bg6);
					name10.setText("");
					
					name11 = new TextView(ctx);
					name11.setTextColor(android.graphics.Color.GREEN);
		       name11.setBackground(bg6);
					name11.setText("");
					
					name12 = new TextView(ctx);
					name12.setTextColor(android.graphics.Color.GREEN);
		       name12.setBackground(bg6);
					name12.setText("");
				
				name13 = new TextView(ctx);
					name13.setTextColor(android.graphics.Color.GREEN);
		       name13.setBackground(bg6);
					name13.setText("");
					
					name14 = new TextView(ctx);
					name14.setTextColor(android.graphics.Color.GREEN);
		       name14.setBackground(bg6);
					name14.setText("");
					
					name15 = new TextView(ctx);
					name15.setTextColor(android.graphics.Color.GREEN);
		       name15.setBackground(bg6);
					name15.setText("");
					
					name16 = new TextView(ctx);
					name16.setTextColor(android.graphics.Color.GREEN);
		       name16.setBackground(bg6);
					name16.setText("");
					
					name17 = new TextView(ctx);
					name17.setTextColor(android.graphics.Color.GREEN);
		       name17.setBackground(bg6);
					name17.setText("");
					
					name18 = new TextView(ctx);
					name18.setTextColor(android.graphics.Color.GREEN);
		       name18.setBackground(bg6);
					name18.setText("");
					
					name19 = new TextView(ctx);
					name19.setTextColor(android.graphics.Color.GREEN);
		       name19.setBackground(bg6);
					name19.setText("");
					
				name20 = new TextView(ctx);
					name20.setTextColor(android.graphics.Color.GREEN);
		       name20.setBackground(bg6);
					name20.setText("");
					
					name21 = new TextView(ctx);
					name21.setTextColor(android.graphics.Color.GREEN);
		       name21.setBackground(bg6);
					name21.setText("");
					
					name22 = new TextView(ctx);
					name22.setTextColor(android.graphics.Color.GREEN);
		       name22.setBackground(bg6);
					name22.setText("");
					
				name23 = new TextView(ctx);
					name23.setTextColor(android.graphics.Color.GREEN);
		       name23.setBackground(bg6);
					name23.setText("");
					
					name24 = new TextView(ctx);
					name24.setTextColor(android.graphics.Color.GREEN);
		       name24.setBackground(bg6);
					name24.setText("");
					
					name25 = new TextView(ctx);
					name25.setTextColor(android.graphics.Color.GREEN);
		       name25.setBackground(bg6);
					name25.setText("");
				
				name26 = new TextView(ctx);
					name26.setTextColor(android.graphics.Color.GREEN);
		       name26.setBackground(bg6);
					name26.setText("");
				
				name27 = new TextView(ctx);
					name27.setTextColor(android.graphics.Color.GREEN);
		       name27.setBackground(bg6);
					name27.setText("");
					
					name28 = new TextView(ctx);
					name28.setTextColor(android.graphics.Color.GREEN);
		       name28.setBackground(bg6);
					name28.setText("");
					
					name29 = new TextView(ctx);
					name29.setTextColor(android.graphics.Color.GREEN);
		       name29.setBackground(bg6);
					name29.setText("");
					
					name30 = new TextView(ctx);
					name30.setTextColor(android.graphics.Color.GREEN);
		       name30.setBackground(bg6);
					name30.setText("");
					
					name31 = new TextView(ctx);
					name31.setTextColor(android.graphics.Color.GREEN);
		       name31.setBackground(bg6);
					name31.setText("");
					
					name32 = new TextView(ctx);
					name32.setTextColor(android.graphics.Color.GREEN);
		       name32.setBackground(bg6);
					name32.setText("");
					
					name33 = new TextView(ctx);
					name33.setTextColor(android.graphics.Color.GREEN);
		       name33.setBackground(bg6);
					name33.setText("");
					
					name34 = new TextView(ctx);
					name34.setTextColor(android.graphics.Color.GREEN);
		       name34.setBackground(bg6);
					name34.setText("");
				
				name35 = new TextView(ctx);
					name35.setTextColor(android.graphics.Color.GREEN);
		       name35.setBackground(bg6);
					name35.setText("");
					
					name36 = new TextView(ctx);
					name36.setTextColor(android.graphics.Color.GREEN);
		       name36.setBackground(bg6);
					name36.setText("");
					
					name37 = new TextView(ctx);
					name37.setTextColor(android.graphics.Color.GREEN);
		       name37.setBackground(bg6);
					name37.setText("");
					
					name38 = new TextView(ctx);
					name38.setTextColor(android.graphics.Color.GREEN);
		       name38.setBackground(bg6);
					name38.setText("");
					
					name39 = new TextView(ctx);
					name39.setTextColor(android.graphics.Color.GREEN);
		       name39.setBackground(bg6);
					name39.setText("");
					
					name40 = new TextView(ctx);
					name40.setTextColor(android.graphics.Color.GREEN);
		       name40.setBackground(bg6);
					name40.setText("");
					
					name41 = new TextView(ctx);
					name41.setTextColor(android.graphics.Color.GREEN);
		       name41.setBackground(bg6);
					name41.setText("");
					
					name42 = new TextView(ctx);
					name42.setTextColor(android.graphics.Color.GREEN);
		       name42.setBackground(bg6);
					name42.setText("");
					
					name43 = new TextView(ctx);
					name43.setTextColor(android.graphics.Color.GREEN);
		       name43.setBackground(bg6);
					name43.setText("");
					
					name44 = new TextView(ctx);
					name44.setTextColor(android.graphics.Color.GREEN);
		       name44.setBackground(bg6);
					name44.setText("");
					
					name45 = new TextView(ctx);
					name45.setTextColor(android.graphics.Color.GREEN);
		       name45.setBackground(bg6);
					name45.setText("");
					
					name46 = new TextView(ctx);
					name46.setTextColor(android.graphics.Color.GREEN);
		       name46.setBackground(bg6);
					name46.setText("");
					
					name47 = new TextView(ctx);
					name47.setTextColor(android.graphics.Color.GREEN);
		       name47.setBackground(bg6);
					name47.setText("");
					
					name48 = new TextView(ctx);
					name48.setTextColor(android.graphics.Color.GREEN);
		       name48.setBackground(bg6);
					name48.setText("");
					
					name49 = new TextView(ctx);
					name49.setTextColor(android.graphics.Color.GREEN);
		       name49.setBackground(bg6);
					name49.setText("");
					
					name50 = new TextView(ctx);
					name50.setTextColor(android.graphics.Color.GREEN);
		       name50.setBackground(bg6);
					name50.setText("");
				
				 name51 = new TextView(ctx);
					name51.setTextColor(android.graphics.Color.GREEN);
		       name51.setBackground(bg6);
					name51.setText("");
					
					name52 = new TextView(ctx);
					name52.setTextColor(android.graphics.Color.GREEN);
		       name52.setBackground(bg6);
					name52.setText("");
					
					name53 = new TextView(ctx);
					name53.setTextColor(android.graphics.Color.GREEN);
		       name53.setBackground(bg6);
					name53.setText("");
					
					name54 = new TextView(ctx);
					name54.setTextColor(android.graphics.Color.GREEN);
		       name54.setBackground(bg6);
					name54.setText("");
					
					name55 = new TextView(ctx);
					name55.setTextColor(android.graphics.Color.GREEN);
		       name55.setBackground(bg6);
					name45.setText("");
					
					name56 = new TextView(ctx);
					name56.setTextColor(android.graphics.Color.GREEN);
		       name56.setBackground(bg6);
					name56.setText("");
					
					name57 = new TextView(ctx);
					name57.setTextColor(android.graphics.Color.GREEN);
		       name57.setBackground(bg6);
					name57.setText("");
					
					name58 = new TextView(ctx);
					name58.setTextColor(android.graphics.Color.GREEN);
		       name58.setBackground(bg6);
					name58.setText("");
// just copy and paste here and turn to name3 and add on next hack


GUIarray = new PopupWindow(layout6, RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT);
		GUIarray.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
		GUIarray.showAtLocation(ctx.getWindow().getDecorView(), Gravity.RIGHT | Gravity.TOP, 1, 1);
		     }catch(err){
			Toast.makeText(ctx, "An error occured: " + err, 1).show();
			}
	}}));
}
hudMenu();

// > ArrayList <

// >WaterMark<（已删除）

//>WaterMark<

// > TabGui <

function showTabGui() {
	
ctx.runOnUiThread(new Runnable({ run: function(){
	try{
		var layout = new LinearLayout(ctx);
		layout.setOrientation(1);
	    layout.setBackground(bgTG);

var big = 10.1;

var textvieww = new android.widget.TextView(ctx);
      textvieww.setTextSize(big);
      textvieww.setText('           战斗           ');
      textvieww.setTextColor(android.graphics.Color.WHITE); 
      textvieww.setPadding(10, 10, 10, 10);
      textvieww.setGravity(android.view.Gravity.CENTER);
      textvieww.setBackground(bgoff);
      textvieww.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
     if(!Gui1){
                    mainMenu4();
                    rainbow1 = true;
                    textvieww.setBackground(bgon);
                    Gui1 = true;
                    }else{
                    menu2.dismiss();
                    textvieww.setBackground(bgoff);
                    Gui1 = false;
			}
      }
      }));
      textvieww.setOnTouchListener(new android.view.View.OnTouchListener( { // ability to move from dragop
					onTouch: function (view, motionEvent) {
						try {
							if(!moving) return false;
							switch(motionEvent.getAction()) {
							case android.view.MotionEvent.ACTION_DOWN:
								dx = mPosX - motionEvent.getRawX();
								dy = mPosY - motionEvent.getRawY();
								break;
							case android.view.MotionEvent.ACTION_MOVE:
								mPosX = (motionEvent.getRawX() + dx);
								mPosY = (motionEvent.getRawY() + dy);
								GUI4.update(mPosX, mPosY - 15, -1, -1);
								break;
							case android.view.MotionEvent.ACTION_UP:
							case android.view.MotionEvent.ACTION_CANCEL:
								moving = false;
								break;
							}
						} catch(e) {
						}

						return true;
					}
				}));
				textvieww.setOnLongClickListener(new android.view.View.OnLongClickListener( {
					onLongClick: function (v, t) {
						moving = true;
						return true;
					}
				}));
      layout.addView(textvieww);

var textvieew = new android.widget.TextView(ctx);
      textvieew.setTextSize(big);
      textvieew.setText('           移动           ');
      textvieew.setPadding(10, 10, 10, 10);
      textvieew.setGravity(android.view.Gravity.CENTER);
      textvieew.setBackground(bgoff);
     textvieew.setTextColor(android.graphics.Color.WHITE); textvieew.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!Gui2){
                    mainMenu5();
                    textvieew.setBackground(bgon);
                    Gui2 = true;
                    }else{
                    menu3.dismiss();
                    textvieew.setBackground(bgoff);
                    Gui2 = false;
	    	     }
      }
      }));
      textvieew.setOnTouchListener(new android.view.View.OnTouchListener( { // ability to move from dragop
					onTouch: function (view, motionEvent) {
						try {
							if(!moving) return false;
							switch(motionEvent.getAction()) {
							case android.view.MotionEvent.ACTION_DOWN:
								dx = mPosX - motionEvent.getRawX();
								dy = mPosY - motionEvent.getRawY();
								break;
							case android.view.MotionEvent.ACTION_MOVE:
								mPosX = (motionEvent.getRawX() + dx);
								mPosY = (motionEvent.getRawY() + dy);
								GUI4.update(mPosX, mPosY - 15, -1, -1);
								break;
							case android.view.MotionEvent.ACTION_UP:
							case android.view.MotionEvent.ACTION_CANCEL:
								moving = false;
								break;
							}
						} catch(e) {
						}

						return true;
					}
				}));
				textvieew.setOnLongClickListener(new android.view.View.OnLongClickListener( {
					onLongClick: function (v, t) {
						moving = true;
						return true;
					}
				}));
      layout.addView(textvieew);

var textviiew = new android.widget.TextView(ctx);
      textviiew.setTextSize(big);
      textviiew.setText('           玩家           ');
      textviiew.setPadding(10, 10, 10, 10);
      textviiew.setGravity(android.view.Gravity.CENTER);
      textviiew.setBackground(bgoff);
     textviiew.setTextColor(android.graphics.Color.WHITE); textviiew.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!Gui3){
                    mainMenu3();
                    textviiew.setBackground(bgon);
                    Gui3 = true;
                    }else{
                    menu1.dismiss();
                    textviiew.setBackground(bgoff);
                    Gui3 = false;
	    	     }
      }
      }));
      textviiew.setOnTouchListener(new android.view.View.OnTouchListener( { // ability to move from dragop
					onTouch: function (view, motionEvent) {
						try {
							if(!moving) return false;
							switch(motionEvent.getAction()) {
							case android.view.MotionEvent.ACTION_DOWN:
								dx = mPosX - motionEvent.getRawX();
								dy = mPosY - motionEvent.getRawY();
								break;
							case android.view.MotionEvent.ACTION_MOVE:
								mPosX = (motionEvent.getRawX() + dx);
								mPosY = (motionEvent.getRawY() + dy);
								GUI4.update(mPosX, mPosY - 15, -1, -1);
								break;
							case android.view.MotionEvent.ACTION_UP:
							case android.view.MotionEvent.ACTION_CANCEL:
								moving = false;
								break;
							}
						} catch(e) {
						}

						return true;
					}
				}));
				textviiew.setOnLongClickListener(new android.view.View.OnLongClickListener( {
					onLongClick: function (v, t) {
						moving = true;
						return true;
					}
				}));
      layout.addView(textviiew);
      //Panda
var texttview = new android.widget.TextView(ctx);
      texttview.setTextSize(big);
      texttview.setText('           显示           ');
      texttview.setPadding(10, 10, 10, 10);
      texttview.setGravity(android.view.Gravity.CENTER);
      texttview.setBackground(bgoff);
     texttview.setTextColor(android.graphics.Color.WHITE); texttview.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!Gui5){//Panda
                    mainMenu8();
                    texttview.setBackground(bgon);
                    Gui5 = true;
                    }else{
                    menu6.dismiss();
                    texttview.setBackground(bgoff);
                    Gui5 = false;
	    	     }
      }
      }));
      texttview.setOnTouchListener(new android.view.View.OnTouchListener( { // ability to move from dragop
					onTouch: function (view, motionEvent) {
						try {
							if(!moving) return false;
							switch(motionEvent.getAction()) {
							case android.view.MotionEvent.ACTION_DOWN:
								dx = mPosX - motionEvent.getRawX();
								dy = mPosY - motionEvent.getRawY();
								break;
							case android.view.MotionEvent.ACTION_MOVE:
								mPosX = (motionEvent.getRawX() + dx);
								mPosY = (motionEvent.getRawY() + dy);
								GUI4.update(mPosX, mPosY - 15, -1, -1);
								break;
							case android.view.MotionEvent.ACTION_UP:
							case android.view.MotionEvent.ACTION_CANCEL:
								moving = false;
								break;
							}
						} catch(e) {
						}

						return true;
					}
				}));
				texttview.setOnLongClickListener(new android.view.View.OnLongClickListener( {
					onLongClick: function (v, t) {
						moving = true;
						return true;
					}
				}));
      layout.addView(texttview);
      
var textvview = new android.widget.TextView(ctx);
      textvview.setTextSize(big);
      textvview.setText('           世界           ');
      textvview.setPadding(10, 10, 10, 10);
      textvview.setGravity(android.view.Gravity.CENTER);
      textvview.setBackground(bgoff);
     textvview.setTextColor(android.graphics.Color.WHITE); textvview.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!Gui4){//Panda
                    mainMenu6();
                    textvview.setBackground(bgon);
                    Gui4 = true;
                    }else{
                    menu4.dismiss();
                    textvview.setBackground(bgoff);
                    Gui4 = false;
	    	     }
      }
      }));
      textvview.setOnTouchListener(new android.view.View.OnTouchListener( { // ability to move from dragop
					onTouch: function (view, motionEvent) {
						try {
							if(!moving) return false;
							switch(motionEvent.getAction()) {
							case android.view.MotionEvent.ACTION_DOWN:
								dx = mPosX - motionEvent.getRawX();
								dy = mPosY - motionEvent.getRawY();
								break;
							case android.view.MotionEvent.ACTION_MOVE:
								mPosX = (motionEvent.getRawX() + dx);
								mPosY = (motionEvent.getRawY() + dy);
								GUI4.update(mPosX, mPosY - 15, -1, -1);
								break;
							case android.view.MotionEvent.ACTION_UP:
							case android.view.MotionEvent.ACTION_CANCEL:
								moving = false;
								break;
							}
						} catch(e) {
						}

						return true;
					}
				}));
				textvview.setOnLongClickListener(new android.view.View.OnLongClickListener( {
					onLongClick: function (v, t) {
						moving = true;
						return true;
					}
				}));
      layout.addView(textvview);

  GUI4 = new PopupWindow(layout, RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT);
     GUI4.setAnimationStyle(android.R.style.Animation_InputMethod);
     layout.setPadding(10, 10, 10, 10);
     GUI4.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
			GUI4.showAtLocation(ctx.getWindow().getDecorView(), Gravity.LEFT| Gravity.TOP, 0, 50);
			}catch(error){
				Toast.makeText(ctx, "Template Error: " + error, 1).show();
			}
	}}));
}
showTabGui();

// > TabGui <

// > Settings <

function showMenuBtnR() {
	
ctx.runOnUiThread(new Runnable({ run: function(){
	try{
		var layout = new LinearLayout(ctx);
		layout.setOrientation(1);
//Panda
var sbp2 = new android.widget.TextView(ctx);
      sbp2.setText('>自瞄范围<');                 sbp2.setTextColor(android.graphics.Color.WHITE);            sbp2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.GREEN));
      sbp2.getBackground().setAlpha(150);
      sbp2.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      }//Panda
      }));
      sbp2.setOnTouchListener(new android.view.View.OnTouchListener( { // ability to move from dragop
					onTouch: function (view, motionEvent) {
						try {
							if(!moving) return false;
							switch(motionEvent.getAction()) {
							case android.view.MotionEvent.ACTION_DOWN:
								dx = mPosX - motionEvent.getRawX();
								dy = mPosY - motionEvent.getRawY();
								break;
							case android.view.MotionEvent.ACTION_MOVE:
								mPosX = (motionEvent.getRawX() + dx);
								mPosY = (motionEvent.getRawY() + dy);
								GUIR.update(mPosX, mPosY - 15, -1, -1);
								break;
							case android.view.MotionEvent.ACTION_UP:
							case android.view.MotionEvent.ACTION_CANCEL:
								moving = false;
								break;
							}
						} catch(e) {
						}

						return true;
					}
				}));
				sbp2.setOnLongClickListener(new android.view.View.OnLongClickListener( {
					onLongClick: function (v, t) {
						moving = true;
						return true;
					}
				}));
      layout.addView(sbp2);
//Panda
var sbp3Progress = 0;
      var sbp3 = new android.widget.SeekBar(ctx);
      sbp3.getBackground().setAlpha(150);
      sbp3.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.GREEN));
      sbp3.setMax(4);
      sbp3.setProgress(sbp3Progress);
      sbp3.setOnSeekBarChangeListener(new android.widget.SeekBar.OnSeekBarChangeListener()
      {
      onStopTrackingTouch: function(view)
      {
      sbp3Progress=sbp3.getProgress();
      if(sbpProgress==0)
      {
      ab1 = false;
      ab2 = false;
      abb1 = false;
      abb2 = false;
      abbb1 = false;
      abbb2 = false;
      abbbb1 = false;
      abbbb2 = false;
      sbp2.setText('>自瞄范围<'); 
      }
      if(sbp3Progress==1)
      {
      ab1 = true;
      ab2 = true;
      sbp2.setText('>自瞄范围<8'); 
      }
      if(sbp3Progress==2)
      {     
      abb1 = true;
      abb2 = true;
      sbp2.setText('>自瞄范围<9'); 
      }
      if(sbp3Progress==3)
      {     
      abbb1 = true;
      abbb2 = true;
      sbp2.setText('>自瞄范围<10'); 
      }
      if(sbp3Progress==4)
      {      
     abbbb1 = true;
     abbbb2 = true;
      sbp2.setText('>自瞄范围<12'); 
      }
      }//Panda
      });
      layout.addView(sbp3);
//Panda
      var sbp1 = new android.widget.TextView(ctx);
      sbp1.setText('>长臂猿范围<');                 sbp1.setTextColor(android.graphics.Color.WHITE);            sbp1.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.GREEN));
      sbp1.getBackground().setAlpha(150);
      sbp1.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      }//Panda
      }));
       layout.addView(sbp1);
//Panda
var sbpProgress = 0;
      var sbp = new android.widget.SeekBar(ctx);
      sbp.getBackground().setAlpha(150);
      sbp.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.GREEN));
      sbp.setMax(4);
      sbp.setProgress(sbpProgress);
      sbp.setOnSeekBarChangeListener(new android.widget.SeekBar.OnSeekBarChangeListener()
      {
      onStopTrackingTouch: function(view)
      {
      sbpProgress=sbp.getProgress();
      if(sbpProgress==0)
      {
      var ent = getNearestEntity(1000);
      Entity.setCollisionSize(ent, 1, 2);
      sbp1.setText('>长臂猿范围<'); 
      }
      if(sbpProgress==1)
      {
      var ent = getNearestEntity(1000);
      Entity.setCollisionSize(ent, 5, 5);
      sbp1.setText('>长臂猿范围<5'); 
      }
      if(sbpProgress==2)
      {
      var ent = getNearestEntity(1000);
      Entity.setCollisionSize(ent, 8, 8);
      sbp1.setText('>长臂猿范围<8'); 
      }
      if(sbpProgress==3)
      {
      var ent = getNearestEntity(1000);
      Entity.setCollisionSize(ent, 10, 8);
      sbp1.setText('>长臂猿范围<10'); 
      }
      if(sbpProgress==4)
      {
      var ent = getNearestEntity(1000);
      Entity.setCollisionSize(ent, 12, 8);
      sbp1.setText('>长臂猿范围<12'); 
      }
      }//Panda
      });
      layout.addView(sbp);
      
GUIR = new PopupWindow(layout, ctx.getWindowManager().getDefaultDisplay().getWidth()/6, ctx.getWindowManager().getDefaultDisplay().getHeight()/2);
     GUIR.setAnimationStyle(android.R.style.Animation_InputMethod);
     GUIR.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
			GUIR.showAtLocation(ctx.getWindow().getDecorView(), Gravity.LEFT| Gravity.TOP, 350, 50);
			}catch(error){
				Toast.makeText(ctx, "Template Error: " + error, 1).show();
			}
	}}));
}

// > TabGui <

// > MenuLayout <


// > Combat <


function mainMenu4(){
	ctx.runOnUiThread(new Runnable({ run: function(){
		try{
            var menuLayout = new LinearLayout(ctx);
		    menuLayout.setOrientation(1);
		    menuLayout.setBackground(bgL);
      var menuScroll = new android.widget.ScrollView(ctx);
      var menuLayout1 = new android.widget.LinearLayout(ctx);
      menuLayout1.setOrientation(1);      menuScroll.addView(menuLayout);     menuLayout1.addView(menuScroll);
			//Panda
			
var big = 10.1;

      //Panda
   var buttonn = new android.widget.TextView(ctx);
      buttonn.setText('自瞄');
      buttonn.setTextColor(android.graphics.Color.WHITE);
      buttonn.setBackground(aimbot ? mainbt : mainbt2);
      buttonn.setTextSize(big);
      buttonn.setPadding(10, 10, 10, 10);
      buttonn.getBackground().setAlpha(150);
      buttonn.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!aimed){
      aimbot = true;
      aimed = true;
      name1.setText("自瞄");
      layout6.addView(name1);
      buttonn.setBackground(mainbt);
      }else{//Panda
      aimbot = false;
      aimed = false;
      name1.setText("");
      layout6.removeView(name1);
      buttonn.setBackground(mainbt2);
      }
      //Panda
      }
      }));
      menuLayout.addView(buttonn);
      
   var buttonn56 = new android.widget.TextView(ctx);
      buttonn56.setText('杀戮');
      buttonn56.setTextColor(android.graphics.Color.WHITE);
      buttonn56.setBackground(pc2 ? mainbt : mainbt2);
      buttonn56.setTextSize(big);
      buttonn56.setPadding(10, 10, 10, 10);
      buttonn56.getBackground().setAlpha(150);
      buttonn56.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!pc2){
      pc1 = true;
      pc2 = true;
      name56.setText("杀戮");
      layout6.addView(name56);
      buttonn56.setBackground(mainbt);
      }else{//Panda
      pc1 = false;
      pc2 = false;
      name56.setText("");
      layout6.removeView(name56);
      buttonn56.setBackground(mainbt2);
      }
      //Panda
      }
      }));
      menuLayout.addView(buttonn56);
      //Panda
var button1 = new android.widget.TextView(ctx);
      button1.setText('相关设置');                 button1.setTextColor(android.graphics.Color.WHITE);         
      button1.setBackground(Gui9 ? mainbt : mainbt2);
      button1.setTextSize(big);
      button1.getBackground().setAlpha(150);
      button1.setPadding(10, 10, 10, 10);
      button1.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!Gui9){//Panda
                    showMenuBtnR();
                    button1.setBackground(mainbt);
                    name2.setText("相关设置");
                    layout6.addView(name2);
                    Gui9 = true;
                    }else{
                    GUIR.dismiss();
                    name2.setText("");
                    layout6.removeView(name2);
                    button1.setBackground(mainbt2);
                    Gui9 = false;
      }
      }
      }));
      menuLayout.addView(button1);
      //Panda
   var button2 = new android.widget.TextView(ctx);
      button2.setText('攻击瞄准');
      button2.setTextColor(android.graphics.Color.WHITE);
      button2.setBackground(aas2 ? mainbt : mainbt2);
      button2.setTextSize(big);
      button2.setPadding(10, 10, 10, 10);
      button2.getBackground().setAlpha(150);
      button2.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!aas2){
      aas1 = true;
      aas2 = true;
      name3.setText("攻击瞄准");
      layout6.addView(name3);
      button2.setBackground(mainbt);
      }else{
      aas1 = false;
      aas2 = false;
      name3.setText("");
      layout6.removeView(name3);
      button2.setBackground(mainbt2);
      }
      //Panda
      }
      }));      
      menuLayout.addView(button2);
      //Panda
   var button22 = new android.widget.TextView(ctx);
      button22.setText('没有向上');
      button22.setTextColor(android.graphics.Color.WHITE);
      button22.setBackground(pvp2 ? mainbt : mainbt2);
      button22.setTextSize(big);
      button22.setPadding(10, 10, 10, 10);
      button22.getBackground().setAlpha(150);
      button22.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!pvp2){
      pvp1 = true;
      pvp2 = true;
      name4.setText("没有向上");
      layout6.addView(name4);
      button22.setBackground(mainbt);
      }else{
      pvp1 = false;
      pvp2 = false;
      name4.setText("");
      layout6.removeView(name4);
      button22.setBackground(mainbt2);
      }
      //Panda
      }
      }));      
      menuLayout.addView(button22);
      //Panda
   var button5 = new android.widget.TextView(ctx);
      button5.setText('长臂猿');
      button5.setTextColor(android.graphics.Color.WHITE);
      button5.setBackground(hitboxed ? mainbt : mainbt2);
      button5.setTextSize(big);
      button5.setPadding(10, 10, 10, 10);
      button5.getBackground().setAlpha(150);
      button5.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!hitboxed){
      hitboxss = true;
      hitboxed = true;
      name5.setText("长臂猿");
      layout6.addView(name5);
      button5.setBackground(mainbt);
      }else{
      hitboxss = false;
      hitboxed = false;
      name5.setText("");
      layout6.removeView(name5);
      button5.setBackground(mainbt2);
      }
      //Panda
      }
      }));
      menuLayout.addView(button5);
      //Panda
   var button6 = new android.widget.TextView(ctx);
      button6.setText('传送光环');
      button6.setTextColor(android.graphics.Color.WHITE);
      button6.setBackground(vtped ? mainbt : mainbt2);
      button6.setTextSize(big);
      button6.setPadding(10, 10, 10, 10);
      button6.getBackground().setAlpha(150);
      button6.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!vtped){
      vtped = true;
      vport = true;
      name6.setText("传送光环");
      layout6.addView(name6);
      button6.setBackground(mainbt);
      }else{
      vtped = false;
      vport = false;
      name6.setText("");
      layout6.removeView(name6);
      button6.setBackground(mainbt2);
      }
      
      }//Panda
      }));
      menuLayout.addView(button6);
     //Panda
   var button8 = new android.widget.TextView(ctx);
      button8.setText('刀刀暴击');
      button8.setTextColor(android.graphics.Color.WHITE);
      button8.setBackground(cs2 ? mainbt : mainbt2);
      button8.setTextSize(big);
      button8.setPadding(10, 10, 10, 10);
      button8.getBackground().setAlpha(150);
      button8.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!cs2){
      cs1 = true;
      cs2 = true;
      name7.setText("刀刀暴击");
      layout6.addView(name7);
      button8.setBackground(mainbt);
      }else{
      cs1 = false;
      cs2 = false;
      name7.setText("");
      layout6.removeView(name7);
      button8.setBackground(mainbt2);
      }
      
      }//Panda
      }));
      menuLayout.addView(button8);
//Panda
   var button11 = new android.widget.TextView(ctx);
      button11.setText('骑上玩家');
      button11.setTextColor(android.graphics.Color.WHITE);
      button11.setBackground(ir2 ? mainbt : mainbt2);
      button11.setTextSize(big);
      button11.setPadding(10, 10, 10, 10);
      button11.getBackground().setAlpha(150);
      button11.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!ir2){
      ir1 = true;
      ir2 = true;
      name8.setText("骑上玩家");
      layout6.addView(name8);
      button11.setBackground(mainbt);
      }else{
      ir1 = false;
      ir2 = false;
      name8.setText("");
      layout6.removeView(name8);
      button11.setBackground(mainbt2);
      }
      //Panda
      }
      }));
      menuLayout.addView(button11);
      //Panda
   var button12 = new android.widget.TextView(ctx);
      button12.setText('视角缩放');
      button12.setTextColor(android.graphics.Color.WHITE);
      button12.setBackground(gmSwitchedddd ? mainbt : mainbt2);
      button12.setTextSize(big);
      button12.setPadding(10, 10, 10, 10);
      button12.getBackground().setAlpha(150);
      button12.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!gmSwitchedddd){
      ModPE.setFov(98)
      gmSwitchedddd = true;
      button12.setBackground(mainbt);
      name9.setText("视角缩放");
      layout6.addView(name9);
      }else{
     
      ModPE.resetFov()
      gmSwitchedddd = false;
      name9.setText("");
      layout6.removeView(name9);
      button12.setBackground(mainbt2);
      }//Panda
      
      }
      }));
      menuLayout.addView(button12);
      //Panda
menu2 = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/7, ctx.getWindowManager().getDefaultDisplay().getHeight()/3);    
        menu2.setAnimationStyle(android.R.style.Animation_InputMethod);
        menuLayout.setPadding(10, 10, 10, 10);
        menu2.setBackgroundDrawable(new android.graphics.drawable.BitmapDrawable(android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(medusaBG, 0) , 0, android.util.Base64.decode(medusaBG, 0).length)));
		menu2.showAtLocation(ctx.getWindow().getDecorView(), Gravity.LEFT | Gravity.TOP, 185, 50);
		}catch(err){
			Toast.makeText(ctx, "An error occured: " + err, 1).show();
		}
	}}));
}//Panda


// > Motion <


function mainMenu5(){
	ctx.runOnUiThread(new Runnable({ run: function(){
		try{
			var menuLayoutt = new LinearLayout(ctx);
			menuLayoutt.setOrientation(1);
			menuLayoutt.setBackground(bgL);
	 var menuScroll = new android.widget.ScrollView(ctx);
      var menuLayout1 = new android.widget.LinearLayout(ctx);
      menuLayout1.setOrientation(1);      menuScroll.addView(menuLayoutt);     menuLayout1.addView(menuScroll);
			//Panda
			
var big = 10.1;
			//Panda
      
      //Panda
   var button54 = new TextView(ctx);
      button54.setText('变速齿轮');
      button54.setTextColor(android.graphics.Color.WHITE);
      button54.setBackground(msped ? mainbt : mainbt2);
      button54.setTextSize(big);
      button54.setPadding(10, 10, 10, 10);
      button54.getBackground().setAlpha(150);
      button54.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!msped){
      msped = true;
      motion = true;
      name10.setText("变速齿轮");
      layout6.addView(name10);
      button54.setBackground(mainbt);
      }else{
      msped = false;
      motion = false;
      name10.setText("");
      layout6.removeView(name10);
      button54.setBackground(mainbt2);
      }
      //Panda
      }
      }));
      menuLayoutt.addView(button54);
      //Panda
         var button546 = new TextView(ctx);
      button546.setText('加速滑行');
      button546.setTextColor(android.graphics.Color.WHITE);
      button546.setBackground(csb2 ? mainbt : mainbt2);
      button546.setTextSize(big);
      button546.setPadding(10, 10, 10, 10);
      button546.getBackground().setAlpha(150);
      button546.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!csb2){
      csb1 = true;
      csb2 = true;
      name11.setText("加速滑行");
      layout6.addView(name11);
      button546.setBackground(mainbt);
      }else{
      csb1 = false;
      csb2 = false;
      name11.setText("");
      layout6.removeView(name11);
      button546.setBackground(mainbt2);
      }
      //Panda
      }
      }));
      menuLayoutt.addView(button546);
      //Panda
      var button1 = new android.widget.TextView(ctx);
      button1.setText('滑行设置');                 button1.setTextColor(android.graphics.Color.WHITE);         
   button1.setBackground(GuiG ? mainbt : mainbt2);
      button1.setTextSize(big);
      button1.setPadding(10, 10, 10, 10);
      button1.getBackground().setAlpha(150);
      button1.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!GuiG){//Panda
                    showMenuBtnG();
                    button1.setBackground(mainbt);
                    name55.setText("滑行设置");
                    layout6.addView(name55);
                    GuiG = true;
                    }else{
                    GUIG.dismiss();
                    name55.setText("");
                    layout6.removeView(name55);
                    button1.setBackground(mainbt2);
                    GuiG = false;
      }
      }
      }));
      menuLayoutt.addView(button1);
//Panda
   var button57 = new TextView(ctx);
      button57.setText('自动跳跃');
      button57.setTextColor(android.graphics.Color.WHITE);
      button57.setBackground(bhoped ? mainbt : mainbt2);
      button57.setTextSize(big);
      button57.setPadding(10, 10, 10, 10);
      button57.getBackground().setAlpha(150);
      button57.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!bhoped){
      bhopl = true;
      bhoped = true;
      name12.setText("自动跳跃");
      layout6.addView(name12);
      button57.setBackground(mainbt);
      }else{
      bhopl = false;
      bhoped = false;
      name12.setText("");
      layout6.removeView(name12);
      button57.setBackground(mainbt2);
      }
      //Panda
      }
      }));
      menuLayoutt.addView(button57);
      //Panda
      var button13 = new android.widget.TextView(ctx);
      button13.setText('点击跳跃');
      button13.setTextColor(android.graphics.Color.WHITE);
      button13.setBackground(taptowered ? mainbt : mainbt2);
      button13.setTextSize(big);
      button13.setPadding(10, 10, 10, 10);
      button13.getBackground().setAlpha(150);
      button13.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!taptowered){
      taptowerss = true;
      taptowered = true;
      name13.setText("点击跳跃");
      layout6.addView(name13);
      button13.setBackground(mainbt);
      }else{
      taptowerss = false;
      taptowered = false;
      name13.setText("");
      layout6.removeView(name13);
      button13.setBackground(mainbt2);
      }//Panda
      
      }
      }));
      menuLayoutt.addView(button13);
      
      //Panda
   var button15 = new android.widget.TextView(ctx);
      button15.setText('空中跳跃');
      button15.setTextColor(android.graphics.Color.WHITE);
      button15.setBackground(airjumped ? mainbt : mainbt2);
      button15.setTextSize(big);
      button15.setPadding(10, 10, 10, 10);
      button15.getBackground().setAlpha(150);
      button15.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!airjumped){
      showJumpBtn();
      airjumped = true;
      name14.setText("空中跳跃");
      layout6.addView(name14);
      button15.setBackground(mainbt);
      }else{
      GUIj.dismiss();
      airjumped = false;
      name14.setText("");
      layout6.removeView(name14);
      button15.setBackground(mainbt2);
      }
      
      }
      }));//Panda
      menuLayoutt.addView(button15);
      //Panda
      //Panda
   var button17 = new android.widget.TextView(ctx);
      button17.setText('快速爬墙');
      button17.setTextColor(android.graphics.Color.WHITE);
      button17.setBackground(steped ? mainbt : mainbt2);
      button17.setTextSize(big);
      button17.setPadding(10, 10, 10, 10);
      button17.getBackground().setAlpha(150);
      button17.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!steped){
      stepss = true;
      steped = true;
      name15.setText("快速爬墙");
      layout6.addView(name15);
      button17.setBackground(mainbt);
      }else{
      stepss = false;
      steped = false;
      name15.setText("");
      layout6.removeView(name15);
      button17.setBackground(mainbt2);
      }
      
      }
      }));
      menuLayoutt.addView(button17);
      //Panda
   var button24 = new android.widget.TextView(ctx);
      button24.setText('自动搭路');
      button24.setTextColor(android.graphics.Color.WHITE);
      button24.setBackground(fb2 ? mainbt : mainbt2);
      button24.setTextSize(big);
      button24.setPadding(10, 10, 10, 10);
      button24.getBackground().setAlpha(150);
      button24.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!fb2){
      fb1 = true;
      fb2 = true;
      name17.setText("自动搭路");
      layout6.addView(name17);
      button24.setBackground(mainbt);
      }else{
      fb1 = false;
      fb2 = false;
      name17.setText("");
      layout6.removeView(name17);
      button24.setBackground(mainbt2);
      }
      
      }//Panda
      }));
      menuLayoutt.addView(button24);
      //Panda
   var button27 = new android.widget.TextView(ctx);
      button27.setText('始终潜行');
      button27.setTextColor(android.graphics.Color.WHITE);
      button27.setBackground(sw2 ? mainbt : mainbt2);
      button27.setTextSize(big);
      button27.setPadding(10, 10, 10, 10);
      button27.getBackground().setAlpha(150);
      button27.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!sw2){//Panda
      sw1 = true;
      sw2 = true;
      name19.setText("始终潜行");
      layout6.addView(name19);
      button27.setBackground(mainbt);
      }else{
      sw1 = false;
      sw2 = false;
      name19.setText("");
      layout6.removeView(name19);
      button27.setBackground(mainbt2);
      }
      
      }
      }));
      menuLayoutt.addView(button27);
      
     //Panda
      
   var button29 = new android.widget.TextView(ctx);
      button29.setText('上下瞬移');
      button29.setTextColor(android.graphics.Color.WHITE);
      button29.setBackground(elevatored ? mainbt : mainbt2);
      button29.setTextSize(big);
      button29.setPadding(10, 10, 10, 10);
      button29.getBackground().setAlpha(150);
      button29.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!elevatored){
      showElevatorBtn();
      elevatored = true;
      name21.setText("上下瞬移");
      layout6.addView(name21);
      button29.setBackground(mainbt);
      }else{
      GUIe.dismiss();
      elevatored = false;
      name21.setText("");
      layout6.removeView(name21);
      button29.setBackground(mainbt2);
      }
      //Panda
      }
      }));
      menuLayoutt.addView(button29);
	//Panda
menu3 = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/7, ctx.getWindowManager().getDefaultDisplay().getHeight()/3);    
     menu3.setAnimationStyle(android.R.style.Animation_InputMethod);
     menuLayoutt.setPadding(10, 10, 10, 10);
     menu3.setBackgroundDrawable(new android.graphics.drawable.BitmapDrawable(android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(medusaBG, 0) , 0, android.util.Base64.decode(medusaBG, 0).length)));
			menu3.showAtLocation(ctx.getWindow().getDecorView(), Gravity.LEFT| Gravity.TOP, 185, 50);
			}catch(error){
				Toast.makeText(ctx, "Template Error: " + error, 1).show();
			}
	}}));
}


function screenChangeHook(screen) {
if(screen.toString().indexOf("progress_screen") > -1){
Utils.Render.init();
 }
}
var entry = entry = getPlayerEnt()


// > Player <


function mainMenu3(){
	ctx.runOnUiThread(new Runnable({ run: function(){
		try{
			var menuLayouttt = new LinearLayout(ctx);
			menuLayouttt.setOrientation(1);
			menuLayouttt.setBackground(bgL);
	  var menuScroll = new android.widget.ScrollView(ctx);
      var menuLayout1 = new android.widget.LinearLayout(ctx);
      menuLayout1.setOrientation(1);      menuScroll.addView(menuLayouttt);     menuLayout1.addView(menuScroll);
			//Panda
			
var big = 10.1;
			//Panda
     
      //Panda
   var button31 = new android.widget.TextView(ctx);
      button31.setText('没有击退');
      button31.setTextColor(android.graphics.Color.WHITE);
      button31.setBackground(antikbed ? mainbt : mainbt2);
      button31.setTextSize(big);
      button31.setPadding(10, 10, 10, 10);
      button31.getBackground().setAlpha(150);
      button31.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!antikbed){//Panda
      antikbss = true;
      antikbed = true;
      name22.setText("没有击退");
      layout6.addView(name22);
      button31.setBackground(mainbt);
        
      }else{
        
      antikbss = false;//Panda
      antikbed = false;
       name22.setText("");
      layout6.removeView(name22);
      button31.setBackground(mainbt2);
      }
      //Panda
      }
      }));
      menuLayouttt.addView(button31);
      //Panda
 var button66 = new TextView(ctx);
      button66.setText('自动空隙');
      button66.setTextColor(android.graphics.Color.WHITE);
      button66.setBackground(aga2 ? mainbt : mainbt2);
      button66.setTextSize(big);
      button66.setPadding(10, 10, 10, 10);
      button66.getBackground().setAlpha(150);
      button66.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!aga2){
      aga1 = true;
      aga2 = true;
      name23.setText("自动空隙");
      layout6.addView(name23);
      button66.setBackground(mainbt);
      }else{
      aga1 = false;
      aga2 = false;
      name23.setText("");
      layout6.removeView(name23);
      button66.setBackground(mainbt2);
      }
      
      }
      }));
      menuLayouttt.addView(button66);
      //Panda
   var buttonf = new android.widget.TextView(ctx);
      buttonf.setText('跟随玩家');
      buttonf.setTextColor(android.graphics.Color.WHITE);
      buttonf.setBackground(hj2 ? mainbt : mainbt2);
      buttonf.setTextSize(big);
      buttonf.setPadding(10, 10, 10, 10);
      buttonf.getBackground().setAlpha(150);
      buttonf.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!hj2){
      hj1 = true;//Panda
      hj2 = true;
      name24.setText("跟随玩家");
      layout6.addView(name24);
      buttonf.setBackground(mainbt);        
      }else{
      hj1 = false;
      hj2 = false;//Panda
      name24.setText("");
      layout6.removeView(name24);
      buttonf.setBackground(mainbt2);
      }
      
      }
      }));
      menuLayouttt.addView(buttonf);
      //Panda
   var buttonFuck = new android.widget.TextView(ctx);
      buttonFuck.setText('自动喷药');
      buttonFuck.setTextColor(android.graphics.Color.WHITE);
      buttonFuck.setBackground(ap2 ? mainbt : mainbt2);
      buttonFuck.setTextSize(big);
      buttonFuck.setPadding(10, 10, 10, 10);
      buttonFuck.getBackground().setAlpha(150);
      buttonFuck.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!ap2){
      ap1 = true;//Panda
      ap2 = true;
      name25.setText("自动喷药");
      layout6.addView(name25);
      buttonFuck.setBackground(mainbt);
      }else{
      ap1 = false;
      ap2 = false;//Panda
      name25.setText("");
      layout6.removeView(name25);
      buttonFuck.setBackground(mainbt2);
      }
      
      }
      }));
      menuLayouttt.addView(buttonFuck);
      //Panda
var button60 = new TextView(ctx);
      button60.setText('水上行走');
      button60.setTextColor(android.graphics.Color.WHITE);
      button60.setBackground(bj2 ? mainbt : mainbt2);
      button60.setTextSize(big);
      button60.setPadding(10, 10, 10, 10);
      button60.getBackground().setAlpha(150);
      button60.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!bj2){
      bj1 = true;
      bj2 = true;
      name26.setText("水上行走");
      layout6.addView(name26);
      button60.setBackground(mainbt);
      }else{
      bj1 = false;
      bj2 = false;
      name26.setText("");
      layout6.removeView(name26);
      button60.setBackground(mainbt2);
      }
      
      }
      }));
      menuLayouttt.addView(button60);
			//Panda
   var button62 = new TextView(ctx);
      button62.setText('游泳速度');
      button62.setTextColor(android.graphics.Color.WHITE);
      button62.setBackground(jsed ? mainbt : mainbt2);
      button62.setTextSize(big);
      button62.setPadding(10, 10, 10, 10);
      button62.getBackground().setAlpha(150);
      button62.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!jsed){
      jsed = true;
      jesus = true;
      name27.setText("游泳速度");
      layout6.addView(name27);
      button62.setBackground(mainbt);
      }else{
      jsed = false;
      jesus = false;
      name27.setText("");
      layout6.removeView(name27);
      button62.setBackground(mainbt2);
      }
      //Panda
      }
      }));
      menuLayouttt.addView(button62);
      //Panda
      var button32 = new android.widget.TextView(ctx);
      button32.setText('点击传送');
      button32.setTextColor(android.graphics.Color.WHITE);
      button32.setBackground(taptped ? mainbt : mainbt2);
      button32.setTextSize(big);
      button32.setPadding(10, 10, 10, 10);
      button32.getBackground().setAlpha(150);
      button32.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!taptped){
      taptpss = true;
      taptped = true;
      name28.setText("点击传送");
      layout6.addView(name28);
      button32.setBackground(mainbt);
      }else{
      taptpss = false;
      taptped = false;
      name28.setText("");
      layout6.removeView(name28);
      button32.setBackground(mainbt2);
      }//Panda
      
      }
      }));
      menuLayouttt.addView(button32);
      //Panda
      var buttontb = new android.widget.TextView(ctx);
      buttontb.setText('点击加速');
      buttontb.setTextColor(android.graphics.Color.WHITE);
      buttontb.setBackground(tb2 ? mainbt : mainbt2);
      buttontb.setTextSize(big);
      buttontb.setPadding(10, 10, 10, 10);
      buttontb.getBackground().setAlpha(150);
      buttontb.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!tb2){
      tb1 = true;
      tb2 = true;
      name29.setText("点击加速");
      layout6.addView(name29);
      buttontb.setBackground(mainbt);
      }else{
      tb1 = false;
      tb2 = false;
      name29.setText("");
      layout6.removeView(name29);
      buttontb.setBackground(mainbt2);
      }
      
      }
      }));
      menuLayouttt.addView(buttontb);
      //Panda
   var button770 = new android.widget.TextView(ctx);
      button770.setText('快速梯子');
      button770.setTextColor(android.graphics.Color.WHITE);
      button770.setBackground(fl2 ? mainbt : mainbt2);
      button770.setTextSize(big);
      button770.setPadding(10, 10, 10, 10);
      button770.getBackground().setAlpha(150);
      button770.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!fl2){
      fl1 = true;
      fl2 = true;
      name30.setText("快速梯子");
      layout6.addView(name30);
      button770.setBackground(mainbt);
      }else{
      fl1 = false;
      fl2 = false;
      name30.setText("");
      layout6.removeView(name30);
      button770.setBackground(mainbt2);
      }
      //Panda
      }
      }));
      menuLayouttt.addView(button770);
      //Panda
   var button644 = new android.widget.TextView(ctx);
      button644.setText('定海神针');
      button644.setTextColor(android.graphics.Color.WHITE);
      button644.setBackground(nbb2 ? mainbt : mainbt2);
      button644.setTextSize(big);
      button644.setPadding(10, 10, 10, 10);
      button644.getBackground().setAlpha(150);
      button644.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!nbb2){
      nbb1 = true;
      nbb2 = true;
      name31.setText("定海神针");
      layout6.addView(name31);
      button644.setBackground(mainbt);
      }else{
      nbb1 = false;
      nbb2 = false;
      name31.setText("");
      layout6.removeView(name31);
      button644.setBackground(mainbt2);
      }
      //Panda
      }
      }));
      menuLayouttt.addView(button644);
      //Panda
   var button40 = new android.widget.TextView(ctx);
      button40.setText('血量显示');
      button40.setTextColor(android.graphics.Color.WHITE);
      button40.setBackground(spammed ? mainbt : mainbt2);
      button40.setTextSize(big);
      button40.setPadding(10, 10, 10, 10);
      button40.getBackground().setAlpha(150);
      button40.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!spammed){
      spamss = true;
      spammed = true;
      name32.setText("血量显示");
      layout6.addView(name32);
      button40.setBackground(mainbt);
      }else{
      spamss = false;
      spammed = false;
      name32.setText("");
      layout6.removeView(name32);
      button40.setBackground(mainbt2);
      }
      //Panda
      }
      }));
      menuLayouttt.addView(button40);
      //Panda
   
//Panda
menu1 = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/7, ctx.getWindowManager().getDefaultDisplay().getHeight()/3);    
     menuLayouttt.setPadding(10, 10, 10, 10);
     menu1.setAnimationStyle(android.R.style.Animation_InputMethod);
     menu1.setBackgroundDrawable(new android.graphics.drawable.BitmapDrawable(android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(medusaBG, 0) , 0, android.util.Base64.decode(medusaBG, 0).length)));
			menu1.showAtLocation(ctx.getWindow().getDecorView(), Gravity.LEFT| Gravity.TOP, 185, 50);
			}catch(error){
				Toast.makeText(ctx, "Template Error: " + error, 1).show();
			}
	}}));
}//Panda


// > World <


function mainMenu6(){
	ctx.runOnUiThread(new Runnable({ run: function(){
		try{
			var menuLayoutttt = new LinearLayout(ctx);
			menuLayoutttt.setOrientation(1);
			menuLayoutttt.setBackground(bgL);
	  var menuScroll = new android.widget.ScrollView(ctx);
      var menuLayout1 = new android.widget.LinearLayout(ctx);
      menuLayout1.setOrientation(1);      menuScroll.addView(menuLayoutttt);     menuLayout1.addView(menuScroll);
			//Panda
			
var big = 10.1;
			//Panda
     
      //Panda
   var button42 = new android.widget.TextView(ctx);
      button42.setText('生存飞行');
      button42.setTextColor(android.graphics.Color.WHITE);
      button42.setBackground(gmSwitched ? mainbt : mainbt2);
      button42.setTextSize(big);
      button42.setPadding(10, 10, 10, 10);
      button42.getBackground().setAlpha(150);
      button42.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!gmSwitched){
      Player.setCanFly(1)
      Player.isFlying(1)
      gmSwitched = true;
      name33.setText("生存飞行");
      layout6.addView(name33);
      button42.setBackground(mainbt);
      }else{
      Player.setCanFly(0)
      gmSwitched = false;
      name33.setText("");
      layout6.removeView(name33);
      button42.setBackground(mainbt2);
      }
      
      }
      }));
      menuLayoutttt.addView(button42);
      //Panda
      var button41 = new android.widget.TextView(ctx);
      button41.setText('坐标显示');
      button41.setTextColor(android.graphics.Color.WHITE);
      button41.setBackground(livecored ? mainbt : mainbt2);
      button41.setTextSize(big);
      button41.setPadding(10, 10, 10, 10);
      button41.getBackground().setAlpha(150);
      button41.getBackground().setAlpha(150);
      button41.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!livecored){
      livecordss = true;
      livecored = true;
      name34.setText("坐标显示");
      layout6.addView(name34);
      button41.setBackground(mainbt);
      }else{
      livecordss = false;
      livecored = false;
      name34.setText("");
      layout6.removeView(name34);
      button41.setBackground(mainbt2);
      }
      //Panda
      }
      }));
      menuLayoutttt.addView(button41);
      //Panda
   
      //Panda
   var button45 = new android.widget.TextView(ctx);
      button45.setText('十字指针');
      button45.setTextColor(android.graphics.Color.WHITE);
      button45.setBackground(Gui7 ? mainbt : mainbt2);
      button45.setTextSize(big);
      button45.setPadding(10, 10, 10, 10);
      button45.getBackground().setAlpha(150);
      button45.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!Gui7){
      showCrossBtn();
      Gui7 = true;
      name35.setText("十字指针");
      layout6.addView(name35);
      button45.setBackground(mainbt);
      }else{
      GUIv.dismiss();
      Gui7 = false;
      name35.setText("");
      layout6.removeView(name35);
      button45.setBackground(mainbt2);
      }
      
      }
      }));
      menuLayoutttt.addView(button45);
      //Panda
            //Panda
      var buttonvv = new android.widget.TextView(ctx);
      buttonvv.setText('冰上行走');
      buttonvv.setTextColor(android.graphics.Color.WHITE);
      buttonvv.setBackground(fi2 ? mainbt : mainbt2);
      buttonvv.setTextSize(big);
      buttonvv.setPadding(10, 10, 10, 10);
      buttonvv.getBackground().setAlpha(150);
      buttonvv.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!fi2){
      fi1 = true;
      fi2 = true;
      name37.setText("");
      layout6.addView(name37);
      buttonvv.setBackground(mainbt);
      }else{
      fi1 = false;
      fi2 = false;
      name37.setText("");
      layout6.removeView(name37);
      buttonvv.setBackground(mainbt2);
      }
      
      }
      }));
      menuLayoutttt.addView(buttonvv);
      //Panda
var button53 = new android.widget.TextView(ctx);
      button53.setText('向上漂浮');
      button53.setTextColor(android.graphics.Color.WHITE);
      button53.setBackground(tnt2 ? mainbt : mainbt2);
      button53.setTextSize(big);
      button53.setPadding(10, 10, 10, 10);
      button53.getBackground().setAlpha(150);
      button53.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!tnt2){
      tnt1 = true;
      tnt2 = true;
      name38.setText("向上漂浮");
      layout6.addView(name38);
      button53.setBackground(mainbt);
      }else{
      tnt1 = false;
      tnt2 = false;
      name38.setText("");
      layout6.removeView(name38);
      button53.setBackground(mainbt2);
      }
      
      }
      }));
      menuLayoutttt.addView(button53);
//Panda
menu4 = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/7, ctx.getWindowManager().getDefaultDisplay().getHeight()/3);    
     menuLayoutttt.setPadding(10, 10, 10, 10);
     menu4.setAnimationStyle(android.R.style.Animation_InputMethod);
     menu4.setBackgroundDrawable(new android.graphics.drawable.BitmapDrawable(android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(medusaBG, 0) , 0, android.util.Base64.decode(medusaBG, 0).length)));
			menu4.showAtLocation(ctx.getWindow().getDecorView(), Gravity.LEFT| Gravity.TOP, 185, 50);
			}catch(error){
				Toast.makeText(ctx, "Template Error: " + error, 1).show();
			}
	}}));
}


// > Render <


function mainMenu8(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
      var menuLayoutR = new android.widget.LinearLayout(ctx);
      menuLayoutR.setOrientation(1);
      menuLayoutR.setBackground(bgL);
      var menuScroll = new android.widget.ScrollView(ctx);
      var menuLayout1 = new android.widget.LinearLayout(ctx);
      menuLayout1.setOrientation(1);      menuScroll.addView(menuLayoutR);     menuLayout1.addView(menuScroll);
            //Panda
            
 var big = 10.1;

      //Panda
        var menuBtn = new TextView(ctx);
		menuBtn.setTextColor(android.graphics.Color.WHITE);
		menuBtn.setBackground(esp ? mainbt : mainbt2);
		menuBtn.getBackground().setAlpha(150);
		menuBtn.setText('碰撞箱');
		menuBtn.setTextSize(big);
		menuBtn.setPadding(10, 10, 10, 10);
		menuBtn.setOnClickListener(new View.OnClickListener({
	    onClick: function(viewarg){
			if(!esp){
			esp = true;
			name39.setText("碰撞箱");
            layout6.addView(name39);
			menuBtn.setBackground(mainbt);
			}else{
			esp = false;
			name39.setText("");
            layout6.removeView(name39);
			menuBtn.setBackground(mainbt2);
				}
				
				}
		}));
		menuLayoutR.addView(menuBtn);
		
        var menuBtn1 = new TextView(ctx);
		menuBtn1.setTextColor(android.graphics.Color.WHITE);
		menuBtn1.setBackground(info ? mainbt : mainbt2);
		menuBtn1.getBackground().setAlpha(150);
		menuBtn1.setText('游戏关于');
		menuBtn1.setTextSize(big);
		menuBtn1.setPadding(10, 10, 10, 10);
		menuBtn1.setOnClickListener(new View.OnClickListener({
	    onClick: function(viewarg){
			if(!info){
			info = true;
			showInfoBtn();
			name40.setText("游戏关于");
            layout6.addView(name40);
			menuBtn1.setBackground(mainbt);
			}else{
			info = false;
			GUII.dismiss();
			name40.setText("");
            layout6.removeView(name40);
			menuBtn1.setBackground(mainbt2);
				}
				
				}
		}));
		menuLayoutR.addView(menuBtn1);
      //Panda
   var button35 = new android.widget.TextView(ctx);
      button35.setText('点击破坏');
      button35.setTextColor(android.graphics.Color.WHITE);
      button35.setBackground(ch2 ? mainbt : mainbt2);
      button35.setTextSize(big);
      button35.setPadding(10, 10, 10, 10);
      button35.getBackground().setAlpha(150);
      button35.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!ch2){
      ch1 = true;
      ch2 = true;      
      button35.setBackground(mainbt);
      name41.setText("点击破坏");
      layout6.addView(name41);
      }else{
        
      ch1 = false;
      ch2 = false;
      name41.setText("");
      layout6.removeView(name41);
      button35.setBackground(mainbt2);
      }
      
      }
      }));
      menuLayoutR.addView(button35);  
      //Panda
   var button36 = new android.widget.TextView(ctx);
      button36.setText('名称显示');
      button36.setTextColor(android.graphics.Color.WHITE);
      button36.setBackground(nt2 ? mainbt : mainbt2);
      button36.setTextSize(big);
      button36.setPadding(10, 10, 10, 10);
      button36.getBackground().setAlpha(150);
      button36.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!nt2){
      nt1 = true;
      nt2 = true;
      name42.setText("名称显示");
      layout6.addView(name42);
      button36.setBackground(mainbt);
      }else{
      nt1 = false;
      nt2 = false;
      name42.setText("");
      layout6.removeView(name42);
      button36.setBackground(mainbt2);
      }
      
      }
      }));
      menuLayoutR.addView(button36);
      //Panda
   var button37 = new android.widget.TextView(ctx);
      button37.setText('透视');
      button37.setTextColor(android.graphics.Color.WHITE);
      button37.setBackground(gmSwitchedd8 ? mainbt : mainbt2);
      button37.setTextSize(big);
      button37.setPadding(10, 10, 10, 10);
      button37.getBackground().setAlpha(150);
      button37.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!gmSwitchedd8){
      Entity.setCollisionSize(getPlayerEnt(), 0.1, 0.1);
      gmSwitchedd8 = true;
      name43.setText("透视");
      layout6.addView(name43);
      button37.setBackground(mainbt);     
      }else{
      Entity.setCollisionSize(getPlayerEnt(), 1, 2);
      gmSwitchedd8 = false;
      name43.setText("");
      layout6.removeView(name43);
      button37.setBackground(mainbt2);
      }
      
      }
      }));
      menuLayoutR.addView(button37);
      //Panda
   var button38 = new android.widget.TextView(ctx);
      button38.setText('夜视');
      button38.setTextColor(android.graphics.Color.WHITE);
      button38.setBackground(gmSwitchedddddd ? mainbt : mainbt2);
      button38.setTextSize(big);
      button38.setPadding(10, 10, 10, 10);
      button38.getBackground().setAlpha(150);
      button38.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!gmSwitchedddddd){
      Entity.addEffect(Player.getEntity(), MobEffect.nightVision, 999999, 100, false, false); 
      gmSwitchedddddd = true;
      name44.setText("夜视");
      layout6.addView(name44);
      button38.setBackground(mainbt);
        
      }else{
        
      Entity.removeAllEffects(getPlayerEnt());
      gmSwitchedddddd = false;
      name44.setText("");
      layout6.removeView(name44);
      button38.setBackground(mainbt2);
      }
      
      }
      }));
      menuLayoutR.addView(button38);
      //Panda
   var button39 = new android.widget.TextView(ctx);
      button39.setText('放大');
      button39.setTextColor(android.graphics.Color.WHITE);
      button39.setBackground(gmSwitchedd ? mainbt : mainbt2);
      button39.setTextSize(big);
      button39.setPadding(10, 10, 10, 10);
      button39.getBackground().setAlpha(150);
      button39.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!gmSwitchedd){
      ModPE.setFov(10.0)
      gmSwitchedd = true;
      button39.setBackground(mainbt);
      name45.setText("放大");
      layout6.addView(name45);
      }else{
        
      ModPE.resetFov()
      gmSwitchedd = false;
      name45.setText("");
      layout6.removeView(name45);
      button39.setBackground(mainbt2);
      }
      
      }
      }));
      menuLayoutR.addView(button39);
          //Panda

	menu6 = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/7, ctx.getWindowManager().getDefaultDisplay().getHeight()/3);    
     menuLayoutR.setPadding(10, 10, 10, 10);
     menu6.setAnimationStyle(android.R.style.Animation_InputMethod);
         menu6.setBackgroundDrawable(new android.graphics.drawable.BitmapDrawable(android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(medusaBG, 0) , 0, android.util.Base64.decode(medusaBG, 0).length)));
            menu6.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, 185, 50);
        }catch(error){
            print("An error occured: " + error);
        }
    }}));
}

// > MenuLayout <

// > Extra Layouts <

// > Glide <

function showMenuBtnG() {
	
ctx.runOnUiThread(new Runnable({ run: function(){
	try{
		var layoutG = new LinearLayout(ctx);
		layoutG.setOrientation(1);
	     layoutG.setBackground(bgL);
		var menuScroll = new android.widget.ScrollView(ctx);
      var menuLayout1 = new android.widget.LinearLayout(ctx);
      menuLayout1.setOrientation(1);      menuScroll.addView(layoutG);     menuLayout1.addView(menuScroll);
		
		var big = 10.1;
		
var button28 = new android.widget.TextView(ctx);
      button28.setText('滑行[永不下降]');
      button28.setTextColor(android.graphics.Color.WHITE);
      button28.setBackground(ndglideed ? mainbt : mainbt2);
      button28.setTextSize(big);
      button28.setPadding(10, 10, 10, 10);
      button28.getBackground().setAlpha(150);
      button28.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
       if(!ndglideed){
      ndglidess = true;
      ndglideed = true;
      name20.setText("滑行①号");
      layout6.addView(name20);
      button28.setBackground(mainbt);
      }else{
      ndglidess = false;
      ndglideed = false;
      name20.setText("");
      layout6.removeView(name20);
      button28.setBackground(mainbt2);
      }
      
      }
      }));
      layoutG.addView(button28);
      
        var buttonn = new android.widget.TextView(ctx);
      buttonn.setText('滑行[缓慢下降]');
      buttonn.setTextColor(android.graphics.Color.WHITE);
      buttonn.setBackground(bgl2 ? mainbt : mainbt2);
      buttonn.setTextSize(big);
      buttonn.setPadding(10, 10, 10, 10);
      buttonn.getBackground().setAlpha(150);
      buttonn.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!bgl2){
      bgl1 = true;
      bgl2 = true;
      name18.setText("滑行②号");
      layout6.addView(name18);
      buttonn.setBackground(mainbt);
      }else{
      bgl1 = false;
      bgl2 = false;
      name18.setText("");
      layout6.removeView(name18);
      buttonn.setBackground(mainbt2);
      }
      //Panda
      }
      }));
      layoutG.addView(buttonn);
      //Panda
      var button20 = new android.widget.TextView(ctx);
      button20.setText('滑行[加速下降]');
      button20.setTextColor(android.graphics.Color.WHITE);
      button20.setBackground(ljc2 ? mainbt : mainbt2);
      button20.setTextSize(big);
      button20.setPadding(10, 10, 10, 10);
      button20.getBackground().setAlpha(150);
      button20.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!ljc2){
      ljc1 = true;
      ljc2 = true;
      name16.setText("滑行③号");
      layout6.addView(name16);
      button20.setBackground(mainbt);
      }else{
      ljc1 = false;
      ljc2 = false;
      name16.setText("");
      layout6.removeView(name16);
      button20.setBackground(mainbt2);
      }
      //Panda
      }
      }));
      layoutG.addView(button20);
      
      var button60 = new android.widget.TextView(ctx);
      button60.setText('滑行[NULL]');
      button60.setTextColor(android.graphics.Color.WHITE);
      button60.setBackground(cg2 ? mainbt : mainbt2);
      button60.setTextSize(big);
      button60.setPadding(10, 10, 10, 10);
      button60.getBackground().setAlpha(150);
      button60.setOnClickListener(new android.view.View.OnClickListener({
      onClick: function(viewarg){
      if(!cg2){
      cg1 = true;
      cg2 = true;
      name16.setText("滑行④");
      layout6.addView(name51);
      button60.setBackground(mainbt);
      }else{
      cg1 = false;
      cg2 = false;
      name16.setText("");
      layout6.removeView(name51);
      button60.setBackground(mainbt2);
      }
      //Panda
      }
      }));
      layoutG.addView(button60);

GUIG = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/7, ctx.getWindowManager().getDefaultDisplay().getHeight()/3);    
     layoutG.setPadding(10, 10, 10, 10);
		GUIG.setBackgroundDrawable(new android.graphics.drawable.BitmapDrawable(android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(medusaBG, 0) , 0, android.util.Base64.decode(medusaBG, 0).length)));
		GUIG.showAtLocation(ctx.getWindow().getDecorView(), Gravity.LEFT | Gravity.TOP, 350, 50);
		     }catch(err){
			Toast.makeText(ctx, "An error occured: " + err, 1).show();
			}
	}}));
}

// > ExtraLayouts <