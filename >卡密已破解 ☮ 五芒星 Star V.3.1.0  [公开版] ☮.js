//  star 3.0.5

var 五芒星=""
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
function 主要按钮(){
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
var 坐标x=0,坐标y=ctx.getWindowManager().getDefaultDisplay().getHeight()/1.5,坐标x1,坐标y1,坐标x2,坐标y2;
ctx.runOnUiThread(new java.lang.Runnable({run:function(){try{
var 窗口=new android.widget.PopupWindow();
var layout=new android.widget.RelativeLayout(ctx),按钮=new android.widget.ImageView(ctx);
var 群=android.util.Base64.decode(五芒星,0);

按钮.setImageBitmap(new android.graphics.BitmapFactory.decodeByteArray(群,0,群.length));
按钮.setLayoutParams(new android.widget.LinearLayout.LayoutParams(ctx.getWindowManager().getDefaultDisplay().getWidth()/8,ctx.getWindowManager().getDefaultDisplay().getHeight()/8));
按钮.setOnClickListener(new android.view.View.OnClickListener({onClick:function(v){
menu();
}}));

按钮.setOnTouchListener(new android.view.View.OnTouchListener({onTouch:function(v,e){
switch(e.getAction()){
case 0:
坐标x1=e.getX();
坐标y1=e.getY();
break;
case 2:
坐标x2=parseInt(e.getX()-坐标x1)*-3/10;坐标y2=parseInt(e.getY()-坐标y1)*-3/10;
坐标x=坐标x+坐标x2;
坐标y=坐标y+坐标y2;
窗口.update(坐标x,坐标y,-1,-1);
break;}
return false;
}}));
layout.addView(按钮);
窗口.setContentView(layout);
窗口.setWidth(dip2px(ctx,50));
窗口.setHeight(dip2px(ctx,50));
窗口.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
窗口.showAtLocation(ctx.getWindow().getDecorView(),android.view.Gravity.BOTTOM|android.view.Gravity.RIGHT,坐标x,坐标y);
}catch(err){print(err);}
}}));}
主要按钮();

var 屏幕高度=ctx.getWindowManager().getDefaultDisplay().getHeight();
var 屏幕宽度=ctx.getWindowManager().getDefaultDisplay().getWidth();
var GD=android.graphics.drawable.GradientDrawable;
var 颜色=android.graphics.Color.argb;
var 线性布局=android.widget.LinearLayout;
var 按钮=android.widget.Button;
var 文本=android.widget.TextView;
var 点击事件=android.view.View.OnClickListener;
var 布局参数=android.widget.LinearLayout.LayoutParams;
var 输入框=android.widget.EditText;
var 获取硬件=ctx.getSystemService(android.content.Context.TELEPHONY_SERVICE);
var IMEI=获取硬件.getDeviceId();
var 随机数字=Math.ceil(Math.random()*88888+10000)
var 密码=IMEI/3156665087
var path=new android.os.Environment.getExternalStorageDirectory().getAbsolutePath()
var 解锁验证=true//false   注册机
var 隔空挖蛋糕=false
var 当前锁定玩家=null
var 长臂猿=false
var 骑玩家=false
var 自瞄=false

function load(文本){ 
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get() 
ctx.runOnUiThread(new java.lang.Runnable({ 
run: function(){ 
android.widget.Toast.makeText(ctx,彩字("§b便捷辅助↝§1"+文本),0).show() 
}}))}

load("欢迎使用 五芒星 Star v3.0")
load("游戏时建议先使用便捷按键设置返回地点，以便骑玩家脱离卡死")


if(java.io.File(path+"/Android/.js/.Mc  Star 验证文件 』/"+密码+".txt").exists()){
load("密码验证通过")
解锁验证=true
}


function 彩字(text){
var colors=[[" "," &nbsp;"],["\n","<br/>"],["§l","</b><b>"],["§m","</del><del>"],["§n","</ins><ins>"],["§o","</i><i>"],["§r","</font></b></del></ins></i>"],["§0","</font><font color=#000000>"],["§1","</font><font color=#0000AA>"],["§2","</font><font color=#00AA00>"],["§3","</font><font color=#00AAAA>"],["§4","</font><font color=#AA0000>"],["§5","</font><font color=#AA00AA>"],["§6","</font><font color=#FFAA00>"],["§7","</font><font color=#cccccc>"],["§8","</font><font color=#555555>"],["§9","</font><font color=#5555FF>"],["§a","</font><font color=#55FF55>"],["§b","</font><font color=#55FFFF>"],["§c","</font><font color=#FF5555>"],["§d","</font><font color=#FF55FF>"],["§e","</font><font color=#FFFF55>"],["§f","</font><font color=#FFFFFF>"],["老婆","</font><font color=#66CCFF>"],["下划线","<u> </u> "]]
for(var e in colors){
text=text.split(colors[e][0]).join(colors[e][1])};return android.text.Html.fromHtml(text);}

function 創建文件(路徑){new java.io.File(路徑).mkdirs();}
function 存在文件(路徑){new java.io.File(路徑).exists();}
function 保存(路径,数据){ 
try{
var 文件=new java.io.File(路径)
var 写入=new java.io.FileWriter(文件);
写入.write(数据)
写入.close();
}catch(e){print("写入:"+e)}
}
function 复制(内容){
ctx.runOnUiThread(new java.lang.Runnable({ 
run: function(){ 
try{
var cm=ctx.getSystemService(ctx.CLIPBOARD_SERVICE)
cm.setText(内容)
}catch(err){
print(err)}
}}))}

function dip2px(ctx,dips){return Math.ceil(dips*ctx.getResources().getDisplayMetrics().density);}

function 传送玩家(x,y,z){setPosition(获取玩家实体(),x,y,z);}

function 获取玩家实体(){return getPlayerEnt()}

var Thread=new java.lang.Thread(
new java.lang.Runnable({
run: function(){
while(true){
if(当前锁定玩家==null){
}else
if(骑玩家==true){
var x=Entity.getX(当前锁定玩家)
var y=Entity.getY(当前锁定玩家)
var z=Entity.getZ(当前锁定玩家)
传送玩家(x,y+3,z)
}
if(自瞄==true){
crosshairAimAt(当前锁定玩家)
}
}}}));
Thread.start();

//此功能由房主幻影杀手作者提供

//     @夏日
function useItem(x,y,z,it,bl) {
  if(隔空挖蛋糕==true){
  
     if(Level.getTile(x-1,y,z)==92){
    Level.destroyBlock(x-1,y,z,true);
  }
  if(Level.getTile(x-2,y,z)==92){
    Level.destroyBlock(x-2,y,z,true);
  }
  if(Level.getTile(x-3,y,z)==92){
    Level.destroyBlock(x-3,y,z,true);
  }
  if(Level.getTile(x-4,y,z)==92){
    Level.destroyBlock(x-4,y,z,true);
  }
  if(Level.getTile(x+1,y,z)==92){
    Level.destroyBlock(x+1,y,z,true);
  }
  if(Level.getTile(x+2,y,z)==92){
    Level.destroyBlock(x+2,y,z,true);
  }
  if(Level.getTile(x+3,y,z)==92){
    Level.destroyBlock(x+3,y,z,true);
  }
  if(Level.getTile(x+4,y,z)==92){
    Level.destroyBlock(x+4,y,z,true);
  }
    if(Level.getTile(x,y,z+1)==92){
    Level.destroyBlock(x,y,z+1,true);
  }
  if(Level.getTile(x,y,z+2)==92){
    Level.destroyBlock(x,y,z+2,true);
  }
  if(Level.getTile(x,y,z+3)==92){
    Level.destroyBlock(x,y,z+3,true);
  }
  if(Level.getTile(x,y,z+4)==92){
    Level.destroyBlock(x,y,z+4,true);
  }
  if(Level.getTile(x,y,z-1)==92){
    Level.destroyBlock(x,y,z-1,true);
  }
  if(Level.getTile(x,y,z-2)==92){
    Level.destroyBlock(x,y,z-2,true);
  }
  if(Level.getTile(x,y,z-3)==92){
    Level.destroyBlock(x,y,z-3,true);
  }
  if(Level.getTile(x,y,z-4)==92){
    Level.destroyBlock(x,y,z-4,true);
  }
  if(Level.getTile(x,y-1,z)==92){
    Level.destroyBlock(x,y-1,z,true);
  }
  if(Level.getTile(x,y-2,z)==92){
    Level.destroyBlock(x,y-2,z,true);
  }
  if(Level.getTile(x,y-3,z)==92){
    Level.destroyBlock(x,y-3,z,true);
  }
  if(Level.getTile(x,y-4,z)==92){
    Level.destroyBlock(x,y-4,z,true);
  }
  }
  }

function crosshairAimAt(ent, pos) {
if(ent != null) {
var x = Entity.getX(ent) - getPlayerX();
var y = Entity.getY(ent) - getPlayerY();
var z = Entity.getZ(ent) - getPlayerZ();
if(pos != null && pos instanceof Array) {

x = Entity.getX(ent) - pos[0];
y = Entity.getY(ent) - pos[1];
z = Entity.getZ(ent) - pos[2];
}
if(Entity.getEntityTypeId(ent) != 63)
y += 0.5;
var a = 0.5 + Entity.getX(ent);
var b = Entity.getY(ent);
var c = 0.5 + Entity.getZ(ent);
var len = Math.sqrt(x * x + y * y + z * z);
var y = y / len;
var pitch = Math.asin(y);
pitch = pitch * 180.0 / Math.PI;
pitch = -pitch;
var yaw = -Math.atan2(a - (Player.getX() + 0.5), c - (Player.getZ() + 0.5)) * (180 / Math.PI);
if(pitch < 89 && pitch > -89) {
Entity.setRot(Player.getEntity(), yaw, pitch);
}
}
  }
  
  function 高级附魔(a,b){
var 级别=32767;
if(b!=null){级别=b}
if(a==null){
Player.enchant(Player.getSelectedSlotId(),Enchantment.FIRE_ASPECT,级别);
Player.enchant(Player.getSelectedSlotId(),Enchantment.FIRE_PROTECTION,级别);
Player.enchant(Player.getSelectedSlotId(),Enchantment.PROJECTILE_PROTECTION,级别);
Player.enchant(Player.getSelectedSlotId(),Enchantment.FORTUNE,级别);
Player.enchant(Player.getSelectedSlotId(),Enchantment.INFINITY,级别);
Player.enchant(Player.getSelectedSlotId(),Enchantment.KNOCKBACK,级别);
Player.enchant(Player.getSelectedSlotId(),Enchantment.SHARPNESS,级别);
Player.enchant(Player.getSelectedSlotId(),Enchantment.AQUA_AFFINITY,级别);;
Player.enchant(Player.getSelectedSlotId(),Enchantment.PUNCH,级别);
Player.enchant(Player.getSelectedSlotId(),Enchantment.FLAME,级别);
Player.enchant(Player.getSelectedSlotId(),Enchantment.BANE_OF_ARTHROPODS,级别)
Player.enchant(Player.getSelectedSlotId(),Enchantment.RESPIRATION,级别);
Player.enchant(Player.getSelectedSlotId(),Enchantment.SILK_TOUCH,级别);
Player.enchant(Player.getSelectedSlotId(),Enchantment.SMITE,级别);
Player.enchant(Player.getSelectedSlotId(),Enchantment.THORNS,级别);
Player.enchant(Player.getSelectedSlotId(),Enchantment.UNBREAKING,级别);
Player.enchant(Player.getSelectedSlotId(),Enchantment.FEATHER_FALLING,级别);
Player.enchant(Player.getSelectedSlotId(),Enchantment.BLAST_PROTECTION,级别);
Player.enchant(Player.getSelectedSlotId(),Enchantment.DEPTH_STRIDER,级别);
Player.enchant(Player.getSelectedSlotId(),Enchantment.EFFICIENCY,级别);
Player.enchant(Player.getSelectedSlotId(),Enchantment.LUCK_OF_THE_SEA,级别);
Player.enchant(Player.getSelectedSlotId(),Enchantment.LURE,级别);
Player.enchant(Player.getSelectedSlotId(),Enchantment.POWER,级别);
Player.enchant(Player.getSelectedSlotId(),Enchantment.PROTECTION,级别);
}else if(a==1){
for(var i=0;i<=9;i++){
Player.enchant(i,Enchantment.FIRE_ASPECT,级别);
Player.enchant(i,Enchantment.FIRE_PROTECTION,级别);
Player.enchant(i,Enchantment.PROJECTILE_PROTECTION,级别);
Player.enchant(i,Enchantment.FORTUNE,级别);
Player.enchant(i,Enchantment.INFINITY,级别);
Player.enchant(i,Enchantment.KNOCKBACK,级别);
Player.enchant(i,Enchantment.SHARPNESS,级别);
Player.enchant(i,Enchantment.AQUA_AFFINITY,级别);;
Player.enchant(i,Enchantment.PUNCH,级别);
Player.enchant(i,Enchantment.FLAME,级别);
Player.enchant(i,Enchantment.BANE_OF_ARTHROPODS,级别)
Player.enchant(i,Enchantment.RESPIRATION,级别);
Player.enchant(i,Enchantment.SILK_TOUCH,级别);
Player.enchant(i,Enchantment.SMITE,级别);
Player.enchant(i,Enchantment.THORNS,级别);
Player.enchant(i,Enchantment.UNBREAKING,级别);
Player.enchant(i,Enchantment.FEATHER_FALLING,级别);
Player.enchant(i,Enchantment.BLAST_PROTECTION,级别);
Player.enchant(i,Enchantment.DEPTH_STRIDER,级别);
Player.enchant(i,Enchantment.EFFICIENCY,级别);
Player.enchant(i,Enchantment.LUCK_OF_THE_SEA,级别);
Player.enchant(i,Enchantment.LURE,级别);
Player.enchant(i,Enchantment.POWER,级别);
Player.enchant(i,Enchantment.PROTECTION,级别);
}
}
}






















function dip2px(ctx,dips){return Math.ceil(dips*ctx.getResources().getDisplayMetrics().density);}
function menu(){
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
var 坐标x=0,坐标y=ctx.getWindowManager().getDefaultDisplay().getHeight()/1.5,坐标x1,坐标y1,坐标x2,坐标y2;
ctx.runOnUiThread(new java.lang.Runnable({run:function(){try{
var 窗口=new android.widget.PopupWindow();
var layout=new android.widget.LinearLayout(ctx)
窗口.setFocusable(true)
layout.setOrientation(1)

坐标y=屏幕高度/4.1
坐标x=屏幕宽度/3.25


var 菜单布局1背景=new GD();
菜单布局1背景.setStroke(10,颜色(200,0,140,255));
菜单布局1背景.setCornerRadius(5);
layout.setBackground(菜单布局1背景);

//菜单顶栏布局 开始
var 菜單頂欄=new android.widget.LinearLayout(ctx)
菜單頂欄.setOrientation(0)
菜單頂欄.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(60,0,100,250)))
layout.addView(菜單頂欄)


按钮=new android.widget.TextView(ctx)
按钮.setText("   五芒星 Star V3.0")
按钮.setTextSize(20)
按钮.setWidth(dip2px(ctx,230));
按钮.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
load(" 五芒星 Star V3.0")
}}))
按钮.setOnTouchListener(new android.view.View.OnTouchListener({onTouch:function(v,e){
switch(e.getAction()){
case 0:
坐标x1=e.getX();
坐标y1=e.getY();
break;
case 2:
坐标x2=parseInt(e.getX()-坐标x1)*-3/10;坐标y2=parseInt(e.getY()-坐标y1)*-3/10;
坐标x=坐标x+坐标x2;
坐标y=坐标y+坐标y2;
窗口.update(坐标x,坐标y,-1,-1);
break;}
return false;
}}));
菜單頂欄.addView(按钮)

關閉=new android.widget.TextView(ctx)
關閉.setText("X")
關閉.setTextSize(20)
關閉.setWidth(dip2px(ctx,20));
關閉.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
窗口.dismiss();
}}))
菜單頂欄.addView(關閉)

//菜单顶栏布局 结束

//标题布局 开始

var layout2=new android.widget.LinearLayout(ctx)
layout2.setOrientation(1)
layout.addView(layout2)

空=new android.widget.TextView(ctx)
空.setText("")
空.setTextSize(10)
空.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){

}}))
layout2.addView(空)

var layout3=new android.widget.LinearLayout(ctx)
layout3.setOrientation(0)
layout.addView(layout3)

var 按钮=new android.widget.ImageView(ctx);
var 群=android.util.Base64.decode(五芒星,0);
按钮.setImageBitmap(new android.graphics.BitmapFactory.decodeByteArray(群,0,群.length));
按钮.setLayoutParams(new android.widget.LinearLayout.LayoutParams(ctx.getWindowManager().getDefaultDisplay().getWidth()/8,ctx.getWindowManager().getDefaultDisplay().getHeight()/8));
layout3.addView(按钮)

標題=new android.widget.TextView(ctx)
標題.setText(彩字("§5五芒星 Star V3.0\n by 五芒星"))
標題.setTextSize(19)
layout3.addView(標題)

//标题布局 结束


//                              分割线


//内容布局 开始

var layout4=new android.widget.LinearLayout(ctx)
layout4.setOrientation(0)
layout.addView(layout4)


var 功能=new android.widget.Button(ctx)
功能.setText("联机辅助功能")
功能.setWidth(dip2px(ctx,125));
功能.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
if(解锁验证==true){
功能窗口();
}else{
load("请先激活卡密")
}
}}))
layout4.addView(功能)

var 娱乐=new android.widget.Button(ctx)
娱乐.setText("生存辅助功能")
娱乐.setWidth(dip2px(ctx,125));
娱乐.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
if(解锁验证==true){
娱乐窗口();
}else{
load("请先激活卡密")
}
}}))
layout4.addView(娱乐)

var layout5=new android.widget.LinearLayout(ctx)
layout5.setOrientation(0)
layout.addView(layout5)


var 卡密=new android.widget.Button(ctx)
卡密.setText("激活卡密")
卡密.setWidth(dip2px(ctx,190));
卡密.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
注册机();//🐔

}}))
layout5.addView(卡密)

var 关于=new android.widget.Button(ctx)
关于.setText("关于")
关于.setWidth(dip2px(ctx,60));
关于.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){

var dialog=new android.app.AlertDialog.Builder(ctx)
dialog.setTitle("关于")
dialog.setMessage("此挂端为全新的3.0版本\n由夜红本尊(maxyeh)与五芒星共同制作\n作者QQ号:\n夜红本尊(maxyeh)(2995523828)\n五芒星(大号:948637195)(小号:3156665087)\n更新请注意群中动态\n尽情奔放喔(*´﹃｀*)")
dialog.setPositiveButton("我知道了",new android.content.DialogInterface.OnClickListener(){
onClick: function(dia,w){
/*点确定时执行*/
}})
dialog.setNeutralButton("复制群号",new android.content.DialogInterface.OnClickListener(){
onClick: function(dia,w){
load("复制成功")
复制("730935749")
}})
dialog.show()

}}))
layout5.addView(关于)

//内容布局 结束

窗口.setContentView(layout);
窗口.setWidth(dip2px(ctx,250));
窗口.setHeight(dip2px(ctx,200));
窗口.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0,0,0,0)));
窗口.showAtLocation(ctx.getWindow().getDecorView(),android.view.Gravity.BOTTOM|android.view.Gravity.RIGHT,坐标x,坐标y);
}catch(err){print(err);}
}}));}



function 功能窗口(){
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
var layout=new android.widget.LinearLayout(ctx)
try{
var menu=new android.widget.PopupWindow(layout, dip2px(ctx,75), dip2px(ctx,30));
menu.setFocusable(true)
var layout=new android.widget.LinearLayout(ctx)
layout.setOrientation(1)

var 便捷按键=new android.widget.Button(ctx)
便捷按键.setText("便捷按键")
便捷按键.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
飞();
设();
回();
}}))
layout.addView(便捷按键)

var 隔空挖=new android.widget.Button(ctx)
隔空挖.setText("隔空挖蛋糕")
隔空挖.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
if (隔空挖蛋糕==false){
隔空挖蛋糕=true
load("已开启隔空挖蛋糕")
}else
if(隔空挖蛋糕==true){
隔空挖蛋糕=false
load("已关闭隔空挖蛋糕")
}
}}))
layout.addView(隔空挖)

var 玩家管理=new android.widget.Button(ctx)
玩家管理.setText("玩家管理")
玩家管理.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
玩家管理按键();
}}))
layout.addView(玩家管理)

var 网易熊房=new android.widget.Button(ctx)
网易熊房.setText("网易熊房")
网易熊房.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
menu.dismiss();

//反盒君魔改
//作者：xuxiqwq

//star已授权使用xuxiqwq
var View=android.view.View;
var String=java.lang.String;
var Integer=java.lang.Integer;

var LinearLayout=android.widget.LinearLayout;
var Runnable=java.lang.Runnable;
var Color=android.graphics.Color;
var MotionEvent=android.view.MotionEvent;
var Matrix=android.graphics.Matrix;
var Bitmap=android.graphics.Bitmap;
var ScrollView=android.widget.ScrollView;
var FrameLayout=android.widget.FrameLayout;
var Gravity=android.view.Gravity;
var RelativeLayout=android.widget.RelativeLayout;
var InputFilter=android.text.InputFilter;
var TextWatcher=android.text.TextWatcher;
var ColorDrawable=android.graphics.drawable.ColorDrawable;
var StringBuilder=java.lang.StringBuilder;

var Button=android.widget.Button;
var TextView=android.widget.TextView;
var EditText=android.widget.EditText;
var ImageView=android.widget.ImageView;
var ImageButton=android.widget.ImageButton;
var PopupWindow=android.widget.PopupWindow;
var SeekBar=android.widget.SeekBar;


var 爱吃萝卜的小兔叽="";
var logo=android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(爱吃萝卜的小兔叽,0),0,android.util.Base64.decode(爱吃萝卜的小兔叽,0).length)

context=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();

context.setTheme(android.R.style.Theme_Material_Light_NoActionBar);
//state
var buttonbg={t:-531890357,//e04bff4b
f:-520139957,//e0ff4b4b
s:-526475618//e09e9e9e
}

var Metrics = context.getResources().getDisplayMetrics();

var ScreenWidth=Metrics.widthPixels;
var ScreenHeight=Metrics.heightPixels;

function dip2px(dips){ 
return Math.ceil(dips * Metrics.density); 
}

function sp2px(sp){
return (sp*Metrics.scaledDensity+0.5);
}

function bitmapScale(bitmap,x,y){
var matrix = new Matrix();  
    matrix.postScale(x/bitmap.getWidth(),y/bitmap.getHeight());
    return Bitmap.createBitmap(bitmap, 0, 0,bitmap.getWidth(),bitmap.getHeight() , matrix,true);
}

function setClick(view,executeString,x){view.setOnClickListener(new View.OnClickListener(){onClick:function(v){
return(eval(executeString));//虽然不需要return
}});
}

function setTouch(view,executeString){view.setOnTouchListener(new View.OnTouchListener(){onTouch:function(v,event){
return(eval(executeString));
}});
}

function setDismiss(popwin,executeString){popwin.setOnDismissListener(new PopupWindow.OnDismissListener(){onDismiss:function(){
eval(executeString);
}});
}

function setSeekBarChange(seekbar,executeString,x){
seekbar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener(){
onProgressChanged:function(seekbar,progress,fromUser){
eval(executeString);
},

onStartTrackingTouch:function(seekbar){
// 
},

onStopTrackingTouch:function(seekbar){
//
},

});
}

function addTextChanged(edit,executeString,x){
edit.addTextChangedListener(new TextWatcher(){

beforeTextChanged:function(str,start,count,after){
},

onTextChanged:function(str,start,before,count){
},

afterTextChanged:function(s){
eval(executeString);
},

});
}



//popwin
var $IconPopwin;
var $MemuPopwin;
var $EnchantPopwin;
//var $TpPopwin;
var $TpMemuPopwin;var $TpModeButtonPopwin;


function DrawIcon(showX,showY){
context.runOnUiThread(new Runnable({run:function(){

if($IconPopwin!=null){
$IconPopwin.showAtLocation(context.getWindow().getDecorView(),android.view.Gravity.LEFT| android.view.Gravity.TOP,showX,showY);
return;
}
var view=new LinearLayout(context);
var iconbutton=new ImageButton(context);
iconbutton.setImageBitmap(bitmapScale(logo,dip2px(50),dip2px(50)));


view.addView(iconbutton);
iconbutton.setBackgroundColor(Color.argb(0,0,0,0));

var popwin=new PopupWindow(view,
LinearLayout.LayoutParams.WRAP_CONTENT,
LinearLayout.LayoutParams.WRAP_CONTENT
);
//show
popwin.showAtLocation(context.getWindow().getDecorView(),android.view.Gravity.LEFT| android.view.Gravity.TOP,showX,showY);
//state
$IconPopwin=popwin;
setClick(iconbutton,"IconPopwinClick();");
setTouch(iconbutton,"IconPopwinMove(event);");
}}));
}


//可能是因为太好改了所以。。。。。
var MemuButtons=[
//text,rs:[raplace string <eval>],checktest,exe//--把//删除试试 （滑稽）

{text:"上天",exe:"setPosition(Player.getEntity(),Player.getX(),Player.getY()+15,Player.getZ());Player.setFlying(true);"},
{text:"入地",exe:"setPosition(Player.getEntity(),Player.getX(),Player.getY()-10,Player.getZ());Player.setFlying(true);"},
{text:"稳定飞行",
checktest:function(){return Player.canFly();},
exe:"Player.setCanFly(!Player.canFly());"},
{text:"究极神器:崩服蛋",exe:"Entity.setCarriedItem(getPlayerEnt(),383,64,259)"},
{text:"添加隐身药水",exe:"Entity.setCarriedItem(getPlayerEnt(),373,1,8)"},
{text:"y+穿墙",exe:"setPosition(Player.getEntity(),Player.getX(),Player.getY()+5,Player.getZ());"},
{text:"y-穿墙",exe:"setPosition(Player.getEntity(),Player.getX(),Player.getY()-5,Player.getZ());"},
{text:"添加钻石镐",exe:"Entity.setCarriedItem(getPlayerEnt(),278,1,0)"},
{text:"添加篮球打蔡徐坤",exe:"Entity.setCarriedItem(getPlayerEnt(),383,64,54)"},
{text:"时运&锋利&效率&击退&耐久附魔",exe:"Player.enchant(Player.getSelectedSlotId(),Enchantment.FORTUNE,-98305);"+"Player.enchant(Player.getSelectedSlotId(),Enchantment.SHARPNESS,-98305);"+"Player.enchant(Player.getSelectedSlotId(),Enchantment.EFFICIENCY,-98305);"+"Player.enchant(Player.getSelectedSlotId(),Enchantment.KNOCKBACK,-98305);"+"Player.enchant(Player.getSelectedSlotId(),Enchantment.UNBREAKING,-98305);"},
{text:"SuperKB附魔",exe:"Player.enchant(Player.getSelectedSlotId(),Enchantment.KNOCKBACK,-98305);"+"Player.enchant(Player.getSelectedSlotId(),Enchantment.UNBREAKING,-98305);"+"Player.enchant(Player.getSelectedSlotId(),Enchantment.UNBREAKING,-98305);"},
{text:"添加钻石剑",exe:"Entity.setCarriedItem(getPlayerEnt(),276,1,0)"},
{text:"添加卡房神器",exe:"Entity.setCarriedItem(getPlayerEnt(),21,64,0)"},
{text:"添加隐形基岩",exe:"Entity.setCarriedItem(getPlayerEnt(),95,64,0)"},
{text:"添加基岩",exe:"Entity.setCarriedItem(getPlayerEnt(),7,64,0)"},
{text:"添加刷怪笼",exe:"Entity.setCarriedItem(getPlayerEnt(),52,64,0)"},
{text:"一键苏维埃",exe:"Entity.setCarriedItem(getPlayerEnt(),325,5,10)"},
{text:"炫富装B",exe:"Entity.setCarriedItem(getPlayerEnt(),57,64,0)"},
{text:"推荐:末影水晶蛋",exe:"Entity.setCarriedItem(getPlayerEnt(),383,64,71)"},
{text:"推荐:添加卫道士蛋",exe:"Entity.setCarriedItem(getPlayerEnt(),383,64,57)"},
{text:"获取苦力怕蛋",exe:"Entity.setCarriedItem(getPlayerEnt(),383,64,33)"},
{text:"获取附魔苹果",exe:"Entity.setCarriedItem(getPlayerEnt(),466,64,0)"},
{text:"添加末影龙蛋",exe:"Entity.setCarriedItem(getPlayerEnt(),383,64,53)"},
{text:"添加凋零蛋",exe:"Entity.setCarriedItem(getPlayerEnt(),383,64,52)"},
{text:"添加闪电蛋",exe:"Entity.setCarriedItem(getPlayerEnt(),383,64,93)"},
{text:"爆破屑运营",exe:"Entity.setCarriedItem(getPlayerEnt(),383,64,65)"},
{text:"添加龙息蛋",exe:"Entity.setCarriedItem(getPlayerEnt(),383,64,79)"},
{text:"添加凋灵头蛋（蓝）",exe:"Entity.setCarriedItem(getPlayerEnt(),383,64,91)"},
{text:"添加火球蛋",exe:"Entity.setCarriedItem(getPlayerEnt(),383,64,85)"},
{text:"z-穿墙",exe:"setPosition(Player.getEntity(),Player.getX(),Player.getY(),Player.getZ()-5);"},
{text:"z+穿墙",exe:"setPosition(Player.getEntity(),Player.getX(),Player.getY(),Player.getZ()+5);"},
{text:"x-穿墙",exe:"setPosition(Player.getEntity(),Player.getX()-5,Player.getY(),Player.getZ());"},
{text:"x+穿墙",exe:"setPosition(Player.getEntity(),Player.getX()+5,Player.getY(),Player.getZ());"}, 
{text:"添加滞留伤害",exe:"Entity.setCarriedItem(getPlayerEnt(),441,1,24)"},
{text:"打开望远镜",exe:
"Entity.addEffect(Player.getEntity(),2,100,1000000,false,false);"//沙雕效果
},
{text:"添加药水效果",exe:
"Entity.addEffect(Player.getEntity(),3,1000000,1000000,false,false);"+
"Entity.addEffect(Player.getEntity(),8,1000000,5,false,false);"+
"Entity.addEffect(Player.getEntity(),16,1000000,1000000,false,false);"
},

];

//这里醉了(›´ω`‹ )
function MemuButtonBGDraw(count,bt){
if(MemuButtons[count].checktest()){bt.setBackgroundColor(buttonbg.t);}
else{bt.setBackgroundColor(buttonbg.f);}
}

function MemuButtonDraw(view){
for(var count=0;count<MemuButtons.length;count++){
var bt=new Button(context);
bt.setElevation(10);

bt.setAllCaps(false);
var btext=new String(MemuButtons[count].text);
/*
if(typeof(MemuButtons[count].rs)!="undefined")
for(var i=0;i<MemuButtons[count].rs.length;i++){
btext=btext.replace("%$"+i,MemuButtons[count].rs[i]());
}
*/
bt.setText(btext);

if(typeof(MemuButtons[count].checktest)!="undefined"){
MemuButtonBGDraw(count,bt);
setClick(bt,MemuButtons[count].exe+"MemuButtonBGDraw(x[0],x[1]);",[count,bt]);
}
else{
bt.setBackgroundColor(buttonbg.s);
setClick(bt,MemuButtons[count].exe,[bt,count]);
}

view.addView(bt,-1,-2);//WRAP_CONTENT,WRAP_FILL_PARENT暂且这么写
}
}

function DrawMemu(showX,showY){
//context.runOnUiThread(new Runnable({run:function(){

if($MemuPopwin!=null){
$MemuPopwin.showAtLocation(context.getWindow().getDecorView(),android.view.Gravity.LEFT| android.view.Gravity.TOP,showX,showY);//ScreenWidth-dip2px(220),dip2px(120));
return;}
var view=new LinearLayout(context);
view.setOrientation(LinearLayout.VERTICAL);
view.setBackgroundColor(-2113870013);//#8200b7ff

var xuxiqwq=new TextView(context);
xuxiqwq.setText("魔改版 xuxiqwq ");
xuxiqwq.setText("魔改版xuxiqwq ");
view.addView(xuxiqwq,-2,-2);
//add buttons

////////////////
MemuButtonDraw(view);
////////////////

var scrollview=new ScrollView(context);
scrollview.addView(view,
-1,-2//WRAP_CONTENT,WRAP_FILL_PARENT
);
var popwin=new PopupWindow(scrollview,
-1,-1//WRAP_FILL_PARENT
);
popwin.setWidth(dip2px(180));
popwin.setHeight(ScreenHeight/2);
popwin.setOutsideTouchable(true);
popwin.setElevation(10);
setDismiss(popwin,"MenuPopwinDismiss();");
popwin.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
popwin.setFocusable(true);
$MemuPopwin=popwin;
//show
popwin.showAtLocation(context.getWindow().getDecorView(),android.view.Gravity.LEFT| android.view.Gravity.TOP,showX,showY);//ScreenWidth-dip2px(220),dip2px(120));

//}}));
}

//tool win//
var $ToolWinIsShow=false;

//be的id按顺序
var EnchantList=[
{id:0,name:"\u4fdd\u62a4"},
{id:1,name:"\u706b\u7130\u4fdd\u62a4"},
{id:2,name:"\u6389\u843d\u4fdd\u62a4"},
{id:3,name:"\u7206\u70b8\u4fdd\u62a4"},
{id:4,name:"\u5f39\u5c04\u7269\u4fdd\u62a4"},
{id:5,name:"\u8346\u68d8"},
{id:6,name:"\u6c34\u4e0b\u547c\u5438"},
{id:7,name:"\u6df1\u6d77\u63a2\u7d22\u8005"},
{id:8,name:"\u6c34\u4e0b\u901f\u6398"},
{id:9,name:"\u950b\u5229"},
{id:10,name:"\u4ea1\u7075\u6740\u624b"},
{id:11,name:"\u622a\u80a2\u6740\u624b"},
{id:12,name:"\u51fb\u9000"},
{id:13,name:"\u706b\u7130\u9644\u52a0"},
{id:14,name:"\u62a2\u593a"},
{id:15,name:"\u6548\u7387"},
{id:16,name:"\u7cbe\u51c6\u91c7\u96c6"},
{id:17,name:"\u8010\u4e45"},
{id:18,name:"\u65f6\u8fd0"},
{id:19,name:"\u529b\u91cf"},
{id:20,name:"\u51b2\u51fb"},
{id:21,name:"\u706b\u77e2"},
{id:22,name:"\u65e0\u9650"},
{id:23,name:"\u6d77\u4e4b\u7737\u987e"},
{id:24,name:"\u9975\u9493"},
{id:25,name:"\u51b0\u971c\u884c\u8005"},
{id:26,name:"\u7ecf\u9a8c\u4fee\u8865"},
{id:27,name:"\u7ed1\u5b9a\u8bc5\u5492"},
{id:28,name:"\u6d88\u5931\u8bc5\u5492"},
{id:29,name:"\u7a7f\u523a"},
{id:30,name:"\u6fc0\u6d41"},
{id:31,name:"\u5fe0\u8bda"},
{id:32,name:"\u5f15\u96f7"},
{id:33,name:"\u591a\u91cd\u5c04\u51fb"},
{id:34,name:"\u7a7f\u900f"},
{id:35,name:"\u5feb\u901f\u88c5\u586b"},
//加了一个。

];

function DrawEnchant(){
$ToolWinIsShow=true;


//context.runOnUiThread(new Runnable({run:function(){

if($EnchantPopwin!=null){
$EnchantPopwin.showAtLocation(context.getWindow().getDecorView(),android.view.Gravity.LEFT| android.view.Gravity.TOP,ScreenWidth/4,ScreenHeight/4);
return;
}

var view=new LinearLayout(context);
view.setOrientation(LinearLayout.VERTICAL);
view.setBackgroundColor(-2113882113);//#8200b7ff
//text         id 0xa
//button    id 0x1
//SeekBar id 0x2
//edit         id 0x3
//params
var textParams=new RelativeLayout.LayoutParams(sp2px(10*5),-2);
textParams.addRule(RelativeLayout.ALIGN_PARENT_LEFT,RelativeLayout.TRUE);
var buttonParams=new RelativeLayout.LayoutParams(-2,-2);
buttonParams.addRule(RelativeLayout.ALIGN_PARENT_RIGHT,RelativeLayout.TRUE);
var editParams=new RelativeLayout.LayoutParams(sp2px(15*5),-2);
editParams.addRule(RelativeLayout.LEFT_OF,0x1);
var sbParams=new RelativeLayout.LayoutParams(-1,-2);
sbParams.addRule(RelativeLayout.RIGHT_OF,0xa);
sbParams.addRule(RelativeLayout.LEFT_OF,0x3);

for(var i=0;i<EnchantList.length;i++){
var relative=new RelativeLayout(context);
var name=new TextView(context);
name.setId(0xa);
var button=new Button(context);
button.setId(0x1);
var sb=new SeekBar(context);
//sb.setId(0x2);
var level=new EditText(context);
level.setId(0x3);

//level.setInputType(InputType.TYPE_CLASS_NUMBER|InputType.TYPE_NUMBER_FLAG_SIGNED);//number
level.setInputType(4098);
level.setText("0");
level.setFocusable(true);
level.setFocusableInTouchMode(true);
level.setFilters([new InputFilter.LengthFilter(6)]);
addTextChanged(level,"EnchantEditChange(s,x);",[level,sb]);

sb.setProgress(32768);
sb.setMax(65535);
sb.setProgress(32768);

sb.setPadding(dip2px(20),0,dip2px(50),0);
setSeekBarChange(sb,"EnchantSeekChange(progress,fromUser,x);",[level]);
name.setText(EnchantList[i].name);
button.setText("\u9644\u9b54");
setClick(button,"EnchantHand("+i+",x[0].getProgress());",[sb]);
//button.setGravity(Gravity.RIGHT);
//name.setGravity(Gravity.LEFT);
//level.setGravity(Gravity.CENTER);
relative.addView(name,textParams);
relative.addView(level,editParams);
relative.addView(button,buttonParams);
relative.addView(sb,sbParams);
view.addView(relative,-1,-2);
}
//dividing line--------
var scrollview=new ScrollView(context);
scrollview.addView(view,
-1,-2//WRAP_FILL_PARENT,WRAP_CONTENT
);
var popwin=new PopupWindow(scrollview,
-1,-1//WRAP_FILL_PARENT
);
popwin.setWidth(ScreenWidth/2);
popwin.setHeight(ScreenHeight/2);
popwin.setOutsideTouchable(true);
popwin.setElevation(10);
setDismiss(popwin,"EnchantPopwinDismiss();");
popwin.setFocusable(true);
popwin.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
popwin.setFocusable(true);
$EnchantPopwin=popwin;
popwin.showAtLocation(context.getWindow().getDecorView(),android.view.Gravity.LEFT| android.view.Gravity.TOP,ScreenWidth/4,ScreenHeight/4);

//}}));
}

/*
function DrawTp(showX,showY){
//context.runOnUiThread(new Runnable({run:function(){

if($TpPopwin!=null){
$TpPopwin.showAtLocation(context.getWindow().getDecorView(),android.view.Gravity.LEFT| android.view.Gravity.TOP,showX,showY);
return;

var view=new LinearLayout(context);
}
//}}));
}*/
//嘻嘻嘻(♡˙︶˙♡)

function TpPlayerRefresh(){
var view=$TpPlayersView;
view.removeAllViews();
var players=Server.getAllPlayers();
for(var i=0;i<players.length;i++){
var player=players[i];
var name=Player.getName(player);
var bt=new Button(context);
bt.setBackgroundColor(buttonbg.s);
bt.setAllCaps(false);
bt.setText(""+name);
setClick(bt,"TpModes[$TpMode].run(x[0]);",[player]);
view.addView(bt,-1,-2);
}

}


var TpModes=[
{id:0,name:"tp",run:function(player){
setPosition(Player.getEntity(),Entity.getX(player),Entity.getY(player),Entity.getZ(player));
}},

{id:1,name:"tpa",run:function(player){
setPosition(player,Player.getX(),Player.getY(),Player.getZ());
}},

];
var $TpMode=0;



function DrawTpMemu(){
//context.runOnUiThread(new Runnable({run:function(){
var showX=0;var showY=0;
if($TpMemuPopwin!=null){
TpPlayerRefresh();
$TpMemuPopwin.showAtLocation(context.getWindow().getDecorView(),android.view.Gravity.LEFT| android.view.Gravity.TOP,showX,showY);
$TpModeButtonPopwin.getContentView().findViewById(0x1).setText(TpModes[$TpMode].name);
$TpModeButtonPopwin.showAtLocation(context.getWindow().getDecorView(),android.view.Gravity.LEFT| android.view.Gravity.TOP,showX+dip2px(180),showY);

return;
}

var view=new LinearLayout(context);
view.setOrientation(LinearLayout.VERTICAL);
view.setBackgroundColor(-2113882113);//#8200b7ff

$TpPlayersView=new LinearLayout(context);
$TpPlayersView.setOrientation(LinearLayout.VERTICAL);
var bt=new Button(context);
bt.setText("刷新");
view.addView(bt,-1,-2);
setClick(bt,"TpPlayerRefresh();");

TpPlayerRefresh();

view.addView($TpPlayersView,-1,-2);

var scrollview=new ScrollView(context);
scrollview.addView(view,
-1,-2//WRAP_FILL_PARENT,WRAP_CONTENT
);
var popwin=new PopupWindow(scrollview,
-1,-1//WRAP_FILL_PARENT
);

popwin.setWidth(dip2px(180));
popwin.setHeight(dip2px(180*1.5));

$TpMemuPopwin=popwin;
setDismiss(popwin,"$TpModeButtonPopwin.dismiss();");
$TpMemuPopwin.showAtLocation(context.getWindow().getDecorView(),android.view.Gravity.LEFT| android.view.Gravity.TOP,showX,showY);

//Mode Button
var mview=new LinearLayout(context);
var modebutton=new Button(context);

modebutton.setText(TpModes[0].name);
modebutton.setBackgroundColor(buttonbg.s);
setClick(modebutton,"if($TpMode>=TpModes.length-1)$TpMode=0;else ++$TpMode;v.setText(TpModes[$TpMode].name);");
modebutton.setId(0x1);
modebutton.setAllCaps(false);
$TpMode=0;
mview.addView(modebutton,-1,-1);

var mpop=new PopupWindow(mview,dip2px(80),dip2px(40));
$TpModeButtonPopwin=mpop;
$TpModeButtonPopwin.showAtLocation(context.getWindow().getDecorView(),android.view.Gravity.LEFT| android.view.Gravity.TOP,showX+dip2px(180),showY);



//}}));
}

//state
var $orgX=null, $orgY=null,$offset=null, $offsetY=null;
var $IconPopwinX=null,$IconPopwinY=null;

function IconPopwinMove(event){
switch (event.getAction()) {
case MotionEvent.ACTION_DOWN:
$orgX =  event.getX();
$orgY = event.getY();
break;
case MotionEvent.ACTION_MOVE:
$offsetX =  event.getRawX()- $orgX;
$offsetY =  event.getRawY() - $orgY;
$IconPopwin.update($offsetX,$offsetY, -1, -1, true);

break;
case MotionEvent.ACTION_UP:
$IconPopwinX=event.getRawX()-event.getX();
$IconPopwinY=event.getRawY()-event.getY();
break;
}
return false;
}

function IconPopwinClick(){

$IconPopwin.dismiss();
DrawMemu($IconPopwinX,$IconPopwinY);
return false;
}

function MenuPopwinDismiss(){
if(!$ToolWinIsShow)
DrawIcon($IconPopwinX,$IconPopwinY);
}

function EnchantPopwinDismiss(){
$ToolWinIsShow=false;
DrawMemu($IconPopwinX,$IconPopwinY);
}

function EnchantHandItem(){
DrawEnchant();
$MemuPopwin.dismiss();
}

function EnchantSeekChange(progress,fromUser,x){
if(fromUser)
x[0].setText(""+(progress-32768));
}

function EnchantEditChange(s,x){
if(s.toString()==""||s.toString()=="-"){var progress=-32768;}else
var progress=parseInt(s.toString())+32768;
if(progress>65535){
x[0].setText("32767");

progress=65535;
x[0].setSelection(5);
}

x[1].setProgress(progress);
}

function EnchantHand(id,level){
///Player.getEnchantments(par1int);
Item.setEnchantType(getCarriedItem(),id,1);
Player.enchant(Player.getSelectedSlotId(),id,-98304+level);
}


MC={
getAllPlayers:function(){
var e=Entity.getAll();
var players=new Array();
for(var i=0;i<e.length;i++){
if(Player.isPlayer(e[i]))
players.push(e[i]);
}
print(e.length+","+e[0]+","+e[length-1]);
return players;
},

}
DrawIcon(ScreenWidth,0.5*ScreenHeight-dip2px(40));


}}))
layout.addView(网易熊房)


var 暗刺部=new android.widget.Button(ctx)
暗刺部.setText("Star 暗刺部 ")
暗刺部.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
menu.dismiss();

var dialog=new android.app.AlertDialog.Builder(ctx)
dialog.setTitle("暗刺部：")
dialog.setMessage("⚔ Digyth §五芒星 花雨庭 坟墓 Grave 0.3\n\n暗杀系统更新内容： \n\n 更新智能自瞄系统\n继承Star3.0残次版 的弱智自瞄\n更新后 锁定跟踪攻击暗杀\n自动躲避攻击围绕敌人攻击死角\n锁定闪现敌人背后(可设置)\n此Js没有其他人有从未发给任何一个人请勿上当")
dialog.setPositiveButton("了解",new android.content.DialogInterface.OnClickListener(){
onClick: function(dia,w){
}})
dialog.setNeutralButton("官方交流",new android.content.DialogInterface.OnClickListener(){
onClick: function(dia,w){
load("已帮您复制好了群号了。")
复制("730935749")
}})
dialog.show()

}}))
layout.addView(暗刺部)


var 综合辅助=new android.widget.Button(ctx)
综合辅助.setText("综合辅助")
综合辅助.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
menu.dismiss();
﻿//    by.Wmx_Star
//
//=============================//
//
//            关注 B站：五芒星星星
//
//                       By : 辅助按钮综合
//                      作者：五芒星
//                      
//
//         网易 五芒星孤儿研究院 群① ：730935749*
//
//=============================//
//           1.2更新内容：
//
//           优化卡顿
//           修复闪退
//           修复ui问题
//           更新了一些小东西
//           重新更改了一下飞行
//   
//      作者：五芒星
//  
//        二改死妈
//    
//==========//
//==========//
//==========//
//==========//

function dip2px(ctx,dips){
return Math.ceil(dips*ctx.getResources().getDisplayMetrics().density)}
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
ctx.runOnUiThread(new java.lang.Runnable({run:function(){
var win=new android.widget.PopupWindow();
var layout=new android.widget.LinearLayout(ctx);
var button=new android.widget.Button(ctx);
button.setText("反")
button.setOnClickListener(new android.view.View.OnClickListener(){onClick:function(v){
Entity.setPosition(getPlayerEnt(),Player.getX()+6,Player.getY(),Player.getZ())
Player.setFlying(false)
clientMessage("§a五§b芒§3星：§19关注B站五芒星星星  ！！！！！")
}});
layout.addView(button);
win.setContentView(layout);
win.setWidth(130);
win.setHeight(90);
win.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0,315,666,5087)))
win.showAtLocation(ctx.getWindow().getDecorView(),android.view.Gravity.RIGHT | android.view.Gravity.TOP,330,200);
}}));

function dip2px(ctx,dips){
return Math.ceil(dips*ctx.getResources().getDisplayMetrics().density)}
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
ctx.runOnUiThread(new java.lang.Runnable({run:function(){
var win=new android.widget.PopupWindow();
var layout=new android.widget.LinearLayout(ctx);
var button=new android.widget.Button(ctx);
button.setText("闪")
button.setOnClickListener(new android.view.View.OnClickListener(){onClick:function(v){
Entity.setPosition(getPlayerEnt(),Player.getX-6(),Player.getY(),Player.getZ())
Player.setFlying(false)
clientMessage("§a五§b芒§3星：§19关注B站五芒星星星  ！！！！！")
}});
layout.addView(button);
win.setContentView(layout);
win.setWidth(130);
win.setHeight(90);
win.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0,315,666,5087)))
win.showAtLocation(ctx.getWindow().getDecorView(),android.view.Gravity.RIGHT | android.view.Gravity.TOP,330,300);
}}));

function dip2px(ctx,dips){
return Math.ceil(dips*ctx.getResources().getDisplayMetrics().density)}
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
ctx.runOnUiThread(new java.lang.Runnable({run:function(){
var win=new android.widget.PopupWindow();
var layout=new android.widget.LinearLayout(ctx);
var button=new android.widget.Button(ctx);
button.setText("⬆️")
button.setOnClickListener(new android.view.View.OnClickListener(){onClick:function(v){
Entity.setPosition(getPlayerEnt(),Player.getX(),Player.getY()+10,Player.getZ())
Player.setFlying(true)
}});
layout.addView(button);
win.setContentView(layout);
win.setWidth(110);
win.setHeight(90);
win.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(315,66,66,66)))
win.showAtLocation(ctx.getWindow().getDecorView(),android.view.Gravity.RIGHT | android.view.Gravity.TOP,1999,400);
}}));

function dip2px(ctx,dips){
return Math.ceil(dips*ctx.getResources().getDisplayMetrics().density)}
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
ctx.runOnUiThread(new java.lang.Runnable({run:function(){
var win=new android.widget.PopupWindow();
var layout=new android.widget.LinearLayout(ctx);
var button=new android.widget.Button(ctx);
button.setText("⬇️️")
button.setOnClickListener(new android.view.View.OnClickListener(){onClick:function(v){
Entity.setPosition(getPlayerEnt(),Player.getX(),Player.getY()-3,Player.getZ())
Player.setFlying(true)
}});
layout.addView(button);
win.setContentView(layout);
win.setWidth(110);
win.setHeight(90);
win.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(315,66,66,66)))
win.showAtLocation(ctx.getWindow().getDecorView(),android.view.Gravity.RIGHT | android.view.Gravity.TOP,1999,520);
}}));

function dip2px(ctx,dips){
return Math.ceil(dips*ctx.getResources().getDisplayMetrics().density)}
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
ctx.runOnUiThread(new java.lang.Runnable({run:function(){
var win=new android.widget.PopupWindow();
var layout=new android.widget.LinearLayout(ctx);
var button=new android.widget.Button(ctx);
button.setText("飞")
button.setOnClickListener(new android.view.View.OnClickListener(){onClick:function(v){
Entity.setPosition(getPlayerEnt(),Player.getX(),Player.getY()+1,Player.getZ())
Player.setFlying(true)
clientMessage("§a五§b芒§3星：§d飞行已为您开启了，亲。\n§19关注B站五芒星星星  ！！！！！")
}});
layout.addView(button);
win.setContentView(layout);
win.setWidth(100);
win.setHeight(100);
win.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(315,66,66,66)))
win.showAtLocation(ctx.getWindow().getDecorView(),android.view.Gravity.RIGHT | android.view.Gravity.TOP,18,250);
}}));

//     分割线


}}))
layout.addView(综合辅助)

var text8=new android.widget.Button(ctx)
text8.setText("附魔")
text8.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
高级附魔();
}}));
layout.addView(text8)

var mlayout=makeMenu(ctx,layout)
menu.setContentView(mlayout)
menu.setWidth(dip2px(ctx,150))
menu.setHeight(dip2px(ctx,300))
menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(60,0,100,250)))
menu.showAtLocation(ctx.getWindow().getDecorView(),android.view.Gravity.LEFT | android.view.Gravity.TOP,dip2px(ctx,0),dip2px(ctx,0))
}catch(err){
print(err)
}
}


function makeMenu(ctx,layout){ 
var mlayout=new android.widget.RelativeLayout(ctx) 
var svParams=new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT,android.widget.RelativeLayout.LayoutParams.FILL_PARENT) 
var scrollview=new android.widget.ScrollView(ctx) 
var pad=dip2px(ctx,2) 
scrollview.setPadding(pad,pad,pad,pad) 
scrollview.setLayoutParams(svParams) 
scrollview.addView(layout) 
mlayout.addView(scrollview) 
return mlayout 
}

function 玩家管理按键(){
ctx.runOnUiThread(new java.lang.Runnable({run:function(){
var win=new android.widget.PopupWindow();
var layout=new android.widget.LinearLayout(ctx);
win.dismiss();
var 菜单布局1背景=new GD();
菜单布局1背景.setStroke(10,颜色(200,221,0,152));
菜单布局1背景.setCornerRadius(5);
layout.setBackground(菜单布局1背景);

//暗杀系统开始








//                   分割线

var button=new android.widget.Button(ctx);
button.setText("玩家")
button.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0,0,0,0)))
button.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(viewarg){ 
玩家列表菜单();
 }}))
layout.addView(button);

win.setContentView(layout);
win.setWidth(110);
win.setHeight(100);
win.showAtLocation(ctx.getWindow().getDecorView(),android.view.Gravity.RIGHT | android.view.Gravity.TOP,500,50);
}}));
}

function 玩家列表菜单(){
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
var layout=new android.widget.LinearLayout(ctx)
try{
var menu=new android.widget.PopupWindow(layout, dip2px(ctx,75), dip2px(ctx,30));
menu.setFocusable(true)
var layout=new android.widget.LinearLayout(ctx)
layout.setOrientation(1)

//Player.getName(uuid)

//暗杀已终结
var 玩家列表=Server.getAllPlayers()
var 玩家0=玩家列表[0]
var 玩家1=玩家列表[1]
var 玩家2=玩家列表[2]
var 玩家3=玩家列表[3]
var 玩家4=玩家列表[4]
var 玩家5=玩家列表[5]
var 玩家6=玩家列表[6]
var 玩家7=玩家列表[7]
var 玩家8=玩家列表[8]
var 玩家9=玩家列表[9]
var 玩家10=玩家列表[10]
var 玩家11=玩家列表[11]

var 功能钮0=new android.widget.Button(ctx)
功能钮0.setText("选择功能配置")
功能钮0.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
玩家配置菜单();
menu.dismiss();
}}))
layout.addView(功能钮0)

var 玩家钮0=new android.widget.Button(ctx)
玩家钮0.setText(Player.getName(玩家0))
玩家钮0.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
当前锁定玩家=玩家0
if(长臂猿==true){
Entity.setCollisionSize(当前锁定玩家, 8, 7);
}
var x=Entity.getX(当前锁定玩家)
var y=Entity.getY(当前锁定玩家)
var z=Entity.getZ(当前锁定玩家)
传送玩家(x,y,z)
}}))
layout.addView(玩家钮0)

var 玩家钮1=new android.widget.Button(ctx)
玩家钮1.setText(Player.getName(玩家1))
玩家钮1.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
当前锁定玩家=玩家1
if(长臂猿==true){
Entity.setCollisionSize(当前锁定玩家, 8, 7);
}
var x=Entity.getX(当前锁定玩家)
var y=Entity.getY(当前锁定玩家)
var z=Entity.getZ(当前锁定玩家)
传送玩家(x,y,z)
}}))
layout.addView(玩家钮1)

var 玩家钮2=new android.widget.Button(ctx)
玩家钮2.setText(Player.getName(玩家2))
玩家钮2.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
当前锁定玩家=玩家2
if(长臂猿==true){
Entity.setCollisionSize(当前锁定玩家, 8, 7);
}
var x=Entity.getX(当前锁定玩家)
var y=Entity.getY(当前锁定玩家)
var z=Entity.getZ(当前锁定玩家)
传送玩家(x,y,z)
}}))
layout.addView(玩家钮2)

var 玩家钮3=new android.widget.Button(ctx)
玩家钮3.setText(Player.getName(玩家3))
玩家钮3.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
当前锁定玩家=玩家3
if(长臂猿==true){
Entity.setCollisionSize(当前锁定玩家, 8, 7);
}
var x=Entity.getX(当前锁定玩家)
var y=Entity.getY(当前锁定玩家)
var z=Entity.getZ(当前锁定玩家)
传送玩家(x,y,z)
}}))
layout.addView(玩家钮3)

var 玩家钮4=new android.widget.Button(ctx)
玩家钮4.setText(Player.getName(玩家4))
玩家钮4.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
当前锁定玩家=玩家4
if(长臂猿==true){
Entity.setCollisionSize(当前锁定玩家, 8, 7);
}
var x=Entity.getX(当前锁定玩家)
var y=Entity.getY(当前锁定玩家)
var z=Entity.getZ(当前锁定玩家)
传送玩家(x,y,z)
}}))
layout.addView(玩家钮4)

var 玩家钮5=new android.widget.Button(ctx)
玩家钮5.setText(Player.getName(玩家5))
玩家钮5.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
当前锁定玩家=玩家5
if(长臂猿==true){
Entity.setCollisionSize(当前锁定玩家, 8, 7);
}
var x=Entity.getX(当前锁定玩家)
var y=Entity.getY(当前锁定玩家)
var z=Entity.getZ(当前锁定玩家)
传送玩家(x,y,z)
}}))
layout.addView(玩家钮5)

var 玩家钮6=new android.widget.Button(ctx)
玩家钮6.setText(Player.getName(玩家6))
玩家钮6.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
当前锁定玩家=玩家6
if(长臂猿==true){
Entity.setCollisionSize(当前锁定玩家, 8, 7);
}
var x=Entity.getX(当前锁定玩家)
var y=Entity.getY(当前锁定玩家)
var z=Entity.getZ(当前锁定玩家)
传送玩家(x,y,z)
}}))
layout.addView(玩家钮6)

var 玩家钮7=new android.widget.Button(ctx)
玩家钮7.setText(Player.getName(玩家7))
玩家钮7.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
当前锁定玩家=玩家7
if(长臂猿==true){
Entity.setCollisionSize(当前锁定玩家, 8, 7);
}
var x=Entity.getX(当前锁定玩家)
var y=Entity.getY(当前锁定玩家)
var z=Entity.getZ(当前锁定玩家)
传送玩家(x,y,z)
}}))
layout.addView(玩家钮7)

var 玩家钮8=new android.widget.Button(ctx)
玩家钮8.setText(Player.getName(玩家8))
玩家钮8.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
当前锁定玩家=玩家8
if(长臂猿==true){
Entity.setCollisionSize(当前锁定玩家, 8, 7);
}
var x=Entity.getX(当前锁定玩家)
var y=Entity.getY(当前锁定玩家)
var z=Entity.getZ(当前锁定玩家)
传送玩家(x,y,z)
}}))
layout.addView(玩家钮8)

var 玩家钮9=new android.widget.Button(ctx)
玩家钮9.setText(Player.getName(玩家9))
玩家钮9.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
当前锁定玩家=玩家9
if(长臂猿==true){
Entity.setCollisionSize(当前锁定玩家, 8, 7);
}
var x=Entity.getX(当前锁定玩家)
var y=Entity.getY(当前锁定玩家)
var z=Entity.getZ(当前锁定玩家)
传送玩家(x,y,z)
}}))
layout.addView(玩家钮9)

var 玩家钮10=new android.widget.Button(ctx)
玩家钮10.setText(Player.getName(玩家10))
玩家钮10.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
当前锁定玩家=玩家10
if(长臂猿==true){
Entity.setCollisionSize(当前锁定玩家, 8, 7);
}
var x=Entity.getX(当前锁定玩家)
var y=Entity.getY(当前锁定玩家)
var z=Entity.getZ(当前锁定玩家)
传送玩家(x,y,z)
}}))
layout.addView(玩家钮10)

var 玩家钮11=new android.widget.Button(ctx)
玩家钮11.setText(Player.getName(玩家11))
玩家钮11.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
当前锁定玩家=玩家11
if(长臂猿==true){
Entity.setCollisionSize(当前锁定玩家, 8, 7);
}
var x=Entity.getX(当前锁定玩家)
var y=Entity.getY(当前锁定玩家)
var z=Entity.getZ(当前锁定玩家)
传送玩家(x,y,z)
}}))
layout.addView(玩家钮11)




var mlayout=makeMenu(ctx,layout)
menu.setContentView(mlayout)
menu.setWidth(dip2px(ctx,150))
menu.setHeight(dip2px(ctx,300))
menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(60,0,100,250)))
menu.showAtLocation(ctx.getWindow().getDecorView(),android.view.Gravity.RIGHT | android.view.Gravity.TOP,dip2px(ctx,0),dip2px(ctx,0))
}catch(err){
print(err)
}
}


function makeMenu(ctx,layout){ 
var mlayout=new android.widget.RelativeLayout(ctx) 
var svParams=new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT,android.widget.RelativeLayout.LayoutParams.FILL_PARENT) 
var scrollview=new android.widget.ScrollView(ctx) 
var pad=dip2px(ctx,2) 
scrollview.setPadding(pad,pad,pad,pad) 
scrollview.setLayoutParams(svParams) 
scrollview.addView(layout) 
mlayout.addView(scrollview) 
return mlayout 
}

function 玩家配置菜单(){
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
var layout=new android.widget.LinearLayout(ctx)
try{
var menu=new android.widget.PopupWindow(layout, dip2px(ctx,75), dip2px(ctx,30));
menu.setFocusable(true)
var layout=new android.widget.LinearLayout(ctx)
layout.setOrientation(1)

var 回上页=new android.widget.Button(ctx)
回上页.setText("回上页")
回上页.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
玩家列表菜单();
menu.dismiss();
}}))
layout.addView(回上页)


var cht=new android.widget.CheckBox(ctx);
cht.setText("长臂猿")
cht.setChecked(长臂猿)
cht.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener(){
onCheckedChanged:function(v,isChecked){
if(长臂猿==false){
长臂猿=true
}else
if(长臂猿==true){
长臂猿=false
}
}});
layout.addView(cht)

var cht1=new android.widget.CheckBox(ctx);
cht1.setText("骑玩家")
cht1.setChecked(骑玩家)
cht1.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener(){
onCheckedChanged:function(v,isChecked){
if(骑玩家==false){
骑玩家=true
}else
if(骑玩家==true){
骑玩家=false
}
}});
layout.addView(cht1)

var cht2=new android.widget.CheckBox(ctx);
cht2.setText("自瞄")
cht2.setChecked(自瞄)
cht2.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener(){
onCheckedChanged:function(v,isChecked){
if(自瞄==false){
自瞄=true
}else
if(自瞄==true){
自瞄=false
}
}});
layout.addView(cht2)



var mlayout=makeMenu(ctx,layout)
menu.setContentView(mlayout)
menu.setWidth(dip2px(ctx,150))
menu.setHeight(dip2px(ctx,300))
menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(60,0,100,250)))
menu.showAtLocation(ctx.getWindow().getDecorView(),android.view.Gravity.RIGHT | android.view.Gravity.TOP,dip2px(ctx,0),dip2px(ctx,0))
}catch(err){
print(err)
}
}


function makeMenu(ctx,layout){ 
var mlayout=new android.widget.RelativeLayout(ctx) 
var svParams=new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT,android.widget.RelativeLayout.LayoutParams.FILL_PARENT) 
var scrollview=new android.widget.ScrollView(ctx) 
var pad=dip2px(ctx,2) 
scrollview.setPadding(pad,pad,pad,pad) 
scrollview.setLayoutParams(svParams) 
scrollview.addView(layout) 
mlayout.addView(scrollview) 
return mlayout 
}

function 娱乐窗口(){
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
var layout=new android.widget.LinearLayout(ctx)
try{
var menu=new android.widget.PopupWindow(layout, dip2px(ctx,75), dip2px(ctx,30));
menu.setFocusable(true)
var layout=new android.widget.LinearLayout(ctx)
layout.setOrientation(1)

var text=new android.widget.Button(ctx)
text.setText("生存")
text.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
Level.setGameMode(0)
}}));
layout.addView(text)

var text1=new android.widget.Button(ctx)
text1.setText("创造")
text1.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
Level.setGameMode(1)
}}));
layout.addView(text1)

var text3=new android.widget.Button(ctx)
text3.setText("土x64")
text3.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
addItemInventory(3,64,0);
}}));
layout.addView(text3)

var text4=new android.widget.Button(ctx)
text4.setText("木x64")
text4.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
addItemInventory(5,64,0);
}}));
layout.addView(text4)

var text5=new android.widget.Button(ctx)
text5.setText("经验")
text5.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
Player.addExp(3156665087)
}}));
layout.addView(text5)

var text6=new android.widget.Button(ctx)
text6.setText("白天")
text6.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
Level.setTime(100);
}}));
layout.addView(text6)

var text7=new android.widget.Button(ctx)
text7.setText("黑夜")
text7.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
Level.setTime(18000);
}}));
layout.addView(text7)

var text8=new android.widget.Button(ctx)
text8.setText("附魔")
text8.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
高级附魔();
}}));
layout.addView(text8)

var mlayout=makeMenu(ctx,layout)
menu.setContentView(mlayout)
menu.setWidth(dip2px(ctx,150))
menu.setHeight(dip2px(ctx,300))
menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(60,0,100,250)))
menu.showAtLocation(ctx.getWindow().getDecorView(),android.view.Gravity.LEFT | android.view.Gravity.TOP,dip2px(ctx,0),dip2px(ctx,0))
}catch(err){
print(err)
}
}


function makeMenu(ctx,layout){ 
var mlayout=new android.widget.RelativeLayout(ctx) 
var svParams=new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT,android.widget.RelativeLayout.LayoutParams.FILL_PARENT) 
var scrollview=new android.widget.ScrollView(ctx) 
var pad=dip2px(ctx,2) 
scrollview.setPadding(pad,pad,pad,pad) 
scrollview.setLayoutParams(svParams) 
scrollview.addView(layout) 
mlayout.addView(scrollview) 
return mlayout 
}

function 注册机(){
ctx.runOnUiThread(new java.lang.Runnable({run:function(){
  var 对话框=new android.app.Dialog(ctx);
对话框.setCancelable(false);

  var 注册机布局=new 线性布局(ctx);
注册机布局.setOrientation(1);
var 标题=new 文本(ctx)
标题.setText("请找作者索取序号                                    \n");
标题.setTextSize(20);
var id=new 文本(ctx);
id.setText("你的ID:"+IMEI);
id.setOnClickListener(new android.view.View.OnClickListener({onClick:function(view){

}}))
var 输入=new 输入框(ctx);
var 宽=new 布局参数(-1,-2);
var copy=new 按钮(ctx);
copy.setOnClickListener(new android.view.View.OnClickListener({onClick:function(view){
复制(String(IMEI));
load("复制成功");
}}))
copy.setText("复制ID");
var 确定=new 按钮(ctx);
确定.setOnClickListener(new android.view.View.OnClickListener({onClick:function(view){
  if(Number(输入.getText())==密码){
对话框.dismiss()
load("密码验证通过")
解锁验证=true
創建文件(path+"/Android/.js/.Mc  Star 验证文件 』/")
保存("/storage/emulated/0/Android/.js/.Mc  Star 验证文件 』/"+密码+".txt","null")
}
else{
load("错误")};
}}))
确定.setText("确定");
  var 退出=new 按钮(ctx);
退出.setOnClickListener(new android.view.View.OnClickListener({onClick:function(view){
对话框.dismiss()
}}))
退出.setText("取消");
id.setLayoutParams(宽);
输入.setLayoutParams(宽);
copy.setLayoutParams(宽);
确定.setLayoutParams(宽);
退出.setLayoutParams(宽);
注册机布局.addView(标题);
注册机布局.addView(id);
注册机布局.addView(输入);
注册机布局.addView(copy);
注册机布局.addView(确定);
注册机布局.addView(退出);
对话框.setContentView(注册机布局);
对话框.show();
}}));
}


function 飞(){
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
ctx.runOnUiThread(new java.lang.Runnable({run:function(){
var win=new android.widget.PopupWindow();
var layout=new android.widget.LinearLayout(ctx);
win.dismiss();
var 菜单布局1背景=new GD();
菜单布局1背景.setStroke(10,颜色(200,221,0,152));
菜单布局1背景.setCornerRadius(5);
layout.setBackground(菜单布局1背景);

var 按钮=new android.widget.Button(ctx)
按钮.setText("飞")
按钮.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0,0,0,0)))
按钮.setOnClickListener(new android.view.View.OnClickListener(){onClick:function(v){
setVelY(getPlayerEnt(),0.5)
Player.setFlying(true)
}});
layout.addView(按钮);
win.setContentView(layout);
win.setWidth(110);
win.setHeight(100);
win.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0,0,0,0)))
win.showAtLocation(ctx.getWindow().getDecorView(),android.view.Gravity.RIGHT | android.view.Gravity.TOP,18,250);
}}));
}




function 设(){
ctx.runOnUiThread(new java.lang.Runnable({run:function(){
var win=new android.widget.PopupWindow();
var layout=new android.widget.LinearLayout(ctx);
win.dismiss();
var 菜单布局1背景=new GD();
菜单布局1背景.setStroke(10,颜色(200,221,0,152));
菜单布局1背景.setCornerRadius(5);
layout.setBackground(菜单布局1背景);
var button=new android.widget.Button(ctx);
button.setText("设")
button.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0,0,0,0)))
button.setOnClickListener(new android.view.View.OnClickListener({
  onClick:function(viewarg)
  { 
xxx=Player.getX()
yyy=Player.getY()
zzz=Player.getZ()
clientMessage("§a五§b芒§3星：§5时空传送点设置完毕，随时准备时空传送！                        §2五芒星 QQ948637195\n§a五§b芒§3星：§5时空传送点设置完毕，随时准备时空传送！                    §2五芒星 QQ948637195\n§a五§b芒§3星：§5时空传送点设置完毕，随时准备时空传送！                    §2五芒星 QQ948637195\n§a五§b芒§3星：§5时空传送点设置完毕，随时准备时空传送！                   §2五芒星 QQ948637195\n§a五§b芒§3星：§5时空传送点设置完毕，随时准备时空传送！\n\n§2---------------五芒星-------------")
 }}))
layout.addView(button);
win.setContentView(layout);
win.setWidth(110);
win.setHeight(100);
win.showAtLocation(ctx.getWindow().getDecorView(),android.view.Gravity.RIGHT | android.view.Gravity.TOP,1100,50);
}}));
}


function 回(){
ctx.runOnUiThread(new java.lang.Runnable({run:function(){
var win=new android.widget.PopupWindow();
var layout=new android.widget.LinearLayout(ctx);
win.dismiss();
var 菜单布局1背景=new GD();
菜单布局1背景.setStroke(10,颜色(200,221,0,152));
菜单布局1背景.setCornerRadius(5);
layout.setBackground(菜单布局1背景);
var button=new android.widget.Button(ctx);
button.setText("回")
button.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0,0,0,0)))
button.setOnClickListener(new android.view.View.OnClickListener({
  onClick:function(viewarg)
  { 
  当前锁定玩家=null
  try{
  if(xxx==null){
  clientMessage("§a五§b芒§3星：§5传送失败，未设置传送点时空未发现漏洞。")
  }
  else{
  setPosition(getPlayerEnt(),xxx,yyy,zzz)
clientMessage("§1五§b芒§3星：§2时空裂痕已经打开，传送完毕！§4（绕系统）\n\n§1五§b芒§3星：§2时空裂痕已经打开，传送完毕！§4（绕系统）\n\n§1五§b芒§3星：§2时空裂痕已经打开，传送完毕！§4（绕系统）\n\n§1五§b芒§3星：§2时空裂痕已经打开，传送完毕！§4（绕系统）\n\n§1五§b芒§3星：§2时空裂痕已经打开，传送完毕！§4（绕系统）\n\n§1五§b芒§3星：§2时空裂痕已经打开，传送完毕！§4（绕系统）")
  }
  }catch(err){load(" 请先设置传送点再进行传送");}
 }}))
layout.addView(button);
win.setContentView(layout);
win.setWidth(110);
win.setHeight(100);
win.showAtLocation(ctx.getWindow().getDecorView(),android.view.Gravity.RIGHT | android.view.Gravity.TOP,1250,50);
}}));
}



//  我太懒了
